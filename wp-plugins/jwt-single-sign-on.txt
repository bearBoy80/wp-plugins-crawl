{"name":"JWT Single Sign On","slug":"jwt-single-sign-on","version":"1.2.0","author":"<a href=\"https:\/\/github.com\/seschi98\/\">seschi98<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/seschi98\/","contributors":{"seschi98":{"profile":"https:\/\/profiles.wordpress.org\/seschi98\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/7c2dc3dfbe8af5acc4d01f41576553a7?s=96&d=monsterid&r=g","display_name":"seschi98"}},"requires":"3.0.1","tested":"5.1.17","requires_php":"5.2","requires_plugins":[],"rating":80,"ratings":{"5":0,"4":1,"3":0,"2":0,"1":0},"num_ratings":1,"support_threads":1,"support_threads_resolved":0,"active_installs":20,"last_updated":"2019-05-09 6:10pm GMT","added":"2019-05-04","homepage":"https:\/\/github.com\/seschi98\/wordpress-jwt-single-sign-on","sections":{"installation":"<ol>\n<li>Upload the downloaded plugin folder to the <code>\/wp-content\/plugins\/<\/code> directory<\/li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress<\/li>\n<li>In the administration dashboard, go to &#8220;Settings&#8221; &gt; &#8220;Single Sign On&#8221; and configure the JWT settings.<\/li>\n<\/ol>\n","faq":"\n<h4>Where can I configure the plugin?<\/h4>\n<p>\n<p>In the administration dashboard, go to &#8220;Settings&#8221; &gt; &#8220;Single Sign On&#8221;.<\/p>\n<\/p>\n<h4>Can I request a feature?<\/h4>\n<p>\n<p>Yes! You can create an issue on GitHub. The repository can be found under https:\/\/github.com\/seschi98\/wordpress-jwt-single-sign-on<\/p>\n<\/p>\n\n","changelog":"<h4>1.2.0<\/h4>\n<ul>\n<li>Adding some validation so that default values for new plugin settings are automatically populated when a plugin update is performed.<\/li>\n<li>Adding the possibility to disable the SSO button on the login page.<\/li>\n<\/ul>\n<h4>1.1.1<\/h4>\n<ul>\n<li>Fixing the plugin name in readme.txt so it is compliant to the WordPress specification<\/li>\n<\/ul>\n<h4>1.1.0<\/h4>\n<ul>\n<li>Updating readme file to provide more information<\/li>\n<li>Updating admin settings page to give more information about the setup process<\/li>\n<li>Removed dependecy for jQueryUI CDN<\/li>\n<li>Adding a proper readme.txt file for WordPress Plugin Directory<\/li>\n<li>Adding the ability to control whether the clientId and site&#8217;s SSO address should be appended to the JWT Server URL<\/li>\n<li>Adding the ability to disable role synchronisation<\/li>\n<\/ul>\n<h4>1.0.0<\/h4>\n<ul>\n<li>Initial Proof-Of-Concept for this plugin.<\/li>\n<\/ul>\n","description":"<p>This plugin allows signing in users via JSON Web Token (JWT) in WordPress. It is used to allow users from another website\/service\/etc. to securely use their credentials for the WordPress site.<br \/>\nSample use case: There is an existing user database (e.g. in an intranet environment) and the users should be able to login to an external site that is powered by wordpress, without having to remember another password. This mechanism is also called Single Sign On (SSO).<br \/>\nPlease note that the user information and role mappings are updated each time the user logs in via SSO. If you do not want to sync the roles from your existing system to wordpress, you can disable the functionality via the settings page.<\/p>\n<h3>JWT Server<\/h3>\n<p>You will need to implement an endpoint on your website\/app that has access to the logged<br \/>\nin user (via login form or Kerberos-like authentication etc). That endpoint needs to create<br \/>\nand sign a JWT with the HS256 algorithm and the below described information in the payload.<br \/>\nIt then has to redirect the user back to the WordPress site <code>https:\/\/example.org\/?auth=jwt&amp;code={jwt}<\/code><br \/>\nwhere <code>{jwt}<\/code> is the signed JWT as string representation.<\/p>\n<p>{<br \/>\n  &#8220;iat&#8221;: 1516239022,<br \/>\n  &#8220;iss&#8221;: &#8220;issuer_name&#8221;,<br \/>\n  &#8220;user_info&#8221;: {<br \/>\n    &#8220;user_login&#8221;: &#8220;johndoe&#8221;,<br \/>\n    &#8220;user_name&#8221;: &#8220;John Doe&#8221;,<br \/>\n    &#8220;first_name&#8221;: &#8220;John&#8221;,<br \/>\n    &#8220;last_name&#8221;: &#8220;Doe&#8221;,<br \/>\n    &#8220;user_email&#8221;: &#8220;johndoe@example.org&#8221;,<br \/>\n    &#8220;user_roles&#8221;: [&#8220;role1&#8221;]<br \/>\n  }<br \/>\n}<\/p>\n","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great start for new JWT plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"4 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"4\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/dragonword\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/b728fddfa3909ee139eb4d2d69de6b47?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/b728fddfa3909ee139eb4d2d69de6b47?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/dragonword\/\" class=\"reviewer-name\">dragonword<\/a> on <span class=\"review-date\">June 3, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Using on my site and excited with it so far.  It does what it says on the tin, although there are a few drawbacks:\n\n- When activated, no users are able to log out\n- Documentation lists auth url parameter as 'jwt', but it should be 'sso'\n- Would be nice if the wordpress login page could automatically redirect to SSO page, or maybe just have a 'continue to SSO' button with the default form hidden until you click 'I am an admin' or something else to use the native auth.  Current display means people will try logging in and then click the SSO button, which is a bit confusing.\n- It is keyed off username AND e-mail.  Email is not a great thing to key off since it may change in future if user changes their email in either SSO site or wordpress site.  Also, in my case, users can have multiple accounts with identical e-mail.  So an option to only key off username only (which cannot be changed in stock wordpress) would be ideal.\n\nThat said, having JWT auth is very useful and am much appreciative for this plugin!  I am really excited to follow this plugin's development, and hope it continues to improve in future too :)<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/jwt-single-sign-on.1.2.0.zip","screenshots":[],"tags":{"jwt":"jwt","login":"login","single-sign-on":"Single Sign-on","singlesignon":"singlesignon","sso":"sso"},"versions":{"1.2.0":"https:\/\/downloads.wordpress.org\/plugin\/jwt-single-sign-on.1.2.0.zip","v1.1.1":"https:\/\/downloads.wordpress.org\/plugin\/jwt-single-sign-on.v1.1.1.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/jwt-single-sign-on.zip"},"donate_link":"","banners":[]}