{"name":"Chess By Blog","slug":"chess-by-blog","version":"1.1.5","author":"<a href=\"http:\/\/www.levork.org\/\">Julian Fong<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/levork\/","contributors":{"levork":{"profile":"https:\/\/profiles.wordpress.org\/levork\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/abeeb5303062d8672fb57bd8564a2c9d?s=96&d=monsterid&r=g","display_name":""}},"requires":"2.0.4","tested":"3.0.5","requires_php":false,"requires_plugins":[],"rating":0,"ratings":{"5":0,"4":0,"3":0,"2":0,"1":0},"num_ratings":0,"support_threads":0,"support_threads_resolved":0,"active_installs":20,"last_updated":"2010-06-24 5:43am GMT","added":"2008-07-31","homepage":"http:\/\/www.levork.org\/cbb","sections":{"description":"<p>Chess By Blog is a plugin for WordPress 2.0 that adds graphical chess<br \/>\nfunctionality to your WordPress blog. It lets you do several things:<\/p>\n<ul>\n<li>PGN (Portable Game Notation) inserted into your post body will be<br \/>\ndisplayed as a graphical board, inline in the browser. The client side<br \/>\ncode was written using the Google Web Toolkit (GWT), resulting in<br \/>\nJavascript (no Java required) that has been tested in Internet<br \/>\nExplorer 6-9, Mozilla\/Firefox, and Safari. The graphical look of<br \/>\nthe chessboard is controlled by themes, and can be easily controlled<br \/>\nin the management panel for the plugin.<\/li>\n<li>The board supports interactive play directly in the browser, in a<br \/>\nmode which does not update the post body. All rules of chess are<br \/>\nsupported, include en passant, castling, and pawn promotion. This can<br \/>\nbe used to present chess problems for readers to work through.<\/li>\n<li>Chess By Blog also supports a persistent game played between two<br \/>\nplayers, hence the name of the plugin. Readers that have edit<br \/>\npermissions on a post can take turns moving pieces, with the state of<br \/>\nthe board saving to the WordPress database between moves. The plugin<br \/>\nuses WordPress and PHP security features to ensure that only moves<br \/>\nthat come from the client chessboard code can update the database.<\/li>\n<\/ul>\n<p>Chess By Blog is free software, distributed under the Expat license (a<br \/>\ncopy of which is in chess-by-blog.php).<\/p>\n<h3>Usage<\/h3>\n<p>The plugin adds a &#8220;Chess By Blog&#8221; to the Quicktag panel that appears<br \/>\nwhen you edit or write a new post. (Unfortunately, at this time there<br \/>\nis no corresponding button in the visual editor.) Clicking the button<br \/>\nwill pop open a new window which allows you to create a new chess<br \/>\nboard. The fields of this board correspond almost directly to the<br \/>\nseven required tags of Portable Game Notation. For the purposes of the<br \/>\nplugin, all fields are optional; accepting the defaults will result in<br \/>\ncode inserted into your post which will create an empty, closed<br \/>\nboard. There are three types of boards that can be set up:<\/p>\n<ul>\n<li>\n<p>Static, non playable board<\/p>\n<p>A static, non playable board can be created by leaving the<br \/>\n&#8220;WordPress ID&#8221; blank and by inserting algebraic move notation in<br \/>\nthe Movelist field. Note that for speed reasons, the input<br \/>\n(particularly pawn moves) isn&#8217;t fully error checked by the<br \/>\nclient code.<\/p>\n<\/li>\n<li>\n<p>Playable, non-persistent board<\/p>\n<p>An interactive, non-persistent board can be created by leaving the<br \/>\nWhite and Black players at the default (i.e. &#8220;*&#8221;). Algebraic move<br \/>\nnotation can be optionally inserted in the move text to set up the<br \/>\nboard. Note that when the board is played interactively, full<br \/>\nvalidation of each move is performed. This mode is ideal for<br \/>\npresenting chess problems that can be worked through by readers.<\/p>\n<\/li>\n<li>\n<p>Playable, persistent board<\/p>\n<p>An interactive and persistent board can be created by selecting<br \/>\nblog users for the White and Black players. These should<br \/>\ncorrespond to the usernames of users of your blog who have at<br \/>\nleast Subscriber Roles.<\/p>\n<\/li>\n<\/ul>\n<p>Alternately, you can forego the usage of the Quicktags button and<br \/>\ninsert PGN directly, enclosed in &#8220;div class=&#8221;CBB-board&#8221; tags. The<br \/>\nclient code will treat standard PGN as a static, non playable<br \/>\nboard. Playable boards can be created by inserting [CBBWhiteId] and<br \/>\n[CBBBlackId] PGN tags with values as described above.<\/p>\n<h3>PGN support<\/h3>\n<p>Chess By Blog fully supports the seven standard PGN tags. Comments<br \/>\nenclosed with curly braces are preserved, and will be shown at the top<br \/>\nof the game log table when the corresponding move is highlighted. In<br \/>\naddition, the FEN and JsCom (only the &#8220;startply&#8221; command is<br \/>\nrecognized) tags are both supported, allowing specification of the<br \/>\ninitial board layout. As an example of the JsCom tag, specifying<br \/>\n [JsCom &#8220;startply 5&#8221;]<br \/>\nwill preposition the board after White&#8217;s 3rd move.<\/p>\n<h3>Chess variant support<\/h3>\n<p>Chess By Blog fully supports FEN (Forsythe-Edwards Notation) via the<br \/>\n&#8220;FEN&#8221; tag in PGN. This allows specification of the initial board<br \/>\nlayout. It also allows for handling of some chess variants.<\/p>\n<p>Fischer Random Chess (or Chess960) is directly supported. The initial<br \/>\nlayout of the pieces must be specified via a FEN tag. Castling is<br \/>\nsupported correctly for this variant.<\/p>\n<p>Capablanca chess is directly supported. The layout of the board must<br \/>\nbe specified via a FEN tag, using &#8220;A&#8221; or &#8220;a&#8221; for the Archbishop and<br \/>\n&#8220;C&#8221; or &#8220;c&#8221; for the Chancellor; a 8&#215;10 piece layout must be specified<br \/>\nas well.<\/p>\n<p>There is limited support for arbitrary board sizes. Castling is<br \/>\nhandled by always moving the King to the &#8216;c&#8217; file if castling on the a<br \/>\nside, or the file to the left of the rightmost file if castling on the<br \/>\nother side; the Rook is always moved to the inner square. This<br \/>\nsupports Fischer Random Chess and Capablanca Random Chess, but does<br \/>\nnot support other variants. In addition, en passant always assumes the<br \/>\npawns start on the 3rd rank.<\/p>\n<h3>Customization<\/h3>\n<p>The look of the client side code is controlled by themes, which live<br \/>\nunder chess-by-blog\/themes. A new theme can be created by adding a<br \/>\nsubdirectory which contains at least a file named &#8220;ChessByBlog.css&#8221;.<br \/>\nThis style sheet should contain the same classes as shown in the<br \/>\ndefault theme. In addition, there is a requirement that the CBB-square<br \/>\nand CBB-button contain width, height, and min-height attributes with<br \/>\nexplicit pixel sizes. The client side code needs these in order to<br \/>\ncorrectly infer the sizes of chessboard squares and buttons.<\/p>\n<h3>Building the client side code<\/h3>\n<p>This step is optional, but if you need to make fundamental changes to<br \/>\nthe code that can&#8217;t covered by changes to CSS, you&#8217;ll need to edit<br \/>\nthe Java source files in src\/org\/levork\/gwt.<\/p>\n<p>The client side code is Javascript which lives in the chess-by-blog<br \/>\nsubdirectory, compiled from Java using the Google Web Toolkit. To<br \/>\nbuild this yourself, you will need to have the Google Web Toolkit<br \/>\ninstalled (at least version 1.7), after which the entire src directory<br \/>\ncan be copied into your Google Web Toolkit folder. It is then<br \/>\nrecommended that you run<\/p>\n<p>webAppCreator -ignore org.levork.gwt.client.ChessByBlog<\/p>\n<p>This will create the build.xml script necessary to compile using<br \/>\nant. Running &#8216;ant build&#8217; will compile the project into the<br \/>\nsubdirectory war\/chessbyblog. The files with cache in their name are<br \/>\nthe Javascript files; these go in wp-content\/plugins\/chess-by-blog<br \/>\n(and the old ones should be deleted, most of them will have different<br \/>\nnames).<\/p>\n<h3>Known issues<\/h3>\n<ul>\n<li>Switching from the code to visual editor may wreak havoc on the<br \/>\ndiv tags, despite the tags being protected by pre tags. This is an<br \/>\nissue with the visual editor.<\/li>\n<li>Internet Explorer may have issues with the preview of new themes in<br \/>\nthe management panel.<\/li>\n<li>There are some broken themes out there that will not work with this<br \/>\nplugin. In particular, if the theme does not make a call to<br \/>\nwp_footer() in footer.php, the Chess By Blog plugin will not be able<br \/>\nto emit the necessary lines of HTML that invoke the Javascript<br \/>\ncode. (That theme may also break other plugins, and is definitely a<br \/>\ntheme bug.) You may be able to fix this by inserting the necessary<br \/>\nwp_footer() call in the theme directory?s footer.php yourself ? try<br \/>\ninserting:<\/p>\n<p>at the beginning of the file.<\/li>\n<\/ul>\n","installation":"<p>Chess By Blog has been tested on WordPress 2.0.4 to 3.0; it is not<br \/>\nsupported for earlier versions.<\/p>\n<p>Before installing, you should back up your WordPress blog,<br \/>\nparticularly if you intend to use the persistent game feature since<br \/>\nthis will make changes directly to your database. The changes should<br \/>\nonly be limited to the body of the post which contains the chess<br \/>\nboard, and I&#8217;m not aware of any issues with the code &#8211; but better safe<br \/>\nthan sorry.<\/p>\n<p>If you are upgrading, it is recommended that you first disable the<br \/>\nplugin, then remove the files in the old chess-by-blog<br \/>\nsubdirectory. This is optional: however, due to the names of the<br \/>\nJavascript scripts created by the Google Web Toolkit, new files tend<br \/>\nto have different names and the old ones aren&#8217;t replaced &#8211; they just<br \/>\ntake up disk space.<\/p>\n<p>The top level contents of the zip folder look like this:<\/p>\n<p>\/chess-by-blog<br \/>\n +&#8211;readme.txt (this file!)<br \/>\n +&#8211;chess-by-blog.php<br \/>\n +&#8211;\/chess-by-blog<br \/>\n +&#8212;-\/themes<br \/>\n +&#8212;-(support files)<br \/>\n +&#8211;\/src<\/p>\n<p>The top level chess-by-blog directory should be copied to your WordPress<br \/>\nwp-content plugins directory. Optionally, unless you are building the<br \/>\nclient side code yourself, you can delete the src directory.<\/p>\n<p>You should now be able to activate the plugin from the WordPress<br \/>\nPlugins administration panel.<\/p>\n","reviews":""},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.5.zip","screenshots":[],"tags":{"chess-post-game-pgn-fen":"chess post game pgn fen"},"versions":{"1.0.3":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.0.3.zip","1.1.0":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.0.zip","1.1.1":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.1.zip","1.1.2":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.2.zip","1.1.3":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.3.zip","1.1.4":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.4.zip","1.1.5":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.1.1.5.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/chess-by-blog.zip"},"donate_link":"","banners":[]}