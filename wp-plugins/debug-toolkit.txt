{"name":"Debug Toolkit","slug":"debug-toolkit","version":"1.0.1","author":"<a href=\"https:\/\/KnowTheCode.io\">hellofromTonya<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/hellofromtonya\/","contributors":{"hellofromtonya":{"profile":"https:\/\/profiles.wordpress.org\/hellofromtonya\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/0c38a54fba6a9049f799462a3bc5798d?s=96&d=monsterid&r=g","display_name":"Tonya Mork"}},"requires":"4.9","tested":"5.1.17","requires_php":"5.6","requires_plugins":[],"rating":100,"ratings":{"5":13,"4":0,"3":0,"2":0,"1":0},"num_ratings":13,"support_threads":1,"support_threads_resolved":0,"active_installs":100,"last_updated":"2019-03-11 3:34pm GMT","added":"2019-03-09","homepage":"https:\/\/wordpress.org\/plugins\/debug-toolkit","sections":{"description":"<p>Debug Toolkit makes debugging your code easier and more enjoyable.  It provides you with interactive and helpful tools:<\/p>\n<ul>\n<li>Better PHP error interface from (<a href=\"http:\/\/filp.github.io\/whoops\/\" rel=\"nofollow ugc\">Whoops<\/a>)<\/li>\n<li>Better variable inspection &#8211; no need to use <code>var_dump<\/code>, <code>print_r<\/code>, or X-debug<\/li>\n<li>An interactive way to back trace the program&#8217;s execution order<\/li>\n<\/ul>\n<h3>Better PHP Error Interface from Whoops<\/h3>\n<p>The built-in PHP error container is basic and not as helpful as it could be.  On top of that, it&#8217;s rather ugly. Wouldn&#8217;t you agree?<\/p>\n<p>Whoops gives you a cool interface that is helpful, interactive, and quite nice to look at.  Some features:<\/p>\n<ul>\n<li>Provides the error message and links to search Google, DuckDuckGo, and Stack Overflow.<\/li>\n<li>Shows the actual code where the error occurred.<\/li>\n<li>Provides an interactive call stack.  Click each and the actual code appears in the viewer panel.<\/li>\n<li>Environment and details including GET Data, POST Data, Files, Cookie, Session, Server\/Request Data, Environment Variables, and Registered Handlers.<\/li>\n<\/ul>\n<p>See the tools in action in this video<\/p>\n<p><div class=\"embed-vimeo\" style=\"text-align: center;\"><iframe loading=\"lazy\" src=\"https:\/\/player.vimeo.com\/video\/322351688\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe><\/div>\n<\/p>\n<h3>Better Variable Inspection<\/h3>\n<p>Though X-debug is powerful, it can be difficult to set up and run.  For that reason, it&#8217;s common to dump or print out the variable to browser.  But the built-in display for the PHP <code>var_dump<\/code> and <code>print_r<\/code> is basic.<\/p>\n<p>This plugin includes both two very popular variable dumper tools:<\/p>\n<ul>\n<li><a href=\"https:\/\/symfony.com\/doc\/current\/components\/var_dumper.html\" rel=\"nofollow ugc\">VarDumper from Symfony<\/a><\/li>\n<li><a href=\"https:\/\/kint-php.github.io\/kint\/\" rel=\"nofollow ugc\">Kint &#8211; a modern and powerful PHP debugging helper<\/a><\/li>\n<\/ul>\n<p>VarDumper provides a simple container that displays where you place it.<\/p>\n<p>On the other hand, Kint provides a more powerful interface that gives you more information such as printing out the expression that was passed into it, the data type, memory size, and the value.<\/p>\n<p>To make it even easier, the following utility functions are available for you to use in your code:<\/p>\n<h4>Available Functions for Inspecting Variable Values<\/h4>\n<p>Let&#8217;s explore the functions that are available for you through this plugin.  We&#8217;ll use the variable inspectors to dump <code>global $post<\/code>.<\/p>\n<p>Note: You can pass in any variable or function that returns a value.<\/p>\n<p>Dumps the given variable(s):<\/p>\n<pre><code>global $post;\n\n\/\/ VarDumper\nvdump( $post );\n\n\/\/ Kint\ndump( $post );\n<\/code><\/pre>\n<p>Dumps the given variable(s) and then exits the program&#8217;s execution:<\/p>\n<pre><code>global $post;\n\n\/\/ VarDumper\nvdump_and_die( $post );\n\n\/\/ Kint\ndump_and_die( $post );\n<\/code><\/pre>\n<p>In addition, there are alias (shorthand) functions available for you if you prefer shorter function names:<\/p>\n<ul>\n<li><code>vd()<\/code> is an alias for <code>vdump()<\/code><\/li>\n<li><code>vdd()<\/code> and <code>vdd()<\/code> are aliases for <code>vdump_and_die()<\/code><\/li>\n<li><code>d()<\/code> is an alias for <code>dump()<\/code><\/li>\n<li><code>dd()<\/code> and <code>ddd()<\/code> are aliases for <code>dump_and_die()<\/code><\/li>\n<\/ul>\n<h3>Tracing Call Stack<\/h3>\n<p>When debugging, there are times when you need to see the order in which functions were called that lead to a certain point in the program.  PHP offers a backtrace that traces back the execution order from the point when the function is invoked.<\/p>\n<p>To make backtracing easier, this plugin provides you with a <code>trace()<\/code> function and combines it with the variable inspect functions.<\/p>\n<p>For example, if you wanted to trace the call stack to the start of the loop in your theme&#8217;s <code>functions.php<\/code> file, you could use this code:<\/p>\n<pre><code>add_action( 'loop_start', function() {\n    trace();\n} );\n<\/code><\/pre>\n<h4>Available Trace Functions<\/h4>\n<p>Place these functions at the point where you want to trace the call stack.<\/p>\n<ul>\n<li><code>trace();<\/code><\/li>\n<li><code>trace_vdump();<\/code> &#8211; Combines <code>trace()<\/code> and <code>vdump()<\/code><\/li>\n<li><code>trace_dump();<\/code> &#8211; Combines <code>trace()<\/code> and <code>dump()<\/code><\/li>\n<li><code>trace_vdump_and_die();<\/code> &#8211; Combines <code>trace()<\/code> and <code>vdump_and_die()<\/code><\/li>\n<li><code>trace_dump_and_die();<\/code> &#8211; Combines <code>trace()<\/code> and <code>dump_and_die()<\/code><\/li>\n<\/ul>\n<p>In addition, there are alias (shorthand) functions available for you if you prefer shorter function names:<\/p>\n<ul>\n<li><code>tracevd();<\/code> &#8211; Combines <code>trace()<\/code> and <code>vd()<\/code><\/li>\n<li><code>traced();<\/code> &#8211; Combines <code>trace()<\/code> and <code>d()<\/code><\/li>\n<li><code>tracevdd();<\/code> &#8211; Combines <code>trace()<\/code> and <code>vdd()<\/code><\/li>\n<li><code>tracedd();<\/code> &#8211; Combines <code>trace()<\/code> and <code>dd()<\/code><\/li>\n<li><code>tracevddd();<\/code> &#8211; Combines <code>trace()<\/code> and <code>vddd()<\/code><\/li>\n<li><code>traceddd();<\/code> &#8211; Combines <code>trace()<\/code> and <code>ddd()<\/code><\/li>\n<\/ul>\n<h3>Admin Bar<\/h3>\n<p>&#8220;DEBUG ACTIVE&#8221; indicator displays in the WordPress admin bar to alert you when the plugin is active.<\/p>\n","installation":"<h4>From your WordPress dashboard<\/h4>\n<ol>\n<li>Visit &#8216;Plugins &gt; Add New&#8217;<\/li>\n<li>Search for &#8216;Debug Toolkit&#8217;<\/li>\n<li>Activate Debug Toolkit from your Plugins page.<\/li>\n<\/ol>\n","faq":"\n<h4>How do I use this utility?<\/h4>\n<p>\n<p>When you are testing or debugging your code, you can use any of the functions above in place of var_dump( $var ) and print_r( $var ).  No need to wrap it in pre&#8217;s either.<\/p>\n<\/p>\n<h4>What version of PHP do I need?<\/h4>\n<p>\n<p>PHP 5.6, 7.0, 7.1, 7.2, and up.<\/p>\n<\/p>\n<h4>Can I run this on a live site?<\/h4>\n<p>\n<p>I wouldn&#8217;t unless you are testing.  This tool is for debug only.  Once you push the site live, deactivate and delete this plugin.<\/p>\n<\/p>\n<h4>What should I do when the site goes live?<\/h4>\n<p>\n<p>Deactivate and delete this plugin.<\/p>\n<\/p>\n\n","changelog":"<h4>Version 1.0.1<\/h4>\n<ul>\n<li>Removed changing the admin color palette.<\/li>\n<li>Removed changing the admin bar background color.<\/li>\n<\/ul>\n<h4>Version 1.0.0<\/h4>\n<ul>\n<li>First release<\/li>\n<\/ul>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-1.png?rev=2048407\"><img src=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-1.png?rev=2048407\" alt=\"The better PHP error interface from Whoops.\"><\/a><p>The better PHP error interface from Whoops.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-2.png?rev=2048407\"><img src=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-2.png?rev=2048407\" alt=\"The results of running &lt;code&gt;vdump()&lt;\/code&gt; and &lt;code&gt;vdump_and_die()&lt;\/code&gt;.\"><\/a><p>The results of running <code>vdump()<\/code> and <code>vdump_and_die()<\/code>.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-3.png?rev=2048407\"><img src=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-3.png?rev=2048407\" alt=\"The results of running &lt;code&gt;dump()&lt;\/code&gt; and &lt;code&gt;dump_and_die()&lt;\/code&gt;.\"><\/a><p>The results of running <code>dump()<\/code> and <code>dump_and_die()<\/code>.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-4.png?rev=2048407\"><img src=\"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-4.png?rev=2048407\" alt=\"The results of running &lt;code&gt;trace()&lt;\/code&gt;.\"><\/a><p>The results of running <code>trace()<\/code>.<\/p><\/li><\/ol>","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Saved me many times<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/sebd86\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/c3f9be587ccc8656bad714cb945f70a4?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/c3f9be587ccc8656bad714cb945f70a4?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/sebd86\/\" class=\"reviewer-name\">S\u00e9bastien Dumont <small>(sebd86)<\/small><\/a> on <span class=\"review-date\">July 25, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This is a must have developers tool. Can't work without it. Highly recommend it.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Best Plugin For Devs<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pyrobd\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7b6536eb3b42c930f8829031d22c2541?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7b6536eb3b42c930f8829031d22c2541?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pyrobd\/\" class=\"reviewer-name\">Lukman Nakib <small>(pyrobd)<\/small><\/a> on <span class=\"review-date\">December 10, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">One of my favourite plugin. Helps a lot with development and debugging. Please keep it update or if we could get a chance to contribute we would love that.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Really worth it !<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/hasanuzzamanshamim\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d302150bad450b0857dd9a197c6ac23d?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d302150bad450b0857dd9a197c6ac23d?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/hasanuzzamanshamim\/\" class=\"reviewer-name\">Hasanuzzaman <small>(hasanuzzamanshamim)<\/small><\/a> on <span class=\"review-date\">April 13, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This plugin is amazing, Highly recommended for developers. <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Absolutely Essential | Makes Me Actually Enjoy Debugging PHP<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/jaballadares6\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/dff921d17ae6ddc8e24d334ed70295b6?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/dff921d17ae6ddc8e24d334ed70295b6?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/jaballadares6\/\" class=\"reviewer-name\">jaballadares6<\/a> on <span class=\"review-date\">December 12, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">For so long I have been trying to figure out a way to debug my PHP in WordPress similar to how the JS console works (being able to drill down into objects and arrays). I have no idea how much work Tonya put into this, but I am forever indebted!\n\nThank you so much! I wish i could send you a gift basket or make a donation. <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">A must have!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/digitalfisherman\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/aee6fdf06205d5fa8bb6de2da6eef3b5?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/aee6fdf06205d5fa8bb6de2da6eef3b5?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/digitalfisherman\/\" class=\"reviewer-name\">digitalfisherman<\/a> on <span class=\"review-date\">July 29, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Can't live without it !<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Makes debugging super easy<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/jimofhaddonhill\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/2641c83e9edae2b9540544adc380f5d4?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/2641c83e9edae2b9540544adc380f5d4?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/jimofhaddonhill\/\" class=\"reviewer-name\">Jim Ratliff <small>(jimofhaddonhill)<\/small><\/a> on <span class=\"review-date\">July 4, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Makes debugging super easy, particularly for people like me\u2014just starting out in WordPress development. Turn it on, and immediately the errors become apparent.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Part of my build setup on every site now.<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/finchps\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/8134bf0d5c23e66e8b1c6119df3d6e77?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/8134bf0d5c23e66e8b1c6119df3d6e77?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/finchps\/\" class=\"reviewer-name\">Nate Finch <small>(FinchPS)<\/small><\/a> on <span class=\"review-date\">June 10, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This is a great new plugin, and I love having the option to use Kint or VarDumper, they're invaluable. Having Whoops in there is a major plus. Tonya rocks!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Wonderful Plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pratikshrestha\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/6d20bec8e55bbefdd35f1222637da225?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/6d20bec8e55bbefdd35f1222637da225?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pratikshrestha\/\" class=\"reviewer-name\">Pratik Shrestha <small>(pratikshrestha)<\/small><\/a> on <span class=\"review-date\">April 26, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Wonderful plugin to debug errors. A feature request would be to dump the variable in debug.log file as well when define( 'WP_DEBUG_LOG', true ); is set in config file.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Excellent developer companion plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pskli\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/56d5f5e1b141a44250ce311cc23a27cb?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/56d5f5e1b141a44250ce311cc23a27cb?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pskli\/\" class=\"reviewer-name\">Pierre Sa\u00efkali <small>(pskli)<\/small><\/a> on <span class=\"review-date\">March 31, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I've just discovered this plugin after years of WP development and it's super useful! I'm not a fan of xDebugging variables; debugging big objects and arrays with dump() or vdump() is very cool, as you can easily open up and close the tree to navigate through it more easily.\nNice work!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Another must have!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/qriouslad\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d8cfd8f51c30981241e31e4e703c93a2?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d8cfd8f51c30981241e31e4e703c93a2?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/qriouslad\/\" class=\"reviewer-name\">qriouslad<\/a> on <span class=\"review-date\">March 24, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Thanks for creating this. Another must have in my plugin development workflow!<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/debug-toolkit.1.0.1.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-1.png?rev=2048407","caption":"The better PHP error interface from Whoops."},"2":{"src":"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-2.png?rev=2048407","caption":"The results of running <code>vdump()<\/code> and <code>vdump_and_die()<\/code>."},"3":{"src":"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-3.png?rev=2048407","caption":"The results of running <code>dump()<\/code> and <code>dump_and_die()<\/code>."},"4":{"src":"https:\/\/ps.w.org\/debug-toolkit\/trunk\/screenshot-4.png?rev=2048407","caption":"The results of running <code>trace()<\/code>."}},"tags":{"backtrace":"backtrace","debug":"debug","debugger":"debugger","print_r":"print_r","var_dump":"var_dump"},"versions":{"1.0.1":"https:\/\/downloads.wordpress.org\/plugin\/debug-toolkit.1.0.1.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/debug-toolkit.zip"},"donate_link":"https:\/\/KnowTheCode.io","banners":{"low":"https:\/\/ps.w.org\/debug-toolkit\/assets\/banner-772x250.png?rev=2047222","high":"https:\/\/ps.w.org\/debug-toolkit\/assets\/banner-1544x500.png?rev=2047222"}}