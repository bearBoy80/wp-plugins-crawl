{"name":"REST API Guard","slug":"rest-api-guard","version":"1.0.3","author":"<a href=\"https:\/\/alley.co\/\">Sean Fisher<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/sean212\/","contributors":{"sean212":{"profile":"https:\/\/profiles.wordpress.org\/sean212\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/525827caf9079e7edb84811724c6042e?s=96&d=monsterid&r=g","display_name":"Sean Fisher"}},"requires":"6.0","tested":"6.3.2","requires_php":"7.4","requires_plugins":[],"rating":100,"ratings":{"5":2,"4":0,"3":0,"2":0,"1":0},"num_ratings":2,"support_threads":1,"support_threads_resolved":0,"active_installs":30,"last_updated":"2023-08-28 8:31pm GMT","added":"2022-10-20","homepage":"https:\/\/github.com\/alleyinteractive\/wp-rest-api-guard","sections":{"installation":"<p>You can install the package via composer:<\/p>\n<pre><code>composer require alleyinteractive\/wp-rest-api-guard\n<\/code><\/pre>\n","description":"<p>Restrict and control access to the REST API.<\/p>\n<h3>Usage<\/h3>\n<p>The WordPress REST API is generally very public and can share a good deal of information with the internet anonymously. This plugin aims to make it easier to restrict access to the REST API for your WordPress site.<\/p>\n<p>Out of the box the plugin can:<\/p>\n<ul>\n<li>Disable anonymous access to the REST API.<\/li>\n<li>Restrict and control anonymous access to the REST API by namespace, path, etc.<\/li>\n<\/ul>\n<h3>Settings Page<\/h3>\n<p>The plugin can be configured via the Settings page (<code>Settings -&gt; REST API Guard<\/code>) or via the relevant filter.<\/p>\n<\/p>\n<h3>Preventing Access to User Information (<code>wp\/v2\/users<\/code>)<\/h3>\n<p>By default, the plugin will restrict anonymous access to the users endpoint. This can be prevented in the plugin&#8217;s settings or via code:<\/p>\n<pre><code>add_filter( 'rest_api_guard_allow_user_access', fn () =&gt; true );\n<\/code><\/pre>\n<h3>Preventing Access to Index (<code>\/<\/code>) or Namespace Endpoints (<code>wp\/v2<\/code>)<\/h3>\n<p>To prevent anonymous users from browsing your site and discovering what plugins\/post types are setup, the plugin restricts access to the index (<code>\/<\/code>) and namespace (<code>wp\/v2<\/code>) endpoints. This can be prevented in the plugin&#8217;s settings or via code:<\/p>\n<pre><code>\/\/ Allow index access.\nadd_filter( 'rest_api_guard_allow_index_access', fn () =&gt; true );\n\n\/\/ Allow namespace access.\nadd_filter( 'rest_api_guard_allow_namespace_access', fn ( string $namespace ) =&gt; true );\n<\/code><\/pre>\n<h3>Restrict Anonymous Access to the REST API<\/h3>\n<p>The plugin can restrict anonymous access for any request to the REST API in the plugin&#8217;s settings or via code:<\/p>\n<pre><code>add_filter( 'rest_api_guard_prevent_anonymous_access', fn () =&gt; true );\n<\/code><\/pre>\n<h3>Limit Anonymous Access to Specific Namespaces\/Routes (Allowlist)<\/h3>\n<p>Anonymous users can be granted access only to specific namespaces\/routes. Requests outside of these paths will be denied. This can be configured in the plugin&#8217;s settings or via code:<\/p>\n<pre><code>add_filter(\n    'rest_api_guard_anonymous_requests_allowlist',\n    function ( array $paths, WP_REST_Request $request ): array {\n        \/\/ Allow other paths not included here will be denied.\n        $paths[] = 'wp\/v2\/post';\n        $paths[] = 'custom-namespace\/v1\/public\/*';\n\n        return $paths;\n    },\n    10,\n    2\n);\n<\/code><\/pre>\n<h3>Restrict Anonymous Access to Specific Namespaces\/Routes (Denylist)<\/h3>\n<p>Anonymous users can be restricted from specific namespaces\/routes. This acts as a denylist for specific paths that an anonymous user cannot access. The paths support regular expressions for matching. The use of the <a href=\"#limit-anonymous-access-to-specific-namespacesroutes-allowlist\" rel=\"nofollow ugc\">Allowlist<\/a> takes priority over this denylist. This can be configured in the plugin&#8217;s settings or via code:<\/p>\n<pre><code>add_filter(\n    'rest_api_guard_anonymous_requests_denylist',\n    function ( array $paths, WP_REST_Request $request ): array {\n        $paths[] = 'wp\/v2\/user';\n        $paths[] = 'custom-namespace\/v1\/private\/*';\n\n        return $paths;\n    },\n    10,\n    2\n);\n<\/code><\/pre>\n","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">The best plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/yworld\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/cff3eb82bce3281dfd26e6137deba5d6?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/cff3eb82bce3281dfd26e6137deba5d6?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/yworld\/\" class=\"reviewer-name\">Yworld<\/a> on <span class=\"review-date\">May 3, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>Plugin works great!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Nice work!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/qriouslad\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d8cfd8f51c30981241e31e4e703c93a2?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d8cfd8f51c30981241e31e4e703c93a2?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/qriouslad\/\" class=\"reviewer-name\">qriouslad<\/a> on <span class=\"review-date\">October 20, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Simple and effective. I love being able to easily turn off access to the REST API.<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.1.0.3.zip","screenshots":[],"tags":{"alleyinteractive":"alleyinteractive","rest-api-guard":"rest-api-guard"},"versions":{"1.0.0":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.1.0.0.zip","1.0.1":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.1.0.1.zip","1.0.2":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.1.0.2.zip","1.0.3":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.1.0.3.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/rest-api-guard.zip"},"donate_link":"","banners":[]}