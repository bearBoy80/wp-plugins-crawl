{"name":"FeedWordPress","slug":"feedwordpress","version":"2022.0222","author":"<a href=\"https:\/\/feedwordpress.radgeek.com\/contact\/\">C. Johnson<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/radgeek\/","contributors":{"radgeek":{"profile":"https:\/\/profiles.wordpress.org\/radgeek\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/4993f53ef6c496a1e873396fc50cbbcd?s=96&d=monsterid&r=g","display_name":"C. Johnson"}},"requires":"4.5","tested":"5.9.8","requires_php":false,"requires_plugins":[],"rating":86,"ratings":{"5":41,"4":7,"3":2,"2":3,"1":6},"num_ratings":59,"support_threads":2,"support_threads_resolved":1,"active_installs":10000,"last_updated":"2022-02-22 9:15pm GMT","added":"2007-11-21","homepage":"http:\/\/feedwordpress.radgeek.com\/","sections":{"description":"<ul>\n<li>Author: <a href=\"http:\/\/feedback.radgeek.com\/contact\" rel=\"nofollow ugc\">C. Johnson<\/a><\/li>\n<li>Project URI: <a href=\"http:\/\/feedwordpress.radgeek.com\/\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/<\/a><\/li>\n<li>License: GPL 2. See License below for copyright jots and tittles.<\/li>\n<\/ul>\n<p>FeedWordPress is an Atom\/RSS aggregator for WordPress. It syndicates content from feeds that you choose into your WordPress weblog, and then the content it syndicates appears as a series of special posts in your WordPress posts database. If you syndicate several feeds then you can use WordPress&#8217;s posts database and templating engine as the back-end of an aggregation (&#8220;planet&#8221;) website. It was developed, originally, as a utility\/hobby project, because I needed a more flexible replacement for <a href=\"http:\/\/www.planetplanet.org\/\" rel=\"nofollow ugc\">Planet<\/a> for aggregator sites that I administered.<\/p>\n<p>FeedWordPress is designed with flexibility, ease of use, and ease of configuration in mind. You&#8217;ll need a working installation of WordPress (version <a href=\"https:\/\/codex.wordpress.org\/Version_4.5\" rel=\"nofollow ugc\">4.5<\/a> or later), and it helps to have SFTP or FTP access to your web host. The ability to create cron jobs on your web host is helpful but not required.<\/p>\n<h3>Using and Customizing FeedWordPress<\/h3>\n<p>FeedWordPress has many options which can be accessed through the WordPress Dashboard, and a lot of functionality accessible programmatically through WordPress templates or plugins. For further documentation of the ins and outs, see the documentation at the <a href=\"http:\/\/feedwordpress.radgeek.com\/\" rel=\"nofollow ugc\">FeedWordPress project homepage<\/a>.<\/p>\n<h3>License<\/h3>\n<p>The FeedWordPress plugin is copyright \u00a9 2005-2017 by Charles Johnson. It uses code derived or translated from:<\/p>\n<ul>\n<li><a href=\"http:\/\/laughingmeme.org\/archives\/002203.html\" rel=\"nofollow ugc\">wp-rss-aggregate.php<\/a> by <a href=\"kellan@protest.net\" rel=\"nofollow ugc\">Kellan Elliot-McCrea<\/a><\/li>\n<li><a href=\"http:\/\/www.simplepie.org\/\" rel=\"nofollow ugc\">SimplePie<\/a> feed parser by Ryan Parman, Geoffrey Sneddon, Ryan McCue, et al.<\/li>\n<li><a href=\"http:\/\/magpierss.sourceforge.net\/\" rel=\"nofollow ugc\">MagpieRSS<\/a> feed parser by <a href=\"kellan@protest.net\" rel=\"nofollow ugc\">Kellan Elliot-McCrea<\/a><\/li>\n<li><a href=\"http:\/\/diveintomark.org\/projects\/feed_finder\/\" rel=\"nofollow ugc\">Ultra-Liberal Feed Finder<\/a> by <a href=\"mark@diveintomark.org\" rel=\"nofollow ugc\">Mark Pilgrim<\/a><\/li>\n<li><a href=\"https:\/\/wordpress.org\/\" rel=\"ugc\">WordPress Blog Tool and Publishing Platform<\/a><\/li>\n<\/ul>\n<p>according to the terms of the <a href=\"http:\/\/www.gnu.org\/copyleft\/gpl.html\" rel=\"nofollow ugc\">GNU General Public License<\/a>.<\/p>\n<p>This program is free software; you can redistribute it and\/or modify it under the terms of the <a href=\"http:\/\/www.gnu.org\/copyleft\/gpl.html\" rel=\"nofollow ugc\">GNU General Public License<\/a> as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.<\/p>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.<\/p>\n","installation":"<p>To use FeedWordPress, you will need:<\/p>\n<ul>\n<li>\n<p>an installed and configured copy of <a href=\"https:\/\/wordpress.org\/\" rel=\"ugc\">WordPress<\/a> (version 4.5 or later).<\/p>\n<\/li>\n<li>\n<p>the ability to install new plugins on your site using either WordPress&#8217;s Plugins Repository, SFTP, FTP or shell access to your web host<\/p>\n<\/li>\n<\/ul>\n<h4>New Installations<\/h4>\n<ol>\n<li>\n<p>Download the FeedWordPress installation package and extract the files on your computer.<\/p>\n<\/li>\n<li>\n<p>Create a new directory named <code>feedwordpress<\/code> in the <code>wp-content\/plugins<\/code> directory of your WordPress installation. Use an FTP or SFTP client to upload the contents of your FeedWordPress archive to the new directory that you just created on your web host.<\/p>\n<\/li>\n<li>\n<p>Log in to the WordPress Dashboard and activate the FeedWordPress plugin.<\/p>\n<\/li>\n<li>\n<p>Once the plugin is activated, a new <strong>Syndication<\/strong> section should appear in your WordPress admin menu. Click here to add new syndicated feeds, set up configuration options, and determine how FeedWordPress will check for updates. For help, see the <a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/quick-start\" rel=\"nofollow ugc\">FeedWordPress Quick Start<\/a> page.<\/p>\n<\/li>\n<\/ol>\n<h4>Upgrades<\/h4>\n<p>To <em>upgrade<\/em> an existing installation of FeedWordPress to the most recent release:<\/p>\n<ol>\n<li>\n<p>Download the FeedWordPress installation package and extract the files on your computer.<\/p>\n<\/li>\n<li>\n<p>Upload the new PHP files to <code>wp-content\/plugins\/feedwordpress<\/code>, overwriting any existing FeedWordPress files that are there.<\/p>\n<\/li>\n<li>\n<p>Log in to your WordPress administrative interface immediately in order to see whether there are any further tasks that you need to perform to complete the upgrade.<\/p>\n<\/li>\n<li>\n<p>Enjoy your newer and hotter installation of FeedWordPress<\/p>\n<\/li>\n<\/ol>\n","changelog":"<h4>2022.0222<\/h4>\n<ul>\n<li>ADDITIONAL CODE CLEANUP: This version does some additional code clean-up to remove some obsolete methods of generating output, and to do a better job of sanitizing input and escaping output in the FeedWordPress administrative dashboard.<\/li>\n<\/ul>\n<h4>2022.0204<\/h4>\n<ul>\n<li>ADDITIONAL CODE CLEANUP: This version does some additional code clean-up to remove some obsolete methods of generating output, and to do a better job of sanitizing input and escaping output in the FeedWordPress administrative dashboard.<\/li>\n<\/ul>\n<h4>2022.0123<\/h4>\n<ul>\n<li>\n<p>IMPORTANT SECURITY FIX: This version includes an important fix for a security vulnerability reported to me through WPScan and WordPress support channels.<\/p>\n<p>Vulnerability CVE-2021-25055 allowed for an XSS (Cross-Site Scripting) attack using a specially crafted URL for a page within the FeedWordPress admin interface. (To be exploited, an existing user with login credentials that allow them to access the FeedWordPress dashboard would have to follow the malicious URL and log in.) This vulnerability has been corrected in the current version; to protect your site&#8217;s security PLEASE BE SURE TO UPGRADE AS SOON AS POSSIBLE to version 2022.0123 or later, via the WordPress Plugin Repository or via Github.<\/p>\n<\/li>\n<li>\n<p>BUG FIXES: Fixes a number of small possible bugs when creating new syndicated posts under unusual conditions &#8212; a sanity check is built in to avoid infinite loops in case of certain unexpected error outcomes when creating new users; some more possible sources of PHP 8 &#8220;Countable&#8221; warnings are eliminated, etc.<\/p>\n<\/li>\n<\/ul>\n<h4>2021.0713<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 5.6, 5.7.x COMPATIBILITY FIXES. This release introduces fixes to annoying or worse warnings resulting from<br \/>\nthe deprecation of WordPress&#8217;s built-in WP_Feed_Cache class. This should resolve the problem if you are encountering<br \/>\nannoying, worrying, or breaking problems related to the PHP warnings: &#8220;Deprecated: class-wp-feed-cache.php is<br \/>\n<strong>deprecated<\/strong> since version 5.6.0&#8243;, and\/or &#8220;Message: .\/cache is not writable. Make sure you&#8217;ve set the<br \/>\ncorrect relative or absolute path, and that the location is server-writable.&#8221;<\/p>\n<\/li>\n<li>\n<p>Fixes PHP warning for &#8220;count(): Parameter must be an array or an object that implements Countable in<br \/>\n&#8230;\/wp-content\/plugins\/feedwordpress\/feedwordpress.php on line 1566&#8221;<\/p>\n<\/li>\n<li>\n<p>Miscellaneous fixes for other missing variable and global warnings.<\/p>\n<\/li>\n<li>\n<p>Code cleanup and reorganization to allow better modularization of error messages, warning dialogs, and extended text.<\/p>\n<\/li>\n<\/ul>\n<h4>2020.0818<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 5.5 COMPATIBILITY FIXES, RESOLVES WARNING NOTICES OR WP-ADMIN LOCKOUT. WordPress 5.5 incorporated a newer release of SimplePie, version 1.5.5, which is pretty rad, but FeedWordPress classes that relied on SimplePie 1.3.1&#8217;s method signatures would then produce PHP warning notices. That should be pretty innocuous, but depending on web server configurations, some users could get locked out of their own wp-admin interface by the display of error notices in the browser at inopportune times. In any case, I have added code to switch between backward-compatible modules for SimplePie 1.3.1 or updated modules compatible with SimplePie 1.5.5, based on the version available in your WordPress installation; so these notices and their untoward effects should be eliminated.<\/p>\n<\/li>\n<li>\n<p>PHP 7.4 COMPATIBILITY FIX: Magic quotes were deprecated and then removed back in PHP 5.x, and in PHP 7.4 the vestigial <code>get_magic_quotes_gpc()<\/code> function has been deprecated. We don&#8217;t need to worry about it anymore for versions of PHP still supported by WordPress. The reference to the function in the MyPHP utility class caused PHP warnings in more recent versions of PHP; so it has now been removed.<\/p>\n<\/li>\n<li>\n<p>DIVERS BUG FIXES AND PHP WARNING NOTICES RESOLVED, thanks to @oppiansteve&#8217;s fixes and pull requests. (Thanks!)<\/p>\n<\/li>\n<li>\n<p>JQUERY COMPATIBILITY FIXES, RESOLVES MYSTERIOUS VANISHING FEED SELECTOR IN WP-ADMIN. An upgrade to WordPress&#8217;s packaged jQuery caused the drop-down box for feed settings (in Syndication &gt; Feeds &amp; Updates, Syndication &gt; Posts &amp; Links, etc.) to vanish shortly after pageload. That was awkward, so I disabled the now-incompatible interface chrome that was causing it to vanish.<\/p>\n<\/li>\n<\/ul>\n<h4>2020.0118<\/h4>\n<ul>\n<li>\n<p>WORDPRESS COMPATIBILITY TESTING. It&#8217;s been some time since a public release of FeedWordPress; so I have tested the plugin functionality with recent versions of WordPress and incorporated a number of PHP 7-compatibility related tweaks.<\/p>\n<\/li>\n<li>\n<p>FEED PARSING FAULT TOLERANCE. If FeedWordPress fails to parse a feed using normal XML functions, it will attempt to convert any named entities that may be causing a problem, and then try to parse again. Props to @inanimatt for utility functions that help make the code go.<\/p>\n<\/li>\n<li>\n<p>PAUSING UPDATES. In Syndication &gt; Feeds &amp; Updates, you can now instruct FeedWordPress to temporarily pause or resume updating feeds &#8212; whatever update method you are using, you can put new updates on hold for a while so that you can fiddle with setings, run tests, or do whatever you need to do before allowing updates to resume.<\/p>\n<\/li>\n<li>\n<p>CODE MODERNIZATION, PHP 7.x COMPATIBILITY AND CLEANUP AND REORGANIZATION. I have been dusting out nooks and crannies in the code and hiving more functionality off into discrete modules. A number of FeedWordPress users have also offered pull requests to eliminate bothersome PHP notices and warnings related to PHP 7.x compatibility &#8212; in particular removing uses of deprecated <code>each()<\/code> functions, and avoiding use of <code>count()<\/code> on null values &#8212; which I have rolled into the main branch release. Props to @manzoorwanijk, @tristanleboss, @martinburchell and @oppiansteve<\/p>\n<\/li>\n<\/ul>\n<h4>2017.1020<\/h4>\n<ul>\n<li>\n<p>ADD BOILERPLATE \/ CREDITS FEATURE AVAILABLE IN POSTS &amp; LINKS SETTINGS PANEL. I have added a new settings panel to the off-the-shelf features of FeedWordPress, under Syndication &gt; Posts &amp; Links (or under the Posts settings page for any individual feed), which allows you to define boilerplate text that should appear in connection with every syndicated post, or with every post syndicated from a particular feed. So, for example, if you want each syndicated post to include a byline reading &#8220;This is a syndicated post, reprinted from (LINK TO ORIGINAL SOURCE WEBSITE).&#8221;, you could set up this byline from within the FeedWordPress settings interface, by going to the Boilerplate \/ Credits panel, and adding a line to appear BEFORE the CONTENT of each syndicated post, using the text and shortcode &#8220;This is a syndicated post, reprinted from [source].&#8221; For those of you who have corresponded with me about this feature before, you may be familiar with it from the long-standing &#8220;experimental&#8221; add-on, FWP+: Add Attribution; I&#8217;ve decided that it&#8217;s been enough years, and I&#8217;ve had enough requests, that the Add Attribution feature may as well be included in the main FeedWordPress code.<\/p>\n<p>Back when FeedWordPress was first created, the assumption was that a well-behaved aggregator would include boilerplate text to indicate the source of syndicated posts, but that the best way to do this was to provide a set of syndication-specific template tags so that the administrator setting up the site could edit their Theme template files with constructs like:<\/p>\n<pre><code>&lt;?php if (is_syndicated()) : ?&gt;\n&lt;p class=\"byline\"&gt;This post by &lt;?php the_author(); ?&gt; originally\nappeared at &lt;a href=\"&lt;?php the_syndication_source_link(); ?&gt;\"&gt;&lt;?php\nthe_syndication_source(); ?&gt;&lt;\/a&gt;.&lt;\/p&gt;\n&lt;?php else : ?&gt;\n&lt;p class=\"byline\"&gt;By &lt;?php the_author(); ?&gt;.&lt;\/p&gt;\n&lt;?php endif; ?&gt;\n<\/code><\/pre>\n<p>You can still do this, of course, and for maximum expressive power and flexibility, it is certainly the best way to do it. Template Tags are documented here: <a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/templates\/\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/templates\/<\/a> However, (1) it requires writing PHP code, which not everyone is comfortable doing; and (2) it requires altering template files within your Theme, which is not always possible, especially given the increasing role that prepackaged commercial themes have come to play in the WordPress ecosystem. So, now, you can get some basic features for adding boilerplate text and attribution credits even without touching your template files, and without having to add custom add-ons for FeedWordPress. Enjoy!<\/p>\n<\/li>\n<li>\n<p>MINOR CODE MODERNIZATION, PHP 7.1 COMPATIBILITY AND BUG FIXES. This project is now 12+ years old (good lord), and there are still some places where code was written at a time when PHP was a very different language from what it is now. Props to @david-robinson-practiceweb for pointing out and sending a pull request to fix some instances where obsolete PHP reference notation (<code>&amp;$q<\/code> on parameters and so on) created a compatibility problem for PHP 7.1. Props to an email correspondent for pointing out a place in SyndicatedPost where excerpts should be generated from post content using encoding-aware mb_substr(), instead of naively running them through substr(). I&#8217;ve begun making some efforts throughout to begin auditing some of the creakiest old code in the project, to update what needs updating and improve documentation throughout.<\/p>\n<\/li>\n<\/ul>\n<h4>2017.0913<\/h4>\n<ul>\n<li>\n<p>PARTIAL FIX FOR 2X DUPLICATE POSTS APPEARING ON DUAL HTTP\/HTTPS SITES: Some users reported an issue in which their FeedWordPress sites, which are over both insecure HTTP and over HTTPS, would pick up exactly 2 copies of every post or almost every post from certain feeds, and where the guids for each of the pair of duplicate posts would look exactly alike, except for a difference in the protocol, for example:<\/p>\n<pre><code>http:\/\/www.example.com\/?guid=c1cd28da39e8d7babcf6499983aca545 \nhttps:\/\/www.example.com\/?guid=c1cd28da39e8d7babcf6499983aca545\n<\/code><\/pre>\n<p>&#8230; where www.example.com is the server that your own copy of FeedWordPress is installed. This release of FeedWordPress normalizes post guid prefixes so as to avoid or limit the scope of this problem.<\/p>\n<\/li>\n<li>\n<p>PHP 7 Compatibility: eliminate remaining sources of PHP 7 compatibility-check failures &#8212; remove the use of depreciated mysql_error() function, and make sure all classes make use of __construct() convention for constructors.<\/p>\n<\/li>\n<li>\n<p>AVOID &#8220;PHP Warning: shell_exec() has been disabled for security reasons in [&#8230;]\/feedwordpress\/feeds-page.php on line 197&#8221;: FeedWordPress uses the PHP shell_exec() function in a very narrowly limited way for information gathering, trying to find the real path to curl or wget on your system, so that it can give as realistic as possible a recommendation for the sample crontab line displayed in Syndication &gt; Feeds &amp; Updates. Some web hosting environments disable shell_exec for security reasons (since it could in theory be used to do a lot more stuff than the very limited information gathering FWP uses it for); in which case, this part of the code in FeedWordPress could spit out a nasty-looking and potentially worrisome-looking error message. So, now this code is fenced with checks to make sure that shell_exec is available, before FWP attempts to make use of it.<\/p>\n<\/li>\n<\/ul>\n<h4>2016.1213<\/h4>\n<ul>\n<li>\n<p>WORDPRESS BACKWARD COMPATIBILITY FOR VERSIONS [4.5, 4.7]: This change fixes a fatal PHP error (on some web server configurations you&#8217;d see the message &#8220;Fatal error: require_once(): Failed opening required &#8216;[&#8230;]\/wp-includes\/class-wp-feed-cache.php'&#8221; on others, you might just see an HTTP 500 Internal Server Error or a blank page) when using FeedWordPress with versions of WordPress before 4.7. A    change that I introduced to avoid a code module that had been deprecated in version 4.7 ended up relying on code modules that were only introduced as of version 4.7; so now, instead, FeedWordPress attempts to detect which modules the current version of the WordPress core makes available, and load the right modules depending on your WordPress version.<\/p>\n<p>In theory, up to this point, FeedWordPress supported any version of WordPress from version 3.0 onward. In practice, version 3.0 was released over 6 years ago, and I can realistically commit only to testing out new   releases of FeedWordPress with a few prior versions of WordPress; so I&#8217;ve updated the &#8220;Requires at least&#8221; field to version 4.5, the first major release issued in 2016. If you&#8217;ve really got to use FeedWordPress with older versions of WordPress, it will probably still work with any moderately modern release of WordPress, but I won&#8217;t promise to keep it working with releases of WordPress that are more than about a year old.<\/p>\n<\/li>\n<\/ul>\n<h4>2016.1211<\/h4>\n<ul>\n<li>\n<p>WORDPRESS COMPATIBILITY: Tested with new versions of WordPress up to 4.7.<\/p>\n<\/li>\n<li>\n<p>PHP WARNINGS UNDER WP 4.7: Eliminated cause of a PHP warning under WP 4.7 &#8220;Parameter 1 to FeedWordPressHTTPAuthenticator::set_auth_options expected to be reference&#8221; Warnings were due to a change in how http_api_curl hook is sometimes called in WP 4.7; so I changed the signature of the event handling method to avoid the notice. Props to @cogdog, @froomkin, @gwynethllewelyn et al. for flagging the issue and @garymarkfuller for suggesting a preliminary fix to the issue that was fairly similar to the solution I ended up adopting.<\/p>\n<\/li>\n<li>\n<p>PHP 7 and PHP Strict Standards compatibility changes: @alexiskulash @daidais and @zoul0813 all sent pull requests through Github to fix some issues from a very old code base that has made its way from PHP 3.x through 5.x to the roll-out of PHP 7. Class methods should now fare better under modern versions of PHP and generate fewer &#8220;Deprecated&#8221; notices.<\/p>\n<\/li>\n<li>\n<p>IMPROVEMENTS TO SCHEDULED AND AUTOMATIC UPDATES:  use wp_loaded hook to check for magic URL parameters and to execute updates, to do pageload-based automatic updates, etc. Ensures that anything plugins or themes need to do in init to set up custom post types, taxonomies, etc. will be done before the update_feedwordpress updates are attempted. If you saw posts not getting put into the correct custom post type or custom taxonomies or similar problems when performing scheduled updates, but the problem seemed to go away when you manually performed updates through the wp-admin interface, then you might be able to solve those problems with this update.<\/p>\n<\/li>\n<\/ul>\n<h4>2016.0420<\/h4>\n<ul>\n<li>\n<p>WORDPRESS COMPATIBILITY: Tested with new versions of WordPress up to 4.5.<\/p>\n<\/li>\n<li>\n<p>FILTERS AND ADD-ONS: Allow filters and add-ons to filter terms and taxonomy (categories, tags, custom taxonomies, etc.) more thoroughly and more fine-grainedly using syndicated_post_terms_match, syndicated_post_terms_match_{taxonomy},  syndicated_post_terms_unfamiliar, syndicated_post_terms_mapping, syndicated_item_feed_terms, and syndicated_item_preset_terms filters.<\/p>\n<\/li>\n<li>\n<p>FILTERS AND ADD-ONS: Globals $fwp_channel and $fwp_feedmeta REMOVED. These global variables, originally introduced to allow filters access to information about the source feed in <code>syndicated_item<\/code> filters were deprecated 6+ years ago. If you have any filters or add-ons which still depend on these global variables, you&#8217;ve been using obsolete techniques and you should see about fixing them to access data about the source feed using the SyndicatedPost::link element instead. For documentation, see  the FeedWordPress documentation wiki at <a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedpost\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedpost<\/a> and <a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedlink\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedlink<\/a>.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: Syndication &gt; Diagnostics HTTP diagnostic test widget was broken due to a dumb error on my part. Now fixed.<\/p>\n<\/li>\n<li>\n<p>SMALL CODING CHANGES: Lots of small changes to code organization, incorporation of some PHP 5.x coding conventions, etc.<\/p>\n<\/li>\n<\/ul>\n<h4>2015.0514<\/h4>\n<ul>\n<li>\n<p>IMPORTANT SECURITY UPDATE: This version includes two important fixes for potential security vulnerabilities reported to me through support channels.<\/p>\n<p>The first is a common problem across several plugins due to an ambiguity in the WordPress documentation and a change in the behavior of WordPress&#8217;s built-in add_query_arg() and remove_query_arg() functions which could, under certain low-probability conditions, allow for potential XSS attack vectors. This fixes issue # 39 reported at <a href=\"https:\/\/github.com\/radgeek\/feedwordpress\/issues\/39\" rel=\"nofollow ugc\">https:\/\/github.com\/radgeek\/feedwordpress\/issues\/39<\/a> Thanks to github.com\/quassy<\/p>\n<p>The second fixes a security vulnerability that was reported to me privately (thanks to Adri\u00e1n M. F.) which, under other low-probability conditions, could allow for SQL insertion attacks by a malicious user with access to login credentials, which would compromise data security.<\/p>\n<p>It is <em>IMPORTANT<\/em> and worth your while to upgrade FeedWordPress as soon as possible in order to eliminate these vulnerabilities. If you have any questions or if there is something blocking you from making the upgrade which you need my help with, don&#8217;t hesitate to get in touch.<\/p>\n<\/li>\n<li>\n<p>ADMIN UI BUGFIX: &#8220;Update Now&#8221; button in feeds setting pages should now work once again instead of causing a PHP fatal error. See <a href=\"https:\/\/github.com\/radgeek\/feedwordpress\/issues\/46\" rel=\"nofollow ugc\">https:\/\/github.com\/radgeek\/feedwordpress\/issues\/46<\/a><\/p>\n<\/li>\n<li>\n<p>SEVERAL OTHER SMALL BUG FIXES. See <a href=\"https:\/\/github.com\/radgeek\/feedwordpress\/issues\/32\" rel=\"nofollow ugc\">https:\/\/github.com\/radgeek\/feedwordpress\/issues\/32<\/a> <a href=\"https:\/\/github.com\/radgeek\/feedwordpress\/issues\/30\" rel=\"nofollow ugc\">https:\/\/github.com\/radgeek\/feedwordpress\/issues\/30<\/a> <a href=\"https:\/\/github.com\/radgeek\/feedwordpress\/issues\/29\" rel=\"nofollow ugc\">https:\/\/github.com\/radgeek\/feedwordpress\/issues\/29<\/a> etc.<\/p>\n<\/li>\n<\/ul>\n<h4>2014.0805<\/h4>\n<ul>\n<li>\n<p>FILTERS AND ADD-ONS: A number of new hooks for filters and add-ons to further customize the behavior of FWP have been added.<\/p>\n<\/li>\n<li>\n<p>COMPATIBILITY\/BUGFIX: Many users saw odd characters, especially &#8220;n,&#8221; appearing in posts in versions of WordPress from 3.6 on, due to a change in when the API expects HTML data for posts to be slashed and when it does not. This has been fixed, so that the junk characters should no longer appear, regardless of your version of WordPress.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: A bug preventing FWP from saving categories assigned under Syndication &gt; Categories &amp; Tags has been fixed.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: Post-editing related metaboxes should now show up when you edit items of any post type, including custom types, not only normal WordPress   posts.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: A bug in the admin UI that caused the &#8220;Alternative Feeds&#8221; \/ &#8220;Find Feeds&#8221; box to throw a permissions error has been fixed.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: A bug preventing proper mapping of categories and other terms in 2013.0504 has been fixed.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: A number of small fixes contributed through Github by Flynsarmy should eliminate PHP warnings for many users on several methods that are    called as static methods within FeedWordPress.<\/p>\n<\/li>\n<\/ul>\n<h4>2013.0504<\/h4>\n<ul>\n<li>\n<p>BUGFIX: PHP 5.4 compatibility &#8212; includes some more extensive fixes to compatibility issues with PHP 5.4&#8217;s handling of global variables<\/p>\n<\/li>\n<li>\n<p>DIAGNOSTICS: New diagnostics settings added to help track behavior of terms (categories, post tags, etc.) for syndicated posts.<\/p>\n<\/li>\n<\/ul>\n<h4>2012.0504<\/h4>\n<ul>\n<li>MODULE REORGANIZATION: Should ensure that all needed submodules will be properly included regardless of whether you are installing from github, from SVN, or from the WordPress plugins page. If you&#8217;ve been getting fatal errors about required modules not being found, this release should hopefully resolve the issue.<\/li>\n<\/ul>\n<h4>2012.0503<\/h4>\n<ul>\n<li>\n<p>BUGFIX: Works properly again with WordPress installations that use a MySQL table name prefix other than the default <code>wp_<\/code> prefix.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: Includes a couple of significant PHP 5.4 compatibility fixes. Now that PHP 5.4 is more widely deployed, Diagnostics will now also show PHP version and some other potentially useful troubleshooting    information.<\/p>\n<\/li>\n<li>\n<p>ADMIN UI: Better indicates your options when deleting a syndicated post so as to let you know whether it will be Trashed (and thus not resyndicated) or Erased (and thus potentially resyndicated)<\/p>\n<\/li>\n<li>\n<p>ADMIN UI: Adds an AJAXy Test Expression button to allow live testing of sample results from expressions in Custom Post Settings.<\/p>\n<\/li>\n<\/ul>\n<h4>2012.1218<\/h4>\n<ul>\n<li>\n<p>WORDPRESS VISUAL EDITOR FIXED. There was an unlisted change in the 2012.1212 release which had the effect of disabling the WordPress Visual Editor for all posts syndicated by FeedWordPress. Many users reported this as a bug. It was actually a deliberate decision &#8212; a crappy way to try to deal with a crappy situation. (Many users had previously reported a &#8220;bug&#8221; in which all the paragraph or line breaks seemed to be stripped out of their syndicated posts; the issue turned out to be that the Visual Editor was stripping out <code>&lt;p&gt;<\/code> and <code>&lt;br\/&gt;<\/code> tags on the assumption that the resulting post would be sent through standard WordPress formatting filters. But under default settings, posts syndicated by FWP deliberately bypass WordPress formatting filters.) In any case, this version adopts a more flexible compromise. <em>If<\/em> FeedWordPress is set up to bypass WordPress formatting filters (as it is by default), <em>then<\/em> the Visual Editor will be disabled for syndicated posts (since using it would produce incorrect results). If on the other hand FeedWordPress is set up to expose syndicated posts to WordPress formatting filters (as it usually is for those using the Visual Editor to manually edit posts), then the Visual Editor tab will be re-enabled for syndicated posts.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: PERMALINKS REWRITTEN FOR CUSTOM POST TYPES AS WELL AS NORMAL<br \/>\nWORDPRESS POSTS. If you had WordPress set up to syndicate incoming posts<br \/>\nto a custom post type (under Syndication &gt; Posts &amp; Links), and asked<br \/>\nFeedWordPress to make &#8220;permalinks point to the original site&#8221;, then<br \/>\nprevious versions of FeedWordPress would fail to do the rewriting &#8212;<br \/>\npermalinks would only be rewritten to point to the original source for<br \/>\nnormal WordPress posts, not for custom post types. In 2012.1218 this bug<br \/>\nhas been fixed: all post types will now have permalinks rewritten unless<br \/>\nyou request for permalinks to point to the local copy on your aggregator<br \/>\nsite.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: ELIMINATES &#8220;PHP Fatal error: Call to a member function<br \/>\nsetting() on a non-object&#8230;.&#8221; Some changes to the in-memory caching of<br \/>\ninformation about feed subscriptions could result in a fatal PHP error<br \/>\nin cases where you have de-activated one of your subscriptions, but<br \/>\nposts from that subscription were still in the archive. This would<br \/>\nnormally show up through half-completed feeds or half-completed pages<br \/>\nthat suddenly broke off in the middle, and displayed or logged an error<br \/>\nmessage like: &#8220;PHP Fatal error: Call to a member function setting() on a<br \/>\nnon-object in {&#8230;}\/wp-content\/plugins\/feedwordpress\/feedwordpress.php<br \/>\non line 615&#8221;. This bug has been eliminated, so affected feeds and pages<br \/>\nshould now render correctly, and the error message should no longer<br \/>\nappear.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: CATEGORY BOXES IN SYNDICATION &gt; CATEGORIES &amp; TAGS. Some minor<br \/>\nbugs in the appearance and animation of category checkboxes (for<br \/>\nexample, the checkbox used to select categories for syndicated posts on<br \/>\nthe Syndication &gt; Categories &amp; Tags settings page) have been fixed.<\/p>\n<\/li>\n<\/ul>\n<h4>2012.1212<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 3.5 COMPATIBILITY: This release has been tested for compatibility<br \/>\nwith new releases of WordPress, up to version 3.5, and any documented<br \/>\ncompatibility issues have been cleared &#8212; in particular, if you were seeing<br \/>\nerror pages stating that you don&#8217;t have permission to access the<br \/>\nFeedWordPress Syndication page within the WordPress admin interface, then<br \/>\nupgrading to this release should fix the problem.<\/p>\n<p>As always, if you encounter any compatibility problems after upgrading your<br \/>\nversion of WordPress and your version of FeedWordPress to the most recent<br \/>\nversions, please contact me with as detailed a description as possible of<br \/>\nthe issue you are encountering, the circumstances you&#8217;re encountering it<br \/>\nunder, what you expect to see happening, and what is happening instead.<\/p>\n<\/li>\n<li>\n<p>PHP 5.4 COMPATIBILITY: This release has been audited to fix potential<br \/>\nproblems with deprecation notices or fatal errors under recent versions<br \/>\nof PHP. In particular, all uses of run-time pass-by-reference have been<br \/>\neliminated from the code; if you were seeing a fatal error reading<br \/>\n&#8220;Call-time pass-by-reference has been removed &#8230;&#8221; then upgrading to<br \/>\nthis release should fix the problem.<\/p>\n<\/li>\n<li>\n<p>CUSTOMIZATION FRAMEWORK: A great deal of work has been done to make the<br \/>\nunderlying framework more flexible, so that PHP add-ons can be written<br \/>\nto adapt FeedWordPress to handle custom XML vocabularies, expiration of<br \/>\nposts under specified conditions, and other custom behavior.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: MANUALLY EDITED POST SLUGS NOT OVERWRITTEN. Thanks to a report<br \/>\nby Chris Fritz, I&#8217;ve identified some code that causes post slugs for the<br \/>\nposts generated by FWP to be rewritten with every update, even if the<br \/>\nuser has manually updated the slug from within the WordPress editing<br \/>\ninterface. This has been fixed: FWP will continue to generate new slugs<br \/>\nfor syndicated posts, but when syndicated posts are updated, they will<br \/>\nretain the slug that they had at the time of the update; any manual<br \/>\nchanges to the post slug should be preserved.<\/p>\n<\/li>\n<li>\n<p>USER-AGENT STRING: FeedWordPress now sends a distinctive User-Agent<br \/>\nstring identifying itself, and noting that it is a feed aggregator.<\/p>\n<\/li>\n<li>\n<p>MISCELLANEOUS PERFORMANCE IMPROVEMENTS: A number of changes have been<br \/>\nmade to try to reduce the intensity and expense in terms of both<br \/>\ndatabase performance and web server memory consumption.<\/p>\n<\/li>\n<li>\n<p>DIAGNOSTICS IMPROVEMENTS: A number of new and improved diagnostics have<br \/>\nbeen added which should aid in understanding and troubleshooting issues<br \/>\nthat may arise.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.1019<\/h4>\n<ul>\n<li>\n<p>BUGFIX: &#8220;THERE ARE NO HTTP TRANSPORTS AVAILABLE&#8221; ERROR FIXED: The initial<br \/>\nsupport for HTTP Basic and Digest authentication in version 2011.1018<br \/>\ncontained a bug that could cause HTTP requests for feeds or for other<br \/>\nWordPress resources to break down if you do not have the PHP curl module<br \/>\ninstalled. This bug has been fixed, and these errors should no longer<br \/>\nappear.<\/p>\n<\/li>\n<li>\n<p>IMPROVED HTTP AUTHENTICATION SUPPORT: In addition, the HTTP Authentication<br \/>\nsupport in FeedWordPress has been extended, to ensure that Basic<br \/>\nauthentication is available in many web host configurations, and to allow<br \/>\nyou to add a username and password for a feed immediately when you<br \/>\nsubscribe to it.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.1018<\/h4>\n<ul>\n<li>\n<p>HTTP BASIC AND DIGEST AUTHENTICATION SUPPORT: FeedWordPress now offers<br \/>\nimproved support for syndicating feeds that make use of HTTP Basic or HTTP<br \/>\nDigest authentication methods. In order to set up authentication on one of<br \/>\nyour feeds, just go to its Settings &gt; Feed page, and click on the &#8220;Uses<br \/>\nUsername\/Password&#8221; link underneath the Feed URL. Enter the username and<br \/>\npassword for accessing the feed, then select the authentication method. (If<br \/>\nyou&#8217;re not sure which method your feed provider uses, try Basic first.)<br \/>\nSave Changes, and syndicate away.<\/p>\n<p>NOTE: HTTP Digest support requires the curl module for PHP. If you are not<br \/>\nsure whether this module has been installed, contact your web hosting<br \/>\nprovider to check.<\/p>\n<\/li>\n<li>\n<p>WP 3.3 (BETA) COMPATIBILITY: This version fixes an init-sequence bug that<br \/>\ncould cause intrusive warning messages or fatal errors in WP 3.3 beta<br \/>\nversions.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: FIXES LONG DELAYS IN UPDATES SCHEDULES IN LARGE INSTALLATIONS. A<br \/>\nperformance feature introduced in version 2011.0721 had some flaws in its<br \/>\nimplementation, which tended to create serious delays (on the order of<br \/>\nseveral hours) in FeedWordPress&#8217;s attempts to schedule updates for feeds,<br \/>\nwhen users had a very large number of feeds (several dozen or more) in their<br \/>\nFeedWordPress installation. This feature has been reconfigured to adjust<br \/>\ndynamically to the number of feeds in Syndicated Sources and the frequency<br \/>\nwith which they are updated. If you&#8217;ve seen a lot of ready-to-update feeds<br \/>\npiling up, several hours after they were supposed to get updated, then this<br \/>\nupgrade should better ensure that your feeds get updated in a timely fashion.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: syndicated_item_guid FILTERS FIXED. Previous versions of<br \/>\nFeedWordPress theoretically allowed for filters on the syndicated_item_guid<br \/>\nhook, which was intended to filter the globally-unique identifier element<br \/>\n(rss:guid or atom:id) &#8212; useful if you need to convince FeedWordPress to use<br \/>\ndifferent guids, or to recognize two or more incoming posts as versions of<br \/>\nthe same post rather than as distinct items. However, while the hook<br \/>\naffected the guid stored in the WordPress database, it did not affect the<br \/>\nguid used to check whether an incoming feed item had already been syndicated<br \/>\nor was a new item &#8212; which greatly limited the practical usefulness of the<br \/>\nfilter. This bug has been fixed: syndicated_item_guid filters should now<br \/>\nproperly control not only the final database record, but also the initial<br \/>\nuniqueness test applied to posts.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0721<\/h4>\n<ul>\n<li>\n<p>BUGFIX: SERIOUS BUG CAUSING RARE UNEXPECTED DELETION OF PAGES AND OTHER<br \/>\nCONTENT. A bug in the guid-checking code for some rare kinds of guids could<br \/>\ncause content in the wp_posts table to seemingly disappear at random after<br \/>\nFeedWordPress updates.This most frequently but not exclusively affected<br \/>\nstatic pages. What actually happened is that in these rare cases the<br \/>\nexisting static page was mistaken for an older version of the new incoming<br \/>\nsyndicated post, which was then stored as a new revision of the original<br \/>\npage. The bug that caused these mistaken identities has been fixed.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: UNWANTED AUTOMATIC PAGE-LOAD-BASED UPDATES NO LONGER A NUISANCE.<br \/>\nSome users encountered a bug in which FeedWordPress would adopt an automatic<br \/>\npage-load-based update method, even if they had requested that it not do<br \/>\nso, and that it use a manual or cron job update method instead. The bug<br \/>\ncausing this has been fixed, and page-load-based updates should no longer<br \/>\ntrigger unless explicitly turned on.<\/p>\n<\/li>\n<li>\n<p>WP 3.2 USER INTERFACE COMPATIBILITY: POST TAGS BOX NOW WORKS AGAIN. The<br \/>\nrelease of WordPress 3.2 caused a breakage in the tags box which prevented<br \/>\nyou from adding or removing tags under Syndication &#8211;&gt; Categories &amp; Tags.<br \/>\n(The breakage was the result of an incompatibility introduced by the new<br \/>\nrelease of jQuery.) This breakage has now been fixed, and the tags box<br \/>\nshould work correctly again.<\/p>\n<\/li>\n<li>\n<p>FEED UPDATE SCHEDULING IMPROVEMENTS: UI. The Syndicated Sources table now<br \/>\nprovides considerably more data to understand update scheduling, when<br \/>\nspecific scheduling decisions are made because of, e.g., requests from the<br \/>\nfeed producer.<\/p>\n<\/li>\n<li>\n<p>FEED UPDATE SCHEDULING IMPROVEMENTS: ENFORCEABLE &#8220;MINIMUM INTERVAL&#8221; SETTING<br \/>\nTO SPACE OUT UPDATES. Some feeds request specific update schedules, using<br \/>\nstandard elements such as sy:updateFrequency and rss:ttl. Normally,<br \/>\nFeedWordPress respects any scheduling requests that a feed makes &#8212; if it<br \/>\nrequests a longer gap between polls than what FWP would normally adopt, then<br \/>\nFWP slows down to meet the request. If it indicates a shorter gap than what<br \/>\nFWP would normally adopt, FWP speeds up and checks that feed for updates<br \/>\nmore often than it normally would. Now, there should not be any way for user<br \/>\nsettings to override an explicit slow-down request from the feed producer &#8212;<br \/>\nif producers indicate a particular update schedule, then polling the feed<br \/>\nmore frequently than they request is considered abusive behavior. But<br \/>\nthere&#8217;s no reason why users should not be able &#8212; if they so desire &#8212; to<br \/>\noverride speed-up requests, and poll a feed <em>less<\/em> frequently than the<br \/>\nindicated update schedule, if the FWP user wants to space update checkins<br \/>\nover a longer interval of time. Before, they could not do this: FWP always<br \/>\nsped up to meet the indicated update schedule. Now, they can do this, by<br \/>\nusing the new &#8220;Minimum Interval&#8221; setting in Syndication &#8211;&gt; Feeds &amp;<br \/>\nUpdates..<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0706<\/h4>\n<ul>\n<li>\n<p>WP 3.2 COMPATIBILITY: ELIMINATES FATAL ERROR &#8220;Call to undefined method<br \/>\nWP_SimplePie_File::WP_SimplePie_File() in<br \/>\n[&#8230;]\/wp-content\/plugins\/feedwordpress\/feedwordpress.php on line 1841.&#8221; The<br \/>\nlatest release of WordPress, version 3.2, has shifted the minimum<br \/>\nrequirements up to PHP 5.2, and in line with the shift to PHP5 they have<br \/>\nrewritten a number of code segments that made use of now-obsolete PHP4<br \/>\nidioms. Unfortunately, this caused a fatal error whenever FeedWordPress<br \/>\nattempted to make use of the cache, since FWP&#8217;s caching plugin was written<br \/>\nto match the older idiom. FeedWordPress has been updated to follow the new,<br \/>\nPHP5 idiom when possible, thus eliminating the fatal error.<\/p>\n<\/li>\n<li>\n<p>PERFORMANCE: The handling of queries to determine whether posts had been<br \/>\npreviously syndicated produced some very slow queries (usually, but not<br \/>\nalways, involving a scan over the MD5(post_guid) column of the table). The<br \/>\ncode that prepares MySQL queries for previously-syndicated checks has been<br \/>\nrevised to eliminate the MD5(post_guid) scan entirely, and to significantly<br \/>\nimprove performance by eliminating other unnecessary clauses.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: NO LONGER DESTROYS STICKY POSTS. Previous versions could destroy<br \/>\n(or, more precisely, replace the content of) sticky posts due to some<br \/>\nqueries mashed together in unexpected ways by WordPress. Version 2011.0706<br \/>\naccounts for and eliminates the problem; your sticky posts should be safe<br \/>\nonce again.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: GUIDS CONTAINING MYSQL-ESCAPED CHARACTERS NO LONGER CAUSE DUPLICATE<br \/>\nPOSTS TO APPEAR. One remaining source of duplicate post issues in 2011.0602<br \/>\nwas guids that contained characters that needed to be escaped for MySQL,<br \/>\nsuch as single quotes and double quotes. The work-around for handling<br \/>\nfiltered URIs has now been corrected to ensure that these do not cause<br \/>\nduplicate posts.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0602<\/h4>\n<ul>\n<li>\n<p>WP 3.1.3 COMPAT \/ BUGFIX: WHITESPACE IN GUIDS NO LONGER PRODUCES DUPLICATE<br \/>\nPOSTS. The work-around for handling filtered URIs in guid elements has now<br \/>\nbeen extended to handle URIs that were filtered because of leading or<br \/>\ntrailing whitespace, in addition to URIs that were filtered because of<br \/>\nunapproved schemes.<\/p>\n<\/li>\n<li>\n<p>WP 3.1.3 COMPAT \/ BUGFIX: RELATIVE URLS IN GUIDS NO LONGER PRODUCE DUPLICATE<br \/>\nPOSTS. The work-around for handling filtered URIs in guid elements has now<br \/>\nbeen extended to handle URIs that were altered without being filtered out<br \/>\nentirely (most commonly because a scheme was added to a relative URL).<\/p>\n<\/li>\n<li>\n<p>BUGFIX: UPDATES TO POST NO LONGER CAUSE DUPLICATE DRAFT VERSION TO APPEAR.<br \/>\nUnder certain conditions in 2011.0531, an update to an existing post would<br \/>\nnot be properly applied to the post itself, but rather would appear as a<br \/>\nduplicate post with Draft status. This bug has been eliminated, and updates<br \/>\nwill now be properly inserted as revisions to the existing post.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0531<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 3.1.3 COMPATIBILITY: DUPLICATE POSTS ISSUE FIXED. Due to<br \/>\ninternal changes in the way that WordPress handles post guids in the<br \/>\nmost recent release (3.1.3), many users experienced problems with many<br \/>\nduplicate posts appearing in rapid succession. (Specifically, this would<br \/>\nhappen with any posts using tag: URL guids &#8212; such as all the posts<br \/>\ncoming from Blogger feeds or feeds from other Google services.) This<br \/>\ncompatibility release of FeedWordPress eliminates the issue by working<br \/>\naround the new restrictions on tag: URLs.<\/p>\n<\/li>\n<li>\n<p>NEW AND IMPROVED DIAGNOSTICS: Syndication &#8211;&gt; Diagnostics now contains some<br \/>\nnew diagnostics settings useful for debugging problems with duplicate posts<br \/>\n(allowing you to easily view the guid of posts in the WordPress posts<br \/>\ndatabase and allowing you to track the SQL used to check for existing<br \/>\nversions of a syndicated post).<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0512<\/h4>\n<ul>\n<li>\n<p>DIAGNOSTICS IMPROVEMENTS; &#8220;THERE MAY BE A BUG IN FEEDWORDPRESS&#8221; CRITICAL<br \/>\nERROR NOTICES ELIMINATED: This version includes some major improvements<br \/>\nto the Syndication &#8211;&gt; Diagnostics section, which should aid in<br \/>\ntroubleshooting difficulties with items failing to be imported, posts<br \/>\nfailing to be properly inserted into the database, or updates failing to<br \/>\nbe recorded. If you have been encountering critical error \/ bug notices<br \/>\nwith a white screen and the message &#8220;THERE MAY BE A BUG IN<br \/>\nFEEDWORDPRESS,&#8221; followed by an extraordinarily long dump of mostly<br \/>\nincomprehensible diagnostic information, you&#8217;ll be happy to know that<br \/>\nthe condition causing these notices has been eliminated. In the few<br \/>\ncases where errors may still crop up with database insertions,<br \/>\nFeedWordPress will now produce a significantly more manageable and more<br \/>\nuseful diagnostic message.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: NEW POSTS FAILING TO APPEAR IN A CLEANLY-INSTALLED FEEDWORDPRESS<br \/>\nSYSTEM. If you encountered a recurring problem with FeedWordPress<br \/>\nfailing to import new posts, after a clean install of FeedWordPress<br \/>\n(i.e., not an upgrade from a previous version), this problem may have<br \/>\nbeen the result of a bug with author-handling which has now been fixed<br \/>\nin the 2011.0512 release. (If the problem does <em>not<\/em> go away with the<br \/>\nupgrade, this version also includes significant improvements to the<br \/>\nDiagnostics system, which will help track down what <em>is<\/em> causing it<br \/>\nin your particular case.)<\/p>\n<\/li>\n<li>\n<p>PERFORMANCE: New handling of update hashes allows FeedWordPress to avoid<br \/>\na certain kind of infinite loop, caused when two more more different<br \/>\nsyndicated feeds each carried a version of the same item (for example,<br \/>\nbecause it appeared on two different aggregator feeds that you&#8217;re<br \/>\nsyndicating). In previous versions, when this kind of loop cropped up,<br \/>\nsyndicated posts could pile up an indefinitely large number of revisions<br \/>\n&#8212; each revision alternating between the version from each of the two<br \/>\nfeeds where it appeared &#8212; which would, over time, dramatically inflate<br \/>\nthe size of the database, and kill the performance of queries on the<br \/>\npost table. This issue has been resolved: revisions of the post that<br \/>\nhave been syndicated once will not be re-syndicated over and over again.<\/p>\n<\/li>\n<li>\n<p>AUTHOR LISTS: Lists of authors presented on the Author settings pages<br \/>\nshould now be easier to scan through, with author names arranged in<br \/>\nalphabetical order.<\/p>\n<\/li>\n<li>\n<p>FEED ITEM DATE PARSING: More tweaks to make date-time handling more<br \/>\nresilient when feeds provide broken or weird values for the timestamps<br \/>\non syndicated items. FWP will now attempt to work around unparseable<br \/>\ntimezone values.<\/p>\n<\/li>\n<li>\n<p>AUTHOR MATCHING: Now attempts to match author names against the WP login<br \/>\nname in addition to display_name; when creating user record, also fills<br \/>\nin some best-guess values for nickname, firstname and lastname. Also<br \/>\nproperly picks up Atom 1.0 author\/uri data from feed.<\/p>\n<\/li>\n<li>\n<p>COMPATIBILITY: FeedWordPress has been successfully tested for<br \/>\ncompatibility with recent releases of WordPress, up to version 3.1.2.<\/p>\n<\/li>\n<\/ul>\n<h4>2011.0211<\/h4>\n<ul>\n<li>\n<p>BUGFIX: DUPLICATE POSTS WHEN GUIDS ARE TOO LONG: When feeds included<br \/>\nexceptionally long GUIDs, FeedWordPress could occasionally get into<br \/>\na situation where posts with the long GUIDs would be duplicated over<br \/>\nand over again with each update (because FWP failed to store the full<br \/>\nGUID, due to length constraints in the relevant database tables).<br \/>\nWithout the full GUID, FWP would not know that the post had already<br \/>\nbeen syndicated once. This bug has been fixed, and should no longer<br \/>\nproduce duplicate posts.<\/p>\n<\/li>\n<li>\n<p>HTTP TIMEOUT SETTING: If you are frequently running into timeout<br \/>\nproblems with one or more of the feeds you syndicate, FWP now allows you<br \/>\nto adjust the timeout for HTTP requests using a global or feed-by-feed<br \/>\nsetting.<\/p>\n<\/li>\n<li>\n<p>HTTP GET PARAMETERS: You can now temporarily or permanently add HTTP<br \/>\nGET parameters to a subscription using an interface in Syndication &#8211;&gt;<br \/>\nFeeds &amp; Updates. This is especially helpful for making quick, short-term<br \/>\nchanges to a subscription (for example, to pull in all the previous<br \/>\nitems from a web service, before settling down to pulling in only newly<br \/>\nupdated items).<\/p>\n<\/li>\n<li>\n<p>DIAGNOSTICS SYSTEM: Added several new diagnostics which are useful in<br \/>\ntroubleshooting, and established a framework for add-on modules to hook<br \/>\nin with their own diagnostic messages.<\/p>\n<\/li>\n<li>\n<p>UI: Adjusted some internal coding, which should allow for settings<br \/>\npages and add-ons to properly display multiple category pickers on a<br \/>\nsingle settings page.<\/p>\n<\/li>\n<li>\n<p>PHP4 COMPATIBILITY TWEAKS: This version makes some tweaks to the handling<br \/>\nof object references which should improve compatibility with older<br \/>\nversions of PHP. (Although, I should note, web hosts that still force<br \/>\nyou to run under PHP 4 &#8212; in 2011! &#8212; are <em>bad web hosts<\/em>.)<\/p>\n<\/li>\n<li>\n<p>IMPROVED PERFORMANCE: This version eliminates a <em>major<\/em> performance drag<br \/>\nthat shows up on sites with large numbers of users (due to some poor<br \/>\ndecisions about where to place a user query, which caused the user table<br \/>\nto be scanned frequently when it did not need to be). If you experienced<br \/>\nserious problems with CPU load or slow database performance under<br \/>\n2010.0905, which kicked in immediately when FWP was loaded and tended<br \/>\nto disappear immediately if FWP was de-activated, it is likely that<br \/>\nupgrading away from 2010.0905 to the most recent version will resolve<br \/>\nyour problem.<\/p>\n<\/li>\n<\/ul>\n<h4>2010.0905<\/h4>\n<ul>\n<li>BUGFIX: CATEGORIES AND TAGS CORRECTLY ASSIGNED IN AUTOMATIC UPDATES.<br \/>\nVersion 2010.0903 switched over to a new way of assigning categories and<br \/>\ntags as part of its support for handling custom taxonomies.<br \/>\nUnfortunately, the method that it uses is subjected to some checks of<br \/>\nthe current user&#8217;s capabilities, which creates problems for posts that<br \/>\nare being inserted into the WordPress database when there <em>is<\/em> no<br \/>\ncurrent user logged in (as, for example, when an update is being carried<br \/>\nout from a cron job or automatic update). The result was that posts<br \/>\nfrom cron jobs and automatic updates ended up with no Categories and no<br \/>\nTags being assigned. This bug has now been fixed: in 2010.0905, Tags and<br \/>\nCategories should be correctly assigned to all posts, regardless of<br \/>\nwhether they were added from manual updates, cron jobs, or automatic<br \/>\nupdates.<\/li>\n<\/ul>\n<h4>2010.0903<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 3 REQUIRED: Please note that this release of FeedWordPress<br \/>\n<em>requires<\/em> WordPress 3.0 or later. If you are currently using a 2.x<br \/>\nbranch of WordPress, you will need to upgrade to WordPress 3 before you<br \/>\ncan successfully upgrade FeedWordPress.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: NO MORE DISAPPEARING &#8220;SYNDICATED SOURCES&#8221; PANEL; INTERNET<br \/>\nEXPLORER UI GLITCH APPARENTLY FIXED: Several users independently<br \/>\nreported a problem with FWP 2010.0623 and various versions of IE. A<br \/>\nproblem with the HTML markup caused IE (but not Firefox or<br \/>\nChrome) to completely hide the Syndicated Sources administration panel<br \/>\n(the main list of currently-syndicated sources, and the main location<br \/>\nfor adding new sources, under the Syndication menu item) when a user<br \/>\nadded their first syndicated feed. Maddeningly, the glitch seemed to<br \/>\naffect some IE users and not others: I was never able to reproduce the<br \/>\nproblem for myself on my own machines. However, the markup of Syndicated<br \/>\nSources has undergone significant changes and corrections since<br \/>\n2010.0623, and two independent sources who had been having this problem<br \/>\nconfirm that they no longer encounter it with the updated version. For<br \/>\nthe time being, I am going to declare this bug squashed.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: MORE PROTECTION AGAINST FATAL ERRORS FROM PLUGGABLE VERSIONS OF<br \/>\nSimplePie: FeedWordPress now takes some precautions that should help to<br \/>\nbetter avoid conflicts for users who have installed pluggable versions<br \/>\nof SimplePie for another plugin or theme. (You may not know that you have<br \/>\ndone this; but if you&#8217;ve been encountering fatal errors indicating that<br \/>\nyou cannot redeclare class SimplePie, or something along those lines,<br \/>\nthere is now a better chance that those fatal errors will be eliminated.<\/p>\n<\/li>\n<li>\n<p>PERFORMANCE: SIGNIFICANTLY REDUCED MEMORY CONSUMPTION FOR LARGE UPDATES:<br \/>\nFeedWordPress is still a memory-hungry little module, especially when<br \/>\nyou are dealing with very large feeds. However, users should notice a<br \/>\nsignificant reduction in memory overloads, especially if they update a<br \/>\nlarge number of feeds at once.<\/p>\n<\/li>\n<li>\n<p>USER INTERFACE IMPROVEMENTS: Nothing is radically different, but there&#8217;s<br \/>\nbeen a fair amount of extra spit and polish added, including a convenient<br \/>\nnew Dashboard widget that may save you a trip to the Syndication menu,<br \/>\na lot of effort to make the relationship between global and feed-by-feed<br \/>\nsettings more obvious to the user and more easily controllable, to make<br \/>\nnavigation between settings pages easier, to sand off a few rough edges,<br \/>\nand to make other improvements on the margins. I hope you&#8217;ll like how<br \/>\nit looks.<\/p>\n<\/li>\n<li>\n<p>ADDING MULTIPLE FEEDS: FeedWordPress now provides a convenient mode for<br \/>\nadding multiple feeds at once, using either a copy-and-pasted list, or<br \/>\nelse an OPML file. Go to Syndication &#8211;&gt; Syndicated Sources and check<br \/>\nout the two new buttons underneath the New Source input box. When you<br \/>\nhave to add a number of feeds at once, this can save you considerable<br \/>\ntime and trouble.<\/p>\n<\/li>\n<li>\n<p>IMPROVED HANDLING OF AUTHORS WITH DUPLICATE E-MAIL ADDRESS AND AUTHORS<br \/>\nWITH NAMES WRITTEN IN FOREIGN SCRIPTS: WordPress 3 is increasingly picky<br \/>\nabout what it will accept for new author accounts, and some of the<br \/>\nconditions it imposes can cause error conditions that prevent posts from<br \/>\nbeing properly syndicated, or properly attributed, if authors happen to<br \/>\nhave identical e-mail addresses, or if users are given usernames that are<br \/>\nwritten in non-Western scripts. FeedWordPress now handles these much<br \/>\nbetter, and systematically works to avoid clashes between syndicated<br \/>\nauthors&#8217; account names or in their e-mail addresses, which should result<br \/>\nin significantly better results in mapping author names to WordPress<br \/>\nuser accounts.<\/p>\n<\/li>\n<li>\n<p>MAPPING CATEGORIES ON SYNDICATED POSTS TO TAGS NOW BETTER SUPPORTED:<br \/>\nIn previous versions, the only way for the Categories provided by a<br \/>\nsyndicated feed to be mapped into Post Tags was to instruct FWP to<br \/>\ncreate new tags, rather than new categories, for unfamiliar categories<br \/>\nfrom the feed. This works fine if you want tags to be the default; but<br \/>\nif you want only a <em>specific<\/em> set of tags, there was no way to get them<br \/>\nwithout getting most or all other categories imported as tags.  You can<br \/>\nnow do this by creating a tag (under Posts ==&gt; Post Tags) before<br \/>\nimporting the post; when the syndicated category matches a pre-existing<br \/>\ntag, the incoming post will be tagged with that tag, without creating<br \/>\na local Post Category.<\/p>\n<\/li>\n<li>\n<p>REL-TAG MICROFORMAT SUPPORT FOR INLINE TAGS: Syndicated posts that<br \/>\ncontain inline tags, marked up using the Rel-Tag microformat<br \/>\n<a href=\"http:\/\/microformats.org\/wiki\/rel-tag\" rel=\"nofollow ugc\">http:\/\/microformats.org\/wiki\/rel-tag<\/a>, are now tagged with the tags<br \/>\nprovided by Rel-Tag format links.<\/p>\n<\/li>\n<li>\n<p>MUCH GREATER CONTROL OVER CATEGORY AND TAG MAPPING: This is partly the<br \/>\nresult of building in support for a potentially endless set of custom<br \/>\ntaxonomies (see below), but in general there has been a great deal of<br \/>\neffort towards giving you more control over how categories and tags<br \/>\nprovided by the feed are mapped into terms on the local blog. In<br \/>\nparticular, you can now force FeedWordPress to create only categories<br \/>\nfrom categories and tags provided by the feed; or to create only tags;<br \/>\nor to search both categories and tags for a match; or you can simply<br \/>\nforce it to drop all of the categories provided by the feed and use<br \/>\nonly categories or tags that you explicitly provide. In addition, you<br \/>\ncan now also choose whether to override global categories settings with<br \/>\na local, feed-specific setting; or whether to <em>add together<\/em> <em>both<\/em> the<br \/>\nglobal categories and the local feed-specific categories &#8212; depending<br \/>\non whatever your use-case may demand.<\/p>\n<\/li>\n<li>\n<p>CUSTOM POST TYPES AND TAXONOMY SUPPORTS: This is mainly for the<br \/>\nsuper-geeky, but if you use other plugins or themes that make<br \/>\nsignificant use of WordPress&#8217;s support for custom post types and custom<br \/>\ntaxonomies, you may be pleased to find that FeedWordPress now allows you<br \/>\nto feed incoming posts into any custom feed type that you wish, and to<br \/>\nmap categories and tags from the feed to custom taxonomies as well as<br \/>\nto the standard Category and Tag taxonomies.<\/p>\n<\/li>\n<li>\n<p>STORING NAMESPACED CUSTOM FEED ELEMENTS IN POST CUSTOM FIELDS: If you<br \/>\nwould like to use FeedWordPress&#8217;s support for storing custom meta-data<br \/>\nfrom feed elements in the custom fields for a post (for example, to<br \/>\nstore geolocation data or iTunes media meta-data), you&#8217;ll find that it&#8217;s<br \/>\nnow much easier for you to access these namespaced elements. You always<br \/>\ncould access them, but in previous versions you might have to write<br \/>\nsomething ugly like $(\/{http:\/\/www.w3.org\/2003\/01\/geo\/wgs84_pos#}lat)<br \/>\njust to get at the value of a <code>&lt;geo:lat&gt;<\/code> tag. Now, as long as you use<br \/>\nthe same mnemonic codes that the feed producer used, you should always<br \/>\nbe able to write a nice, simple expression like $(\/geo:lat) to get the<br \/>\nvalue of a  tag.<\/p>\n<\/li>\n<li>\n<p>CUSTOM DIRECTORY STRUCTURE SUPPORT: if you poke at it enough, WordPress<br \/>\nis relatively flexible about where it should store admin interface code,<br \/>\nuploaded content, plugins, and a number of other things that occupy an<br \/>\nimportant place in the WordPress directory structure. Previous versions<br \/>\nof FeedWordPress encountered serious errors or broke entirely when used<br \/>\nwith directory structures other than the default. This should now be<br \/>\nfixed: FWP now supports custom directory structures wherever    WordPress<br \/>\nallows them to be customized, rather than depending on the default<br \/>\nlocations. Enjoy your freedom!<\/p>\n<\/li>\n<li>\n<p>MANY NEW FILTERS AND API UTILITY FUNCTIONS FOR ADD-ON PROGRAMMERS: There<br \/>\nhave been too many improvements to list them all in this ChangeLog, but<br \/>\nit means that much more power and ease for folks who are customizing<br \/>\nFeedWordPress through PHP filters or add-on modules. Fuller<br \/>\ndocumentation will be put up at the Wiki at feedwordpress.radgeek.org<br \/>\nsoon.<\/p>\n<\/li>\n<\/ul>\n<h4>2010.0623<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 3.0 COMPATIBILITY \/ AUTHOR MAPPING INTERFACE ISSUES: I<br \/>\nresolved a couple of outstanding issues with the author mapping<br \/>\ninterface (Syndication &#8211;&gt; Authors), which were preventing new users<br \/>\nfrom being created correctly and author mapping rules from being set up<br \/>\ncorrectly. These partly had to do with new restrictions on user account<br \/>\ncreation introduced in WordPress 3.0; anyway, they should now be fixed.<\/p>\n<\/li>\n<li>\n<p>MORE EFFICIENT SYNDICATED URL LOOKUPS: Several users noticed that the<br \/>\nbug fix introduced in 2010.0528 for compatibility with post-listing<br \/>\nplugins caused a lot more queries to the database in order to look up<br \/>\nnumerical post IDs from the URL provided to the filter. This shouldn&#8217;t<br \/>\ncause any major problems, but it is not as efficient as it could be; the<br \/>\ncode now takes advantage of a more efficient way of doing things,<br \/>\nwhich usually will not require any additional database queries.<\/p>\n<\/li>\n<li>\n<p>SIMPLEPIE FEED UPDATE ISSUES: If you have been having significant<br \/>\nproblems with getting feeds to update correctly, this may be the result<br \/>\nof some bugs in the implementation of SimplePie caching that ships with<br \/>\nWordPress (as of version 3.0). (You would most commonly experience this<br \/>\nerror if you continually saw errors such as &#8220;No feed found at &lt;&#8230;&gt;&#8221; in<br \/>\nyour updates.) Fortunately, SimplePie allows for a great deal of<br \/>\nextensibility and this allows me to work around the problem; these<br \/>\nerror conditions should now be mostly eliminated when the underlying<br \/>\nfeed is valid.<\/p>\n<\/li>\n<li>\n<p>UI: SHOW INACTIVE SOURCES: When you use the default unsubscribe option<br \/>\n&#8212; which turns off the subscription to a feed while preserving the posts<br \/>\nfrom it and the syndication-related meta-data for the feed &#8212; the<br \/>\nunsubscribed feed can now easily be viewed in a special &#8220;Inactive&#8221;<br \/>\nsection of the Syndicated Sources page. (As a side benefit, if you&#8217;ve<br \/>\naccidentally, or only temporarily, turned off the subscription to a<br \/>\nfeed, it is now much easier to restore the feed to being active, or to<br \/>\ndelete it permanently, if you prefer.<\/p>\n<\/li>\n<li>\n<p>UI: FEED FINDER \/ SWITCH FEED INTERFACE IMPROVEMENTS: changes to styling<br \/>\nand options for the feed finder \/ switch feed, which should now make it<br \/>\neasier, in some cases, to find alternative feeds, and make interface<br \/>\noptions more clearly visible.<\/p>\n<\/li>\n<li>\n<p>FILTERS: <code>syndicated_item_published<\/code> and <code>syndicated_item_updated<\/code> NOW<br \/>\nPROPERLY AFFECT THE DATING OF POSTS. These filters used to affect some<br \/>\ndate-related settings, but not others &#8212; and, most importantly, not the<br \/>\nfinal date that is set for a post&#8217;s publication or last-modified date<br \/>\nin the WordPress database. Now, they do affect that, as they should.<br \/>\n(Filters should receive, and return, a long integer, representing a Unix<br \/>\nepoch relative timestamp.)<\/p>\n<\/li>\n<li>\n<p>MAGIC URL TO CLEAR THE CACHE: Suppose that you need to clear the feed<br \/>\ncache, for whatever reason; suppose, even, that you need to clear it on<br \/>\na regular basis. One way you might do this is by logging into the<br \/>\nFeedWordPress administrative interface and going to Syndication &#8211;&gt;<br \/>\nPerformance. Another way you might do it, now, is to simply send an<br \/>\nHTTP request to a magic URL provided by FeedWordPress: if your blog is<br \/>\nat example.com, the URL would be <a href=\"http:\/\/example.com\/?clear_cache=1\" rel=\"nofollow ugc\">http:\/\/example.com\/?clear_cache=1<\/a><\/p>\n<\/li>\n<\/ul>\n<h4>2010.0602<\/h4>\n<ul>\n<li>\n<p>CATEGORY BOX INTERFACE ELEMENT FIXED FOR WP 3.0: Stylesheet changes<br \/>\nbetween WordPress 2.9.x and the WordPress 3.0 RC caused the Categories<br \/>\nbox under <strong>Syndication &#8211;&gt; Categories &amp; Tags<\/strong> to malfunction. This<br \/>\nhas been fixed.<\/p>\n<\/li>\n<li>\n<p>LINK CATEGORY SELECTION BOX IN SYNDICATION ==&gt; FEEDS FIXED FOR WP 2.8<br \/>\nAND 2.9: A WP 3.0 compatibility change introduced in 2010.0531<br \/>\ninadvertently broke the Syndicated Link Category selector under<br \/>\nSyndication &#8211;&gt; Feeds &amp; Updates in WP 2.8 and WP 2.9, causing the post<br \/>\ncategories to be displayed in the selector rather than the link<br \/>\ncategories. This should now be fixed so that the selector will work<br \/>\ncorrectly under both the current versions of WordPress and the 3.0 RC.<\/p>\n<\/li>\n<li>\n<p>MORE PERMISSIVE HANDLING OF FEEDS WITH BAD CONTENT-TYPE HEADERS: One of<br \/>\nthe small advantages that MagpieRSS had over SimplePie is that it was<br \/>\nmore tolerant about parsing well-formed feeds that the remote web server<br \/>\nhappened to deliver with weird or incorrect HTTP Content-type headers.<br \/>\nIn feeds affected by this problem, the new SimplePie parser would simply<br \/>\nfail to find a feed, due to its being led astray by the contents of the<br \/>\nContent-type header. This version includes an extension to SimplePie&#8217;s<br \/>\ncontent-type sniffer that offers more permissive handling of the HTTP<br \/>\nheaders.<\/p>\n<\/li>\n<li>\n<p>MORE FULL-TEXT &#8220;EXCERPTS&#8221; NOW PROPERLY SHORTENED. Version 2010.0528<br \/>\nintroduced code to control for cases in which elements intended for<br \/>\nitem summaries are (ill-advisedly) used to carry the full text of posts;<br \/>\npast versions of FeedWordPress would simply include the full text of the<br \/>\npost in the excerpt field, but newer versions now attempt to detect<br \/>\nthis condition when it arises and to head it off, by blanking out the<br \/>\nexcerpt field and filling it with an automatically generated short,<br \/>\nplain text excerpt from the full content. This release broadens the<br \/>\ntest conditions that indicate when an excerpt field is treated as<br \/>\nidentical to the full text of the post, and should therefore improve<br \/>\nthe handling of some feeds (such as Google Reader feeds) where the full<br \/>\ntext of each post was still appearing in the excerpt field.<\/p>\n<\/li>\n<li>\n<p>FILTERS: <code>syndicated_item_published<\/code> AND <code>syndicated_item_updated<\/code><br \/>\nFILTERS NOW ALLOW FILTER AUTHORS TO CHANGE POST TIMESTAMPS. You can now<br \/>\nuse the <code>syndicated_item_published<\/code> and <code>syndicated_item_updated<\/code> filter<br \/>\nhooks to write filters or add-ons which directly change the post date<br \/>\nand most-recently-updated timestamps on incoming syndicated posts. Props<br \/>\nto niska for pointing out where the filters needed to be applied in<br \/>\norder to change WordPress&#8217;s internal timestamps for incoming posts.<\/p>\n<\/li>\n<\/ul>\n<h4>2010.0531<\/h4>\n<ul>\n<li>\n<p>PERMALINK \/ CUSTOM FIELDS PROBLEM RESOLVED: An issue in 2010.0528 caused<br \/>\nsome posts to be imported without the proper syndication-related<br \/>\nmeta-data being attached (thus causing permalinks to point back to the<br \/>\naggregator website rather than to the source website, among other<br \/>\nproblems). This problem has been resolved (and a fix has been applied<br \/>\nwhich will resolve the problem for any posts affected by this problem,<br \/>\nif the original post is recent enough to still be available on the feed).<\/p>\n<\/li>\n<li>\n<p>UI: The &#8220;Back End&#8221; section has been split into two separate sections &#8212;<br \/>\n&#8220;Performance&#8221; (dealing with caching, database index, and other<br \/>\nperformance tweaks), and &#8220;Diagnostics&#8221; (dealing with debug mode,<br \/>\nupdate logging, and a number of new diagnostic tests which I will be<br \/>\nrolling out over the next few releases).<\/p>\n<\/li>\n<li>\n<p>Several minor interface bug fixes and PHP warning notices eliminated.<\/p>\n<\/li>\n<\/ul>\n<h4>2010.0528<\/h4>\n<h4>Compatibility<\/h4>\n<ul>\n<li>\n<p>SIMPLEPIE IS NOW USED TO PARSE FEEDS; NO MORE MAGPIERSS UPGRADES NEEDED:<br \/>\nOne of the biggest changes in this release is that FeedWordPress no<br \/>\nlonger depends on MagpieRSS to parse feeds, and has switched to the much<br \/>\nmore up-to-date and flexible SimplePie feed parser, which is included as<br \/>\na standard part of WordPress versions 2.8 and later. Using SimplePie will<br \/>\nhopefully allow for better handling of feeds going further, and will<br \/>\nallow me greater flexibility in determining how exactly the feed parser<br \/>\nwill operate. It also means that FeedWordPress no longer requires<br \/>\nspecial upgrades to the WordPress core MagpieRSS files, and should<br \/>\neliminate quite a bit of complexity.<\/p>\n<\/li>\n<li>\n<p>MAGPIERSS COMPATIBILITY LAYER FOR EXISTING FILTERS AND ADD-ONS: However,<br \/>\nI have also implemented a compatibility layer to ensure that existing<br \/>\nfilters and add-ons for FeedWordPress which depended on the MagpieRSS<br \/>\ndata format <em>should not be broken<\/em> by the switch to SimplePie. Going<br \/>\nforward, I recommend that new filters and add-ons be written to take<br \/>\nadvantage of the SimplePie object representations of items, feeds, etc.,<br \/>\nrather than the MagpieRSS arrays, but the MagpieRSS arrays will still<br \/>\nbe available and older filters should continue to work as they have in<br \/>\nthe past.<\/p>\n<\/li>\n<li>\n<p>COMPATIBILITY WITH WORDPRESS 2.9.x and 3.0: This release has been tested<br \/>\nfor the existing WordPress 2.9.x branch and with the upcoming release of<br \/>\nWordPress 3.0.  Changes in the user interface JavaScript between WordPress<br \/>\n2.8.x and WordPress 2.9 caused the tag box interface element to break in<br \/>\nthe Syndication &#8211;&gt; Categories &amp; Tags settings page; changes in the API<br \/>\nfunctions for adding new authors caused fatal errors under certain<br \/>\nconditions in WordPress 3.0. These breakages have been fixed.<\/p>\n<\/li>\n<li>\n<p>DROPPED LEGACY SUPPORT FOR WORDPRESS PRIOR TO 2.8: Because SimplePie is<br \/>\nnot included with versions of WordPress prior to 2.8, I have chosen to<br \/>\ndrop legacy support for WordPress versions 1.5 through 2.7. If you are<br \/>\nusing FeedWordPress with a version of WordPress before 2.8, you will<br \/>\nhave to upgrade your installation of WordPress in order to take<br \/>\nadvantage of this release.<\/p>\n<\/li>\n<li>\n<p>PHP 5.3 COMPATIBILITY: A couple of compatibility issues, which were<br \/>\ncausing fatal errors amd ugly warnings for users of PHP 5.3,<br \/>\nhave been eliminated.<\/p>\n<\/li>\n<\/ul>\n<h4>Features and Processing<\/h4>\n<ul>\n<li>\n<p>INTERFACE REORGANIZATION: The interface restructuring, began with<br \/>\nVersion 2009.0612, has been completed. Catch-all settings pages have<br \/>\nbeen eliminated entirely for pages that cover each aspect of handling<br \/>\na feed: Feeds &amp; Updates, Posts &amp; Links, Authors, Categories &amp; Tags,<br \/>\nand Back End handling of the database and diagnostic information.<br \/>\nExtensive new interface hooks allow add-on modules to significantly<br \/>\nchange or extend the FeedWordPress admin interface and workflow.<\/p>\n<\/li>\n<li>\n<p>STORING INFORMATION FROM THE FEED IN CUSTOM FIELDS: Many users<br \/>\nhave written to request the ability to store information from elements<br \/>\nin the feed in a custom field on each post. (So that, for example, if<br \/>\npost includes a <code>itunes:duration<\/code> element, you could store the contents<br \/>\nin a Custom Field called <code>duration<\/code> on the post (for a Theme to access<br \/>\nlater). The Custom Post Settings under Syndication &#8211;&gt; Posts &amp; Links now<br \/>\nallow you to access any item or feed tag, using a syntax similar to<br \/>\na much-simplified version of XPath. See Posts &amp; Links settings for<br \/>\ndetails.<\/p>\n<\/li>\n<li>\n<p>UPDATE-FREEZING ON MANUALLY EDITED POSTS: FeedWordPress now allows you<br \/>\nto mark posts that have been manually edited, so that the changes you<br \/>\nmake will not be overwritten by later updates from the feed. If you make<br \/>\nmanual edits to a particular post, just check the &#8220;Manual editing&#8221;<br \/>\ncheckbox in order to protect your changes from being overwritten. If you<br \/>\nwant to block <em>all<\/em> posts from being updated after they are imported<br \/>\nfor the first time, a new &#8220;Updated Posts&#8221; setting in Posts &amp; Links<br \/>\nallows you to freeze all posts from a particular feed, or all syndicated<br \/>\nposts.<\/p>\n<\/li>\n<li>\n<p>SETTING: FEED-BY-FEED SETTINGS FOR WHERE PERMALINKS POINT TO: You&#8217;ve<br \/>\nalways been able to tell FeedWordPress whether permalinks for posts<br \/>\nshould point to the original source of the story or the local copy. Now<br \/>\nyou can choose different policies for different feeds, instead of one<br \/>\nglobal policy for all feeds. (Of course, you can still use a global<br \/>\ndefault if you prefer.)<\/p>\n<\/li>\n<li>\n<p>SETTING: USER CONTROL OVER TIMING BASIS. You can now determine the<br \/>\nschedule on which feeds are considered ready to poll for updates &#8212;<br \/>\nby default feeds become ready for polling after about 1 hour. You can<br \/>\nnow increase or decrease the time window under Syndication &#8211;&gt; Feeds &amp;<br \/>\nUpdates. (However, please pay <em>CAREFUL ATTENTION<\/em> to the recommendations<br \/>\nand DO NOT set the scheduling lower than 60 minutes unless you are<br \/>\nABSOLUTELY SURE that you have specific permission from webmaster who<br \/>\nprovides that specific feed to poll more frequently than that. If you<br \/>\nset this too low (and about 60 minutes is the polite minimum if you<br \/>\nhaven&#8217;t been given a different figure), most webmasters will consider<br \/>\nthe frequent hits on their server as rude, or even downright abusive.<\/p>\n<\/li>\n<li>\n<p>OTHER SETTINGS: New settings also include the ability to stop FWP from<br \/>\nresolving relative URLs within syndicated content, and the ability to<br \/>\nchoose whether FeedWordPress should indicate the comment feed from the<br \/>\noriginal source, or the local comment feed, when providing the comment<br \/>\nfeed URL for a syndicated post.<\/p>\n<\/li>\n<\/ul>\n<h4>Parsing<\/h4>\n<ul>\n<li>\n<p>BETTER DATE HANDLING &#8212; FEWER FLASHBACKS TO 1969 and 1970: FeedWordPress<br \/>\nhas made some bugfixes and some improvements in the logic for parsing<br \/>\ndates. This should allow FeedWordPress to correctly parse more dates in<br \/>\nmore feeds; and, in the last resort, when FeedWordPress fails to<br \/>\ncorrectly parse a date, to fall back to a more intelligent default. This<br \/>\nshould hopefully avoid most or all error conditions that have resulted<br \/>\nin articles being erroneously dated to the dawn of the Unix epoch<br \/>\n(31 December 1969 or 1 January 1970).<\/p>\n<\/li>\n<li>\n<p>FULL-TEXT &#8220;EXCERPTS&#8221; NOW PROPERLY SHORTENED. Based on a straightforward<br \/>\nreading of the existing RSS specs, it&#8217;s reasonable for the<br \/>\nrss:description element to be read as a plaintext summary or excerpt for<br \/>\nthe item containing the description &#8212; with the full text of the item,<br \/>\nif available, in another, better-suited element, such as the de facto<br \/>\nstandard content:encoded extension element. The problem is that uses of<br \/>\nRSS rarely have much to do with anything like a straightforward reading<br \/>\nof the specs. As a result, many actual RSS producers in the wild put the<br \/>\nfull text of the article in a description element. But since<br \/>\nFeedWordPress has treated this text as a summary, this produces<br \/>\naggregated posts with lengthy &#8220;excerpts&#8221; containing the full text of the<br \/>\narticle. This release of FeedWordPress fixes the problem by doing a<br \/>\nlittle digging before treating rss:description as a summary: if the<br \/>\ndescription element is used properly as a plain text summary, then<br \/>\nFeedWordPress will take the summary provided by the feed, rather than<br \/>\nrecreating its own excerpt from the full text; but if an RSS item has no<br \/>\nfull-text element other than description, FeedWordPress will treat the<br \/>\ndescription element as the full text of the article, and generate a<br \/>\nshortened excerpt automatically from that text.<\/p>\n<\/li>\n<\/ul>\n<h4>API<\/h4>\n<ul>\n<li>\n<p>TEMPLATE API: new template tags <code>get_local_permalink()<\/code> and<br \/>\n    the_local_permalink() allow you to access the permalink for a post on<br \/>\nyour aggregator site, even when FeedWordPress is rewriting permalinks to<br \/>\npoint to the original source site.<\/p>\n<\/li>\n<li>\n<p>NEW HOOKS FOR ADD-ONS AND FILTERS: I have added a number of new hooks<br \/>\nwhich allow add-on modules to filter more precisely, gather information<br \/>\nat more points, and to enhance the FeedWordPress admin interface. For<br \/>\na list of new hooks and documentation, see the FeedWordPress<br \/>\ndocumentation wiki at<br \/>\n<a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/add-ons-and-filters\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/add-ons-and-filters<\/a><\/p>\n<\/li>\n<li>\n<p>FILTER API: A number of new utility methods have been added to the<br \/>\nSyndicatedPost  class to make it easier for filters and add-ons to<\/p>\n<\/li>\n<li>\n<p>FILTER API: Globals $fwp_channel and $fwp_feedmeta DEPRECATED. These<br \/>\nglobal variables, originally introduced to allow filters access to<br \/>\ninformation about the source feed in <code>syndicated_item<\/code> filters (which<br \/>\nwere passed in through global   variables rather than as parameters<br \/>\nbecause of a bug in WP 1.5 which was then fixed in 1.5.1) have been<br \/>\nDEPRECATED. If you have any filters or add-ons which still depend on<br \/>\nthese global variables, you should see about fixing them to access data<br \/>\nabout the source feed using the SyndicatedPost::link element instead.<br \/>\nFor documentation, see the FeedWordPress documentation wiki at<br \/>\n<a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedpost\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedpost<\/a> and<br \/>\n<a href=\"http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedlink\" rel=\"nofollow ugc\">http:\/\/feedwordpress.radgeek.com\/wiki\/syndicatedlink<\/a>.<\/p>\n<\/li>\n<li>\n<p>DIAGNOSTICS: I&#8217;ve included a number of new diagnostic options and<br \/>\nmessages, which should allow an experienced user to better investigate<br \/>\nany problems that may crop up.<\/p>\n<\/li>\n<\/ul>\n<h4>Bug Fixes<\/h4>\n<ul>\n<li>\n<p>BUGFIX: &amp; IN PERMALINKS NO LONGER CAUSING ATOM OR HTML VALIDATION<br \/>\nEFFORTS: Many users reported an issue in which syndicating a feed with<br \/>\nspecial XML characters in the URLs (&amp; was the most common, since it is<br \/>\nused to separate HTTP GET parameters) would cause the aggregator&#8217;s<br \/>\nfeeds to produce invalid (malformed) XML. This update addresses the<br \/>\nissue in Atom feeds. Unfortunately, it has not been technically possible<br \/>\nto address the problem in RSS 2.0 feeds, due to limitations on<br \/>\nWordPress&#8217;s internal templates for RSS feeds.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: BROKEN URLS IN &#8220;POPULAR POSTS&#8221; AND SIMILAR PLUGINS SHOULD NO<br \/>\nLONGER BE BROKEN. A number of users noticed an issue where plugins and<br \/>\ntemplates that listed posts in locations outside of the post loop<br \/>\n(for example, &#8220;Popular Posts&#8221;-style plugins that listed posts in the<br \/>\nsidebar), often produced the wrong URL for post links. (Typically, all<br \/>\nthe posts listed would get the same wrong URL.) This should now be<br \/>\nfixed. Thanks to Bj\u00f6rn for sending in a quick fix!<\/p>\n<\/li>\n<li>\n<p>MINOR BUGFIXES: This release includes a number of fixes to minor bugs<br \/>\nand compatibility issues, including: silent failures of the &#8220;Syndicate&#8221;<br \/>\nbutton, &#8220;Illegal Offset Type&#8221; error messages from MagpieRSS, and others.<\/p>\n<\/li>\n<\/ul>\n<h4>2009.0707<\/h4>\n<ul>\n<li>\n<p>BUGFIX: WORDPRESS 2.8 AJAX COMPATIBILITY ISSUES RESOLVED (blank or<br \/>\ntruncated &#8220;Syndicated Sites&#8221; administration page): Due to changes in the<br \/>\nAJAX interface elements between WordPress 2.7 and WordPress 2.8, several<br \/>\nFeedWordPress users encountered an issue where the front &#8220;Syndication&#8221;<br \/>\npage in the FeedWordPress administrative interface would come up blank,<br \/>\nwithout the normal &#8220;Syndicated Sites&#8221; list and &#8220;Update&#8221; control, or<br \/>\nsometimes wth the boxes visible but one or both of them truncated, with<br \/>\nonly the title bar. This issue should now be resolved: with the new<br \/>\nversion of FeedWordPress, the compatibility issue that caused the<br \/>\ndisappearance should be eliminated, and if boxes are shown with only<br \/>\ntheir handle visible, you should once again be able to drop down the<br \/>\nrest of the box by clicking once on its title bar.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: TAG SETTING WIDGET FIXED. Due to changes in interface elements<br \/>\nbetween WordPress 2.7 and WordPress 2.8, people using FeedWordPress with<br \/>\nWordPress 2.8 found that the widget for setting tags to be applied to<br \/>\nall syndicated posts, or all syndicated posts from a particular feed,<br \/>\nno longer displayed &#8220;Add&#8221; and &#8220;Remove&#8221; buttons for individual tags. This<br \/>\nissue has now been fixed, and the tagging widget should once again work<br \/>\nmore or less exactly like the tagging widget for individual posts in the<br \/>\nnormal WordPress admin interface.<\/p>\n<\/li>\n<\/ul>\n<h4>2009.0618<\/h4>\n<ul>\n<li>\n<p>BUGFIX: MYSTERY ERRORS WITH WITH WP_Http_Fsockopen HTTP TRANSPORT<br \/>\nELIMINATED: Thanks to a combination of a subtle bug in FeedWordPress,<br \/>\nand changes to the HTTP transport code in WordPress, a number of users<br \/>\nencountered an error in which any time they attempted to add a new feed<br \/>\nthrough the FeedFinder interface, FeedWordPress would fail and display<br \/>\nan HTTP request failure diagnostic message. The subtle bug has been<br \/>\nfixed, and with it, most of these errors should now be eliminated.<\/p>\n<p>Be sure to upgrade your MagpieRSS to the most recent MagpieRSS version<br \/>\nafter you have insalled FeedWordPress 2009.0618, or this bug fix will<br \/>\nnot take effect.<\/p>\n<\/li>\n<\/ul>\n<h4>2009.0613<\/h4>\n<ul>\n<li>\n<p>INTERFACE\/BUGFIX: WORDPRESS 2.8 CATEGORY BOX FIX. Thanks to a subtle<br \/>\nchange in class names between the WordPress 2.7 and 2.8 stylesheets,<br \/>\ncategory boxes in the FeedWordPress settings interface tended to overflow<br \/>\nand have a lot of messy-looking overlapping text under WordPress 2.8.<br \/>\nThis has now been fixed.<\/p>\n<\/li>\n<li>\n<p>FeedFinder FAILURE DIAGNOSTICS: When FWP&#8217;s FeedFinder fails to find any<br \/>\nfeeds at a given URL (for example, when you are trying to add a<br \/>\nsubscription through the administrative interface and you run into an<br \/>\nerror message), FeedWordPress now provides more diagnostic information<br \/>\nfor the reasons behind the failure. If that helps you, great; if not,<br \/>\nit should help me respond more intelligently to your support request..<\/p>\n<\/li>\n<\/ul>\n<h4>2009.0612<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 2.8 COMPATIBILITY: FeedWordPress 2009.0612 has been tested for<br \/>\ncompatibility with the recent version 2.8 release of WordPress.<\/p>\n<\/li>\n<li>\n<p>INTERFACE RESTRUCTURING: In order to avoid settings posts from becoming<br \/>\ntoo crowded, and to modularize and better organize the user interface,<br \/>\nnew &#8220;Posts&#8221; and &#8220;Categories &amp; Tags&#8221; subpages have been created under the<br \/>\n&#8220;Syndication&#8221; menu. &#8220;Posts&#8221; controls settings for individal syndicated<br \/>\nposts (such as publication status, comment and ping status, whether or<br \/>\nnot to use the original location of the post as the permalink, whether<br \/>\nor not to expose posts to formatting filters, and so on). &#8220;Categories &amp;<br \/>\nTags&#8221; controls settings for assigning new syndicated posts to categories<br \/>\nand tags, such as categories or tags to apply to all syndicated posts,<br \/>\nand how to handle categories that do not yet exist in the WordPress<br \/>\ndatabase. These subpages, like the Authors subpage, handle settings for<br \/>\nthe global default level and for individual syndicated feeds.<\/p>\n<p>Corresponding to these new subpages, the old Syndication Settings and<br \/>\nFeed Settings subpages have been cleaned up and simplified, and now only<br \/>\nlink to the appropriate subpages for options that can be set in the<br \/>\nPosts, Authors, or Categories &amp; Tags subpages.<\/p>\n<\/li>\n<li>\n<p>FEATURE: ADD CUSTOM SETTINGS TO EACH SYNDICATED POST: FeedWordPress has<br \/>\nlong had an interface for creating custom settings for each syndicated<br \/>\n<em>feed<\/em> which could be retrieved in templates using the <code>get_feed_meta()<\/code><br \/>\ntemplate function. But it had no feature for adding custom fields to<br \/>\neach individual syndicated <em>post<\/em>. In response to requests from users, I<br \/>\nhave added the ability to apply custom fields to each individual<br \/>\nsyndicated post, using the new Syndication &#8211;&gt; Posts subpage. You can<br \/>\nset up custom fields to be applied to every syndicated post, or custom<br \/>\nfields to be applied to syndicated posts from a particular feed.<\/p>\n<\/li>\n<li>\n<p>FEATURE: MAGPIERSS VERSION CHECK AND UPGRADE: FeedWordPress will attempt<br \/>\nto determine whether or not you are using the upgraded version of<br \/>\nMagpieRSS that comes packaged with FeedWordPress. If not, it will throw<br \/>\nan error on admin pages, and, if you are a site administrator, it will<br \/>\ngive you the option to ignore the error message, or to attempt an<br \/>\nautomatic upgrade (using a native file copy). If the file copy fails,<br \/>\nFeedWordPress will offer some guidance on how to perform the upgrade<br \/>\nmanually.<\/p>\n<\/li>\n<li>\n<p>BLANK POSTS PROBLEM NO LONGER OCCURS WITH OLD &amp; BUSTED MAGPIERSS: Due<br \/>\nto the fact that I relied on a content normalization that occurs in my<br \/>\nupgraded version of MagpieRSS, but not in the old &amp; busted version of<br \/>\nMagpieRSS that ships with WordPress, until this version, if you tried to<br \/>\nsyndicate an Atom feed without having performed the (<em>strongly<br \/>\nrecommended<\/em>) MagpieRSS upgrade, all of the posts would come up with<br \/>\ncompletely blank contents. That&#8217;s not because MagpieRSS couldn&#8217;t read<br \/>\nthe data, but rather because the new Magpie version puts that data in a<br \/>\nlocation where the old version doesn&#8217;t, and I was only looking in that<br \/>\nnewer location. Now it checks for both, meaning that posts will continue<br \/>\nto display their contents even if you don&#8217;t upgrade MagpieRSS. (But you<br \/>\n<strong>really should<\/strong> upgrade it, anyway.)<\/p>\n<\/li>\n<li>\n<p>BUGFIX: RELATIVE URI RESOLUTION FOR POST CONTENT RESTORED. Some time<br \/>\nback, I added support for resolving relative URIs against xml:base on<br \/>\nfeeds that support it to the MagpieRSS upgrade in FeedWordPress. Then I<br \/>\ntook out code that did the same thing from the main FeedWordPress code.<br \/>\nOf course, the problem is that some people, even though it is clearly<br \/>\nstupid or evil to do so, still include relative URIs for images or links<br \/>\nin posts on feed formats that do <em>not<\/em> adequately support xml:base<br \/>\n(notably, RSS 2.0 feeds). In response to a user request, I have added<br \/>\nthis functionality back in, so that MagpieRSS will resolve any relative<br \/>\nURIs that it knows how to resolve using xml:base, and then FeedWordPress<br \/>\nwill attempt to resolve any relative URIs that are left over afterwards.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: INTERFACE OPTION FOR SETTING SYNDICATED POST PUBLICATION STATUS<br \/>\nON A FEED-BY-FEED BASIS HAS BEEN RESTORED: Due to a version-checking<br \/>\nbug, users of WordPress 2.7.x lost an option from the &#8220;Edit a syndicated<br \/>\nfeed&#8221; interface which allowed them to determine whether newly syndicated<br \/>\nposts should be published immediately, held as &#8220;Pending Review,&#8221; saved<br \/>\nas drafts, or saved as private posts. (The option to change this<br \/>\nsetting globally remained in place, but users could no longer set it on<br \/>\na feed-by-feed basis.) The version-checking bug has been fixed, and the<br \/>\noption has been restored.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: &#8220;ARE YOU SURE?&#8221; FATAL ERROR ELIMINATED AND SECURITY IMPROVED:<br \/>\nUnder certain circumstances (for example, when users have configured<br \/>\ntheir browser or proxy not to send HTTP Referer headers, for privacy or<br \/>\nother reasons), many features in the FeedWordPress administrative<br \/>\ninterface (such as adding new feeds or changing settings) would hit a<br \/>\nfatal error, displaying only a cryptic message reading &#8220;Are you sure?&#8221;<br \/>\nand a blank page following it. This problem has been eliminated by<br \/>\ntaking advantage of WordPress&#8217;s nonce functions, which allow the<br \/>\nsecurity check which ran into this error to work properly even without<br \/>\nreceiving an HTTP Referer header. (N.B.: WordPress&#8217;s nonce functions<br \/>\nwere first introduced in WordPress 2.0.3. If you&#8217;re using FeedWordPress<br \/>\nwith an older version of WordPress, there&#8217;s no fix for this problem:<br \/>\nyou&#8217;ll just need to turn Referer headers back on. Sorry.)<\/p>\n<\/li>\n<li>\n<p>BUGFIX: MANUALLY-ALTERED POST STATUS, COMMENT STATUS, AND PING STATUS NO<br \/>\nLONGER REVERTED BY POST UPDATES: If you manually altered the post status,<br \/>\ncomment status, or ping status of a syndicated post from what it was set<br \/>\nto when first syndicated &#8212; for example, if you had a feed that was set<br \/>\nto bring in new posts as &#8220;Pending Review,&#8221; and you then marked some of<br \/>\nthe pending posts as &#8220;Published&#8221; and others as &#8220;Unpublished&#8221; &#8212; then<br \/>\nin previous versions of FeedWordPress, these manual changes to the<br \/>\nstatus would be lost &#8212; so that, for example, your Published or Unpublished<br \/>\narticles would revert to Pending Review &#8212; if the source feed made any<br \/>\nupates to the item. This could make the Pending Review feature both<br \/>\nunreliable and also extremely frustrating to work with. The good news is<br \/>\nthat this bug has since been fixed: if you manually update the status<br \/>\nof a post, it will no longer be reverted if or when the post is updated.<\/p>\n<\/li>\n<li>\n<p>BUGFIX: OCCASIONAL FATAL ERROR ON UPDATE ELIMINATED: Under certain<br \/>\nlimited conditions (specifically, when both the title and the content of<br \/>\na post to be updated are empty), an attempt to update the post would<br \/>\nresult in a fatal error. This has been fixed.<\/p>\n<\/li>\n<li>\n<p>INTERFACE: &#8220;CONFIGURE SETTINGS&#8221; CONVENIENCE LINK ADDED TO CONFIRMATION<br \/>\nMESSAGE WHEN A NEW FEED IS ADDED: When you add a new subscription to<br \/>\nFeedWordPress, the message box that appears to confirm it now includes a<br \/>\nhandy link to the feed&#8217;s settings subpage, so that you can quickly set<br \/>\nup any special settings you may want to set up for the new feed, without<br \/>\nhaving to hunt through the list of all your other subscriptions to pick<br \/>\nout the new one.<\/p>\n<\/li>\n<li>\n<p>INTERFACE: SIMPLIFYING AND CLARIFYING AUTOMATIC UPDATES SETTINGS. I have<br \/>\nremoved an interval setting for the cronless automatic updates which has<br \/>\nconfused many FeedWordPress users. In past versions of FWP, when you<br \/>\nturned on automatic updates, you would be presented with a time interval<br \/>\nsetting which controlled how often FeedWordPress would check for feeds<br \/>\nready to be polled for updates. (That is, it DID NOT control how often<br \/>\nfeeds <em>would be polled<\/em>; it controlled how often FeedWordPress would<br \/>\n<em>check<\/em> for feeds that <em>had become ready to poll<\/em>. The schedule on which<br \/>\nfeeds became ready for polling was still controlled either by requests<br \/>\nencoded in elements within the feed itself, or else according to an<br \/>\ninternal calculation within FeedWordPress, averaging out to about 1 hour,<br \/>\nif the feed did not include any scheduling request elements.) Since many<br \/>\nusers very often (and understandably) confused the purpose of this<br \/>\nsetting, and since the setting is for a feature that&#8217;s actually very<br \/>\nunlikely to require any manual control by the user, I have removed the<br \/>\nsetting; FeedWordPress now simply uses the default value of checking for<br \/>\nfeeds to poll every 10 minutes.<\/p>\n<\/li>\n<li>\n<p>FEEDFINDER PERFORMANCE IMPROVEMENT: FeedWordPress&#8217;s FeedFinder class<br \/>\nnow uses <code>array_unique()<\/code> to make sure that it doesn&#8217;t waste time<br \/>\nrepeatedly iterating over and polling the same URI. Props to Camilo<br \/>\n(<a href=\"http:\/\/projects.radgeek.com\/2008\/12\/14\/feedwordpress-20081214\/#comment-20090122160414\" rel=\"nofollow ugc\">http:\/\/projects.radgeek.com\/2008\/12\/14\/feedwordpress-20081214\/#comment-20090122160414<\/a>).<\/p>\n<\/li>\n<\/ul>\n<h4>2008.1214<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 2.7 COMPATIBILITY: FeedWordPress has been tested for<br \/>\ncompatibility with the newly released WordPress 2.7. WordPress 2.7 has<br \/>\ndeprecated the Snoopy library for HTTP requests, which caused a fatal<br \/>\nerror for users who had not installed the MagpieRSS upgrade (or whose<br \/>\ninstallation of the MagpieRSS upgrade was overwritten by a recent update<br \/>\nof WordPress). FeedWordPress now handles things gracefully when Snoopy<br \/>\nis not immediately available.<\/p>\n<\/li>\n<li>\n<p>INTERFACE SPIFFED UP: Interface elements have been updated so that<br \/>\nFeedWordPress&#8217;s management interface fits in more naturally with the<br \/>\nWordPress 2.7 interface (including a new logo and a number of small<br \/>\ninterface tweaks).<\/p>\n<\/li>\n<li>\n<p>BUG WITH TAGS FOR SYNDICATED ARTICLES FIXED: Several users encountered a<br \/>\nbug with the option to add tags to all syndicated posts under<br \/>\nSyndication &#8211;&gt; Settings &#8212; if you told FeedWordPress to add more than<br \/>\none tag to all syndicated posts, instead of doing so correctly, it would<br \/>\nadd a <em>single<\/em> tag instead, whose name was composed of the names of all<br \/>\nthe tags you asked it to add. This bug was the result of nothing more<br \/>\ndignified than a typographical error on my part. It has now been fixed.<\/p>\n<\/li>\n<li>\n<p>MORE INFORMATION AVAILABLE WHEN FEEDWORDPRESS CAN&#8217;T FIND A FEED: When<br \/>\nyou enter a URL for a new syndication source, FeedWordPress uses a<br \/>\nsimple feed-finding algorithm (originally based on Mark Pilgrim&#8217;s<br \/>\nUniversal Feed Finder) to try to determine whether the URL is the URL<br \/>\nfor a feed, or, if the URL points to an ordinary website rather than to<br \/>\na feed, whether there is a feed for that website. All well and good, but<br \/>\nif FeedWordPress failed to find a feed, for whatever reason, it would<br \/>\ntypically return nothing more than a nasty little note to the effect of<br \/>\n&#8220;no feed found,&#8221; without any explanation of what went wrong.<br \/>\nFeedWordPress now keeps track of error conditions from the HTTP<br \/>\nrequests that it uses in the course of looking for the feed, and so may<br \/>\nbe able to give you a bit more information about the nature of the<br \/>\nproblem if something goes wrong.<\/p>\n<\/li>\n<\/ul>\n<h4>2008.1105<\/h4>\n<ul>\n<li>\n<p>INTERFACE RESTRUCTURING AND SYNDICATION &#8211;&gt; AUTHORS PAGE: As a first<br \/>\nstep towards modularizing and better organizing the user interface, a<br \/>\nnew &#8220;Authors&#8221; subpage has been created under the Syndication menu, which<br \/>\ncontrols settings for syndicated authors, both at the global default<br \/>\nlevel and at level of individual syndicated feeds.<\/p>\n<\/li>\n<li>\n<p>BUG RELATED TO THE ATTRIBUTION OF POSTS TO THE WRONG AUTHOR FIXED: Some<br \/>\nusers encountered an issue in which posts by different authors on<br \/>\ndifferent blogs &#8212; especially blogs generated by Blogger &#8212; were<br \/>\nmistakenly attributed to a single author. The problem was caused by the<br \/>\nway in which FeedWordPress matches syndicated authors to user accounts<br \/>\nin the WordPress database: normally, if two feeds each list an author<br \/>\nwith the same e-mail address, they are counted as being the same person.<br \/>\nNormally this works well, but it creates an issue in cases where<br \/>\nblogging software assigns a single anonymous e-mail address to users who<br \/>\ndo not want their real e-mail address published. This is, for example,<br \/>\nwhat Blogger does (by giving all users a default e-mail address of<br \/>\n<a href=\"mailto:&#x6e;&#x6f;&#114;&#101;&#112;&#108;&#121;&#x40;&#x62;&#x6c;&#x6f;g&#103;&#101;&#114;&#046;&#x63;&#x6f;&#x6d;\" rel=\"nofollow ugc\">&#x6e;&#x6f;&#114;&#101;&#112;&#108;&#121;&#x40;&#x62;&#x6c;&#x6f;g&#103;&#101;&#114;&#046;&#x63;&#x6f;&#x6d;<\/a> if they don&#8217;t want their own e-mail address<br \/>\nlisted). FeedWordPress now allows the user to correct for this problem<br \/>\nwith a couple of new settings under <strong>Syndication &#8211;&gt; Authors<\/strong>, which<br \/>\nallow users to turn off e-mail based author matching for particular<br \/>\naddresses, or, if desired, to turn it off entirely. By default, e-mail<br \/>\nbased author matching is still turned on, but disabled for a list of<br \/>\nknown generic e-mail addresses. Right now, the &#8220;list&#8221; consists entirely<br \/>\nof <a href=\"mailto:&#x6e;&#x6f;&#114;&#101;&#112;&#108;&#121;&#x40;&#x62;&#x6c;&#x6f;g&#103;&#101;&#114;&#046;&#x63;&#x6f;&#x6d;\" rel=\"nofollow ugc\">&#x6e;&#x6f;&#114;&#101;&#112;&#108;&#121;&#x40;&#x62;&#x6c;&#x6f;g&#103;&#101;&#114;&#046;&#x63;&#x6f;&#x6d;<\/a>; if you know other addresses that should be<br \/>\nadded, please <a href=\"http:\/\/radgeek.com\/contact\" rel=\"nofollow ugc\">contact me<\/a> to let me know.<\/p>\n<p>Please note that if you have already encountered this issue on your<br \/>\nblog, upgrading FeedWordPress will prevent it from re-occurring in the<br \/>\nfuture, but you still need to do two other things to fix the existing<br \/>\nproblem on your blog.<\/p>\n<p>First, for each feed where posts have been mis-attributed, you need to<br \/>\nchange the existing author mapping rules to re-map a a syndicated<br \/>\nauthor&#8217;s name to the proper target account. Go to <strong>Syndication &#8211;&gt;<br \/>\nAuthors<\/strong>, select the feed you want to change from the drop-down list,<br \/>\nand then change the settings under the &#8220;Syndicated Authors&#8221; section.<br \/>\n(You will probably need to select &#8220;will be assigned to a new user&#8230;&#8221; to<br \/>\ncreate a new user account with the appropriate name.)<\/p>\n<p>Second, for each feed where posts have been mis-attributed, you need to<br \/>\nre-assign already-syndicated posts that were mis-attributed to the<br \/>\ncorrect author. You can do that from <strong>Syndication &#8211;&gt; Authors<\/strong> by<br \/>\nusing the author re-assignment feature, described below.<\/p>\n<\/li>\n<li>\n<p>AUTHOR RE-ASSIGNMENT FOR A PARTICULAR FEED: The author settings page<br \/>\nfor each syndicated feed, under <strong>Syndication &#8211;&gt; Authors<\/strong>, now<br \/>\nincludes an section titled &#8220;Fixing mis-matched authors,&#8221; which provides<br \/>\nan interface for re-assigning or deleting all posts attributed to a<br \/>\nparticular author on a particular feed.<\/p>\n<\/li>\n<li>\n<p>SUPPORT FOR <code>&lt;atom:source&gt;<\/code> ELEMENT IN SYNDICATED FEEDS: Some feeds<br \/>\n(for example, those produced by FeedWordPress) aggregate content from<br \/>\nseveral different sources, and include information about the original<br \/>\nsource of the post in an <code>&lt;atom:source&gt;<\/code> element. A new setting under<br \/>\n<strong>Syndication &#8211;&gt; Options<\/strong> allows you to control what FeedWordPress<br \/>\nwill report as the source of posts syndicated from aggregator feeds in<br \/>\nyour templates and feeds: you can have FeedWordPress report that the<br \/>\nsource of a post is the aggregator feed itself, or you can have it<br \/>\nreport that the source of a post is the original source that the<br \/>\naggregator originally syndicated the post from.<\/p>\n<p>By default, FeedWordPress will report the aggregator, not the original<br \/>\nsource, as the source of a syndicated item.<\/p>\n<\/li>\n<li>\n<p>LOAD BALANCING AND TIME LIMITING FEATURES FOR UPDATES: Some users have<br \/>\nencountered issues due to running up against PHP execution time limits<br \/>\nduring the process of updating large syndicated feeds, or a very large<br \/>\nset of syndicated feeds. FeedWordPress now has a feature that allows you<br \/>\nto limit the total amount of time spent updating a feed, through the<br \/>\n&#8220;Time limit on updates&#8221; setting under <strong>Syndication &#8211;&gt; Options<\/strong>. By<br \/>\nturning on this setting and adjusting the time limit to a low enough<br \/>\nfigure to avoid your PHP installation&#8217;s time-out setting. (PHP execution<br \/>\ntime limits are usually in the vicinity of 30 seconds, so an update<br \/>\ntime limit of 25 seconds or so should provide plenty of time for updates<br \/>\nwhile allowing a cushion of time for other, non-update-related functions<br \/>\nto do their work.)<\/p>\n<p>If feed updates are interrupted by the time limit, FeedWordPress uses<br \/>\nsome simple load balancing features to make sure that updates to other<br \/>\nfeeds will not be blocked by the time-hogging feed, and will also make<br \/>\nsure that when the interrupted update is resumed, FeedWordPress will<br \/>\nskip ahead to resume processing items at the point at which it was<br \/>\ninterrupted last time, so that posts further down in the feed will<br \/>\neventually get processed, and not get blocked by the amount of time it<br \/>\ntakes to process the items higher up in the feed.<\/p>\n<\/li>\n<li>\n<p><code>guid<\/code> INDEX CREATION BUTTON: FeedWordPress frequently issues queries on<br \/>\nthe <code>guid<\/code> column of the WordPress posts database (since it uses post<br \/>\nguid URIs to keep track of which posts it has syndicated). In very large<br \/>\nFeedWordPress installations, you can often significantly improve<br \/>\nperformance by creating a database index on the <code>guid<\/code> column, but<br \/>\nnormally you would need to poke around with MySQL or a tool like<br \/>\nphpMyAdmin to do this. FeedWordPress can now save you the trouble: to<br \/>\ncreate an index on the <code>guid<\/code> column, just go to<br \/>\n<strong>Syndication &#8211;&gt; Options<\/strong>, and mash the button at the bottom of the<br \/>\n&#8220;Back End&#8221; section.<\/p>\n<\/li>\n<\/ul>\n<h4>2008.1101<\/h4>\n<ul>\n<li>INTERFACE BUG THAT PREVENTED ADDING NEW SITES FIXED: The UI reforms in<br \/>\nFWP 2008.1030 unintentionally introduced a bug that prevents clean<br \/>\ninstallations of FeedWordPress from providing an input box for adding<br \/>\nnew feeds to the list of syndicated feeds. This bug has been fixed.<\/li>\n<\/ul>\n<h4>2008.1030<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 2.6 COMPATIBILITY: FeedWordPress should now be compatible with<br \/>\nWordPress 2.6, and should work more or less seamlessly with the new post<br \/>\nrevision system. A bug which caused multiple new revisions to be created<br \/>\nfor posts on certain feeds, regardless of whether or not the item had<br \/>\nbeen updated, has been fixed.<\/p>\n<\/li>\n<li>\n<p>INTERFACE IMPROVEMENTS: The user interface has been substantially<br \/>\nrestyled to fit in better with the visual style of WordPress 2.5 and<br \/>\n2.6.<\/p>\n<\/li>\n<li>\n<p>YOUTUBE BUG FIXED: POSTS SYNDICATED THROUGH AN AUTOMATIC UPDATE ARE NO<br \/>\nLONGER STRIPPED OF <code>&lt;OBJECT&gt;<\/code> TAGS AND CERTAIN OTHER HTML ELEMENTS: Due<br \/>\nto the way that some versions of WordPress process posts that are<br \/>\ninserted into the database when no user is logged in, many users<br \/>\nexperienced an issue where YouTube videos and other content using the<br \/>\nHTML <code>&lt;object&gt;<\/code> tag would be stripped out of posts that were syndicated<br \/>\nduring an automatic update. (Posts that were syndicated through manual<br \/>\nupdates from within the WordPress Dashboard were not affected, because<br \/>\nthe issue does not arise when an update is executed under a logged-in<br \/>\nadministrator&#8217;s credentials.) This bug has now been fixed; YouTube<br \/>\nvideos and other content using <code>&lt;object&gt;<\/code> tags should now appear<br \/>\nproperly in syndicated posts, regardless of the way in which the post<br \/>\nwas syndicated.<\/p>\n<\/li>\n<li>\n<p>AJAX BUGS FIXED: Bugs which blocked the normal operation of WordPress<br \/>\n2.5&#8217;s AJAX interface elements when FeedWordPress was activated have been<br \/>\nfixed.<\/p>\n<\/li>\n<li>\n<p>TAG SUPPORT: A couple of features have been introduced to take advantage<br \/>\nof the tagging features in WordPress 2.3.x, 2.5.x, and 2.6.x. Now, when<br \/>\nunfamiliar categories are encountered for posts on a feed, you can<br \/>\nchoose for FeedWordPress (1) to drop the category; (2) to drop the<br \/>\ncategory and to filter out any post that does not match at least one<br \/>\nfamiliar category; (3) to create a new category with that name, or,<br \/>\nnow, you can also have FeedWordPress (4) create a new <em>tag<\/em> with that<br \/>\nname. This option can be set site-wide under Syndication &#8211;&gt; Options,<br \/>\nor it can be set on a feed-by-feed basis in a feed&#8217;s Edit screen.<\/p>\n<p>In addition, you can now set particular tags to apply to all incoming<br \/>\nsyndicated posts, under Syndication &#8211;&gt; Options, or you can set tags<br \/>\nto apply to all incoming syndicated posts from a particular feed in that<br \/>\nfeed&#8217;s Edit screen.<\/p>\n<\/li>\n<li>\n<p>FORMATTING FILTERS: There is a new option available under Syndication -&gt;<br \/>\nOptions which allows users to choose whether or not to expose syndicated<br \/>\nposts to being altered by formatting filters. By default, FeedWordPress<br \/>\nhas always protected syndicated posts (which are already in display-ready<br \/>\nHTML when they are syndicated) from being reformatted by formatting<br \/>\nfilters. However, this approach means that certain plugins which depend<br \/>\non formatting filters (for example, to add &#8220;Share This&#8221; bars or relevant<br \/>\nlinks to the end of a post) are blocked from working on any syndicated<br \/>\nposts. If you want to use one of these plugins together with<br \/>\nFeedWordPress, you can now do so by changing the &#8220;Formatting Filters&#8221;<br \/>\nsetting from &#8220;Protect&#8221; to &#8220;Expose.&#8221;<\/p>\n<\/li>\n<li>\n<p><code>&lt;atom:source&gt;<\/code> ELEMENTS NOW INCLUDED IN ATOM FEED: Atom 1.0 provides<br \/>\na standard method for aggregators to indicate information about the original source of<br \/>\na syndicated post, using the <code>&lt;atom:source&gt;<\/code> element. FeedWordPress now<br \/>\nintroduces standard <code>&lt;atom:source&gt;<\/code> elements including the title, homepage, and<br \/>\nfeed URI of the source from which a syndicated post was syndicated. Cf.<br \/>\n<a href=\"http:\/\/www.atomenabled.org\/developers\/syndication\/atom-format-spec.php#element.source\" rel=\"nofollow ugc\">http:\/\/www.atomenabled.org\/developers\/syndication\/atom-format-spec.php#element.source<\/a><\/p>\n<\/li>\n<li>\n<p>MODULARIZATION OF CODE: The code for different elements of FeedWordPress<br \/>\nhas been broken out into several modules for easier inspection,<br \/>\ndocumentation, and maintenance of the code.<\/p>\n<\/li>\n<li>\n<p>VERSIONING SCHEME CHANGED: FeedWordPress&#8217;s feature set has proven stable<br \/>\nenough that it can now be removed from beta status; a good thing, since<br \/>\nI was very quickly running out of version numbers to use. New releases<br \/>\nof FeedWordPress will have version numbers based on the date of their<br \/>\nrelease.<\/p>\n<\/li>\n<\/ul>\n<h4>0.993<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 2.5.1 COMPATIBILITY: FeedWordPress should now be compatible<br \/>\nwith WordPress 2.5.1.<\/p>\n<\/li>\n<li>\n<p>WORDPRESS 2.5 INTERFACE IMPROVEMENTS: FeedWordPress&#8217;s Dashboard<br \/>\ninterface has undergone several cosmetic changes that should help it<br \/>\nintegrate better with the WordPress Dashboard interface in WordPress<br \/>\nversion 2.5.x.<\/p>\n<\/li>\n<li>\n<p>SYNDICATED POSTS CAN BE MARKED AS &#8220;PENDING REVIEW&#8221;: WordPress 2.3 users<br \/>\ncan now take advantage of WordPress&#8217;s new &#8220;Pending Review&#8221; features for<br \/>\nincoming syndicated posts. Posts marked as &#8220;Pending Review&#8221; are not<br \/>\npublished immediately, but are marked as ready to be reviewed by an<br \/>\nAdministrator or Editor, who can then choose to publish the post or<br \/>\nhold it back. If you want to review syndicated posts from a particular<br \/>\nfeed, or from all feeds, before they are posted, then use<br \/>\nSyndication &#8211;&gt; Syndicated Sites &#8211;&gt; Edit or Syndication &#8211;&gt; Options to<br \/>\nchange the settings for handling new posts.<\/p>\n<\/li>\n<li>\n<p>AWARE OF NEW URI FOR del.icio.us FEEDS: Previous releases of<br \/>\nFeedWordPress already automatically split del.icio.us tags up<br \/>\nappropriately appropriately when generating categories. (del.icio.us<br \/>\nfeeds smoosh all the tags into a single <code>&lt;dc:subject&gt;<\/code> element,<br \/>\nseparated by spaces; FeedWordPress un-smooshes them into multiple<br \/>\ncategories by separating them at whitespace.) Unfortunately, del.icio.us<br \/>\nrecently broke the existing behavior by changing host names for their<br \/>\nfeeds from del.icio.us to feeds.delicious.com. Version 0.993 accounts<br \/>\nfor the new host name and un-breaks the tag splitting.<\/p>\n<\/li>\n<\/ul>\n<h4>0.992<\/h4>\n<ul>\n<li>\n<p>AUTHOR RE-MAPPING: FeedWordPress now offers considerable control over<br \/>\nhow author names on a feed are translated into usernames within the<br \/>\nWordPress database. When a post by an unrecognized author comes in,<br \/>\nAdministrators can now specify any username as the default username to<br \/>\nassign the post to by setting the option in Syndication &#8211;&gt; Options<br \/>\n(formerly FeedWordPress only allowed you to assign such posts to user<\/p>\n<p>1, the site administrator). Administrators can also create re-mapping<\/p>\n<p>rules for particular feeds (under Syndication &#8211;&gt; Syndicated Sites &#8211;&gt;<br \/>\nEdit), so that (for example) any posts attributed to &#8220;Administrator&#8221;<br \/>\non the feed <a href=\"http:\/\/praxeology.net\/blog\/feed\/\" rel=\"nofollow ugc\">http:\/\/praxeology.net\/blog\/feed\/<\/a> will be assigned to<br \/>\na user named &#8220;Roderick T. Long,&#8221; rather than a user named<br \/>\n&#8220;Administrator.&#8221; These settings also allow administrators to filter out<br \/>\nposts by particular users, and to control what will happen when<br \/>\nFeedWordPress encounters a post by an unrecognized user on that<br \/>\nparticular feed.<\/p>\n<\/li>\n<li>\n<p>BUG RELATED TO URIS CONTAINING AMPERSAND CHARACTERS FIXED: A bug in<br \/>\nWordPress 2.x&#8217;s handling of URIs in Blogroll links created problems for<br \/>\nupdating any feeds whose URIs included an ampersand character, such as<br \/>\nGoogle News RSS feeds and other feeds that have multiple parameters<br \/>\npassed through HTTP GET. If you experienced this bug, the most likely<br \/>\neffect was that FeedWordPress simply would not import new posts from a<br \/>\nfeed when instructred to do so, returning a &#8220;0 new posts&#8221; response. In<br \/>\nother cases, it might lead to unpredictable results from feed updates,<br \/>\nsuch as importing posts which were not contained in the feed being<br \/>\nsyndicated, but which did appear elsewhere on the same website. This bug<br \/>\nhas, hopefully, been resolved, by correcting for the bug in WordPress.<\/p>\n<\/li>\n<\/ul>\n<h4>0.991<\/h4>\n<ul>\n<li>\n<p>WORDPRESS MU COMPATIBILITY: FeedWordPress should now be compatible with<br \/>\nrecent releases of WordPress MU. Once FeedWordPress is made available<br \/>\nas a plugin, each individual blog can choose to activate FeedWordPress<br \/>\nand syndicate content from its own set of contributors.<\/p>\n<\/li>\n<li>\n<p>DISPLAY OF MAGPIE WARNINGS: A number of MagpieRSS warnings or error<br \/>\nmessages that were displayed when performing an automatic update are<br \/>\nno longer displayed, unless debugging parameters have been explicitly<br \/>\nenabled.<\/p>\n<\/li>\n<li>\n<p>BUG RELATED TO INTERNATIONAL CHARACTERS IN AUTHOR NAMES FIXED: Due to a<br \/>\nsubtle incompatability between the way that FeedWordPress generated new<br \/>\nuser information, and the way that WordPress 2.0 and later added new<br \/>\nauthors to the database, FeedWordPress might end up creating duplicate<br \/>\nauthors, or throwing a critical error message, when it encountered<br \/>\nauthors whose names included international characters. This<br \/>\nincompatability has now been fixed; hopefully, authors with<br \/>\ninternational characters in their names should now be handled properly.<\/p>\n<\/li>\n<li>\n<p><code>&lt;media:content&gt;<\/code> BUG IN MAGPIERSS FIXED: A bug in MagpieRSS&#8217;s handling<br \/>\nof namespaced elements has been fixed. Among other things, this bug<br \/>\ncaused items containing a Yahoo MediaRSS <code>&lt;media:content&gt;<\/code> element (such<br \/>\nas many of the feeds produced by wordpress.com) to be represented<br \/>\nincorrectly, with only a capital &#8220;A&#8221; where the content of the post<br \/>\nshould have been. Feeds containing <code>&lt;media:content&gt;<\/code> elements should now<br \/>\nbe syndicated correctly.<\/p>\n<\/li>\n<li>\n<p>update_feedwordpress PARAMETER: You can now use an HTTP GET parameter<br \/>\n(<code>update_feedwordpress=1<\/code>) to request that FeedWordPress poll its feeds<br \/>\nfor updates. When used together with a crontab or other means of<br \/>\nscheduling tasks, this means that you can keep your blog automatically<br \/>\nupdated on a regular schedule, even if you do not choose to use the<br \/>\ncron-less automatic updates option.<\/p>\n<\/li>\n<li>\n<p>Some minor interface-related bugs were also fixed.<\/p>\n<\/li>\n<\/ul>\n<h4>0.99<\/h4>\n<p>Version 0.99 adds several significant new features, fixes some bugs, and<br \/>\nprovides compatability with WordPress 2.2.x and 2.3.x.<\/p>\n<ul>\n<li>\n<p>WORDPRESS 2.2 AND 2.3 COMPATIBILITY: FeedWordPress should now be<br \/>\ncompatible with WordPress version 2.2 and the upcoming WordPress<br \/>\nversion 2.3. In particular, it has been tested extensively against<br \/>\nWordPress 2.2.3 and WordPress 2.3 Release Candidate 1.<\/p>\n<\/li>\n<li>\n<p>AUTOMATIC UPDATES WITHOUT CRON: FeedWordPress now allows you to<br \/>\nautomatically schedule checks for new posts without using external task<br \/>\nscheduling tools such as cron. In order to enable automatic updates, go<br \/>\nto <strong>Syndication &#8211;&gt; Options<\/strong> and set &#8220;Check for new posts&#8221; to<br \/>\n&#8220;automatically.&#8221; For details, see &#8220;Automatic Feed Updates&#8221; in<br \/>\nREADME.text.<\/p>\n<p>An important side-effect of the changes to the update system is that if<br \/>\nyou were previously using the cron job and the <code>update-feeds.php<\/code> script<br \/>\nto schedule updates, you need to change your cron set-up. The old<br \/>\n    update-feeds.php script no longer exists. Instead, if you wish to use<br \/>\na cron job to guarantee updates on a particular schedule, you should<br \/>\nhave the cron job fetch the front page of your blog (for example, by<br \/>\nusing <code>curl http:\/\/www.zyx.com\/blog\/ &gt; \/dev\/null<\/code>) instead of activating<br \/>\nthe <code>update-feeds.php<\/code> script. If automatic updates have been enabled,<br \/>\nfetching the front page will automatically trigger the update process.<\/p>\n<\/li>\n<li>\n<p>INTERFACE REORGANIZATION: All FeedWordPress functions are now located<br \/>\nunder a top-level &#8220;Syndication&#8221; menu in the WordPress Dashboard. To<br \/>\nmanage the list of syndicated sites, manually check for new posts on<br \/>\none or more feeds, or syndicate a new site, you should use the main page<br \/>\nunder <strong>Syndication<\/strong>. To change global settings for FeedWordPress,<br \/>\nyou should use <strong>Syndication &#8211;&gt; Options<\/strong>.<\/p>\n<\/li>\n<li>\n<p>FILE STRUCTURE REORGANIZATION: Due to a combination of changing styles<br \/>\nfor FeedWordPress plugins and lingering bugs in the FeedWordPress admin<br \/>\nmenu code, the code for FeedWordPress is now contained in two different<br \/>\nPHP files, which should be installed together in a subdirectory of your<br \/>\nplugins directory named <code>feedwordpress<\/code>. (See README.text for<br \/>\ninstallation and upgrade instructions relating to the change.)<\/p>\n<\/li>\n<li>\n<p>MULTIPLE CATEGORIES SETTING: Some feeds use non-standard methods to<br \/>\nindicate multiple categories within a single category element. (The most<br \/>\npopular site to do this is del.icio.us, which separates tags with a<br \/>\nspace.) FeedWordPress now allows you to set an optional setting, for any<br \/>\nfeed which does this, indicating the character or characters used to<br \/>\ndivide multiple categories, using a Perl-compatible regular expression.<br \/>\n(In the case of del.icio.us feeds, FeedWordPress will automatically use<br \/>\n\\s for the pattern without your having to do any further configuration.)<br \/>\nTo turn this setting on, simply use the &#8220;Edit&#8221; link for the feed that<br \/>\nyou want to turn it on for.<\/p>\n<\/li>\n<li>\n<p>REGULAR EXPRESSION BUG FIXED: Eliminated a minor bug in the regular<br \/>\nexpressions for e-mail addresses (used in parsing RSS <code>author<\/code><br \/>\nelements), which could produce unsightly error messages for some users<br \/>\nparsing RSS 2.0 feeds.<\/p>\n<\/li>\n<li>\n<p>DATE \/ UPDATE BUG FIXED: A bug in date handling was eliminated that may<br \/>\nhave caused problems if any of (1) WordPress, or (2) PHP, or (3) your<br \/>\nweb server, or (4) your MySQL server, has been set to use a different<br \/>\ntime zone from the one that any of the others is set to use. If<br \/>\nFeedWordPress has not been properly updating updated posts, or has been<br \/>\nupdating posts when there shouldn&#8217;t be any changes for the update, this<br \/>\nrelease may solve that problem.<\/p>\n<\/li>\n<li>\n<p>GOOGLE READER BUGS FIXED: A couple of bugs that made it difficult for<br \/>\nFeedWordPress to interact with Google Reader public feeds have been<br \/>\nfixed. Firstly, if you encountered an error message reading &#8220;There was a<br \/>\nproblem adding the newsfeed. [SQL: ]&#8221; when you tried to add the feed,<br \/>\nthe cause of this error has been fixed. Secondly, if you succeeded in<br \/>\ngetting FeedWordPress to check a Google Reader feed, only to find that<br \/>\nthe title of posts had junk squashed on to the end of them, that bug<br \/>\nhas been fixed too. To fix this bug, you must install the newest version<br \/>\nof the optional MagpieRSS upgrade.<\/p>\n<\/li>\n<li>\n<p>FILTER PARAMETERS: Due to an old, old bug in WordPress 1.5.0 (which was<br \/>\nwhat was available back when I first wrote the filter interface),<br \/>\nFeedWordPress has traditionally only passed one parameter to<br \/>\nsyndicated_item and syndicated_post filters functions &#8212; an array<br \/>\ncontaining either the Magpie representation of a syndicated item from<br \/>\nthe feed, or the database representation of a post about to be inserted<br \/>\ninto the WordPress database. If you needed information about the feed<br \/>\nthat the item came from, this was accessible only through a pair of<br \/>\nglobal variables, $fwp_channel and $fwp_feedmeta.<\/p>\n<p>Since it&#8217;s been a pretty long time since WordPress 1.5.0 was in<br \/>\nwidespread usage, I have gone ahead and added an optional second<br \/>\nparameter to the invocation of the syndicated_item and syndicated_post<br \/>\nfilters. If you have written a filter for FeedWordPress that uses either<br \/>\nof these hooks, you can now register that filter to accept 2 parameters.<br \/>\nIf you do so, the second parameter will be a SyndicatedPost object,<br \/>\nwhich, among other things, allows you to access information about the<br \/>\nfeed from which an item is syndicated using the $post-&gt;feed and the<br \/>\n$post-&gt;feedmeta elements (where $post is the name of the second<br \/>\nparameter).<\/p>\n<p>NOTE THAT THE OLD GLOBAL VARIABLES ARE STILL AVAILABLE, for the time<br \/>\nbeing at least, so existing filters will not break with the upgrade.<br \/>\nThey should be considered deprecated, however, and may be eliminated in<br \/>\nthe future.<\/p>\n<\/li>\n<li>\n<p>FILTER CHANGE \/ BUGFIX: the array that is passed as the first argument<br \/>\nsyndicated_post filters no longer is no longer backslash-escaped for<br \/>\nMySQL when filters are called. This was originally a bug, or an<br \/>\noversight; the contents of the array should only be escaped for the<br \/>\ndatabase <em>after<\/em> they have gone through all filters. IF YOU HAVE WRITTEN<br \/>\nANY syndicated_post FILTERS THAT PRESUME THE OLD BEHAVIOR OF PASSING IN<br \/>\nSTRINGS THAT ARE ALREADY BACKSLASH-ESCAPED, UPDATE YOUR FILTERS<br \/>\nACCORDINGLY.<\/p>\n<\/li>\n<li>\n<p>OTHER MINOR BUGFIXES AND INTERNAL CHANGES: The internal architecture of<br \/>\nFeedWordPress has been significantly changed to make the code more<br \/>\nmodular and clean; hopefully this should help reduce the number of<br \/>\ncompatibility updates that are needed, and make them easier and quicker<br \/>\nwhen they are needed.<\/p>\n<\/li>\n<\/ul>\n<h4>0.981<\/h4>\n<p>Version 0.981 is a narrowly targeted bugfix and compatibility release, whose<br \/>\nmain purpose is to resolve a major outstanding problem: the incompatibility<br \/>\nbetween version 0.98 of WordPress and the recently released WordPress 2.1.<\/p>\n<ul>\n<li>\n<p>WORDPRESS 2.1 COMPATIBILITY: FeedWordPress is now compatible with<br \/>\nWordPress 2.1, as well as retaining its existing support for WordPress<br \/>\n2.0 and 1.5. Incompatibilities that resulted in database warnings, fatal<br \/>\nerrors, and which prevented FeedWordPress from syndicating new posts,<br \/>\nhave been eliminated.<\/p>\n<\/li>\n<li>\n<p>RSS-FUNCTIONS.PHP RENAMED TO RSS.PHP: if you use the upgraded MagpieRSS<br \/>\nreplacement that&#8217;s included with FeedWordPress, be sure to note that<br \/>\nthere are now <em>two<\/em> files to upload from the <code>OPTIONAL\/wp-includes<\/code><br \/>\nsubdirectory in order to carry out the upgrade: rss-functions.php and<br \/>\nrss.php. <strong>It is necessary to upload both files<\/strong>, due to a change in<br \/>\nthe file naming scheme in WordPress 2.1, and it is necessary to do so<br \/>\nwhether you are using WordPress 2.1 or not. If you only upload the<br \/>\n    rss-functions.php file as in previous installations you will not have<br \/>\na working copy of MagpieRSS; the rss.php file contains the actual code.<\/p>\n<\/li>\n<li>\n<p>DATE BUG AFFECTING SOME PHP INSTALLATIONS RESOLVED: due to a subtle bug<br \/>\nin parse_w3cdtf(), some installations of PHP encountered problems with<br \/>\nFeedWordPress&#8217;s attempt to date posts, which would cause some new posts<br \/>\non Atom feeds to be dated as if they had apppeared in 1969 or 1970<br \/>\n(thus, effectively, never appearing on front page at all). This bug in<br \/>\nthe date handling should now be fixed.<\/p>\n<\/li>\n<li>\n<p>PHP  SHORT FORM ELIMINATED: some installations of PHP do not<br \/>\nallow the  short form for printing PHP values, which was used<br \/>\nextensively in the FeedWordPress interface code. Since this could cause<br \/>\nfatal errors for users with the wrong installation of PHP, the short<br \/>\nform has been replaced with full PHP echo statements, and is no longer<br \/>\nused in FeedWordPress.<\/p>\n<\/li>\n<li>\n<p>BETTER USER INTERFACE INTEGRATION WITH WORDPRESS 2.x: Some minor changes<br \/>\nhave been made to help the FeedWordPress interface pages blend in better<br \/>\nwith the user interface when running under WordPress 2.x.<\/p>\n<\/li>\n<li>\n<p>GLOBAL CATEGORIES BUG RESOLVED: a bug that prevented some users from<br \/>\nsetting one or more categories to apply to syndicated posts from all<br \/>\nfeeds (using the checkbox interface under Options &#8211;&gt; Syndication) has<br \/>\nbeen resolved.<\/p>\n<\/li>\n<\/ul>\n<h4>0.98<\/h4>\n<ul>\n<li>\n<p>WORDPRESS 2.0 COMPATIBILITY: This is a narrowly-targeted release to<br \/>\nsolve a major outstanding problem. FeedWordPress is now compatible with<br \/>\nboth WordPress 1.5 and WordPress 2.0. Incompatibilities that caused<br \/>\nfatal SQL errors, and a more subtle bug with off-kilter counts of posts<br \/>\nunder a given category, have been resolved. FeedWordPress tests for<br \/>\ndatabase schema using the global $wp_db_version variable (if null, then<br \/>\nwe presume that we&#8217;re dealing with WordPress 1.5).<\/p>\n<p>NOTE: I have <strong>not<\/strong> fully tested FeedWordPress with WordPress 2.0.<br \/>\nFurther testing may reveal more bugs. However, you should now be able<br \/>\nto get at least basic FeedWordPress functionality up and running.<\/p>\n<\/li>\n<li>\n<p>AUTHOR MATCHING: FeedWordPress tests several fields to see if it can<br \/>\nidentify the author of the post as a user already in the WordPress user<br \/>\ndatabase. In previous versions, it tested the user login, the nickname,<br \/>\nand tested for &#8220;aliases&#8221; listed in the Profile (see documentation). FWP<br \/>\nnow also matches authors on the basis of e-mail address (<em>if<\/em> an e-mail<br \/>\naddress is present). This is particularly helpful for formats such as<br \/>\nRSS 2.0, in which authors are primarily identified by e-mail addresses.<\/p>\n<\/li>\n<\/ul>\n<h4>0.97<\/h4>\n<ul>\n<li>\n<p>INSTALLATION PROCEDURE: Some of the changes between 0.96 and 0.97<br \/>\nrequire upgrades to the meta-data stored by FeedWordPress to work<br \/>\nproperly. Thus, if you are upgrading from 0.96 or earlier to 0.97, most<br \/>\nFeedWordPress operations (including updates and template functions)<br \/>\nWILL BE DISABLED until you run the upgrade procedure. Fortunately,<br \/>\nrunning the upgrade procedure is easy: just go to either Options &#8211;&gt;<br \/>\nSyndication or Links &#8211;&gt; Syndicated in the WordPress Dashboard and press<br \/>\nthe button.<\/p>\n<\/li>\n<li>\n<p>FEED FORMAT SUPPORT: Support has been added for the Atom 1.0 IETF<br \/>\nstandard. Several other elements are also newly supported<br \/>\n(dcterms:created, dcterms:issued, dcterms:modified, dc:identifier,<br \/>\nproper support for the RSS 2.0 guid element, the RSS 2.0 author element,<br \/>\nthe use of Atom author or Dublin Core dc:creator constructs at the feed<br \/>\nlevel to identify the author of individual items, etc.)<\/p>\n<p>N.B.: full support of several Atom 1.0 features, such as categories<br \/>\nand enclosures, requires you to install the optional rss-functions.php<br \/>\nupgrade in your wp-includes directory.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: Running <code>update-feeds.php<\/code> from command line or crontab<br \/>\nreturned &#8220;I don&#8217;t syndicate&#8230;&#8221; errors. It turns out that WordPress<br \/>\nsometimes tramples on the internal PHP superglobals that I depended on<br \/>\nto determine whether or not the script was being invoked from the<br \/>\ncommand line. This has been fixed (the variables are now checked<br \/>\n<em>before<\/em> WordPress can trample them). Note that <code>update-feeds.php<\/code> has<br \/>\nbeen thoroughly overhauled anyway; see below for details.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: Duplicate categories or author names. Fixed two bugs that could<br \/>\ncreate duplicate author and\/or category names when the name contained<br \/>\neither (a) certain international characters (causing a mismatch between<br \/>\nMySQL and PHP&#8217;s handling of lowercasing text), or (b) characters that<br \/>\nhave a special meaning in regular expressions (causing MySQL errors when<br \/>\nlooking for the author or category due to regexp syntax errors). These<br \/>\nshould now be fixed thanks to careful escaping of names that go into<br \/>\nregular expressions and careful matching of lowercasing functions<br \/>\n(comparing results from PHP only to other results from PHP, and results<br \/>\nfrom MySQL only to other results from MySQL).<\/p>\n<\/li>\n<li>\n<p>BUG FIX: Items dated December 31, 1969 should appear less often. The<br \/>\nfunction for parsing W3C date-time format dates that ships with<br \/>\nMagpieRSS can only correctly parse fully-specified dates with a<br \/>\nfully-specified time, but valid W3C date-time format dates may omit the<br \/>\ntime, the day of the month, or even the month. Some feeds in the wild<br \/>\ndate their items with coarse-grained dates, so the optional<br \/>\n    rss-functions.php upgrade now   includes a more flexible parse_w3cdtf()<br \/>\nfunction that will work with both coarse-grained and fully-specified<br \/>\ndates. (If parts of the date or the time are omitted, they are filled in<br \/>\nwith values based on the current time, so &#8216;2005-09-10&#8217; will be dated to<br \/>\nthe current time on that day; &#8216;2004&#8217; will be dated to this day and time<br \/>\none year ago.<\/p>\n<p>N.B.: This fix is only available in the optional <code>rss-functions.php<\/code><br \/>\nupgrade.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: Evil use of HTTP GET has been undone. The WordPress interface<br \/>\nis riddled with inappropriate (non-idempotent) uses of HTTP GET queries<br \/>\n(ordinary links that make the server do something with significant<br \/>\nside-effects, such as deleting a post or a link from the database).<br \/>\nFeedWordPress did some of this too, especially in places where it aped<br \/>\nthe WordPress interface (e.g. the &#8220;Delete&#8221; links in Links &#8211;&gt;<br \/>\nSyndicated). That&#8217;s bad business, though. I&#8217;ve changed the interface so<br \/>\nthat all the examples of improper side-effects that I can find now<br \/>\nrequire an HTTP POST to take effect. I think I got pretty much<br \/>\neverything; if there&#8217;s anything that I missed, let me know.<\/p>\n<p>Further reading: <a href=\"http:\/\/www.intertwingly.net\/blog\/2005\/05\/06\/This-Stuff-Matters\" rel=\"nofollow ugc\">Sam Ruby 2005-05-06: This Stuff Matters<\/a><\/p>\n<\/li>\n<li>\n<p>BUG FIX: Categories applied by <code>cats<\/code> setting should no longer prevent<br \/>\ncategory-based filtering from working. In FeedWordPress, you can (1)<br \/>\napply certain categories to all syndicated posts, or all posts from<br \/>\na particular feed; and (2) filter out all posts that don&#8217;t match one<br \/>\nof the categories that are already in the WordPress database (allowing<br \/>\nfor simple category-based filtering; just load up WordPress with the<br \/>\ncategories you want to accept, and then tell FeedWordPress not to create<br \/>\nnew ones). However, the way that (1) and (2) were implemented meant that<br \/>\nyou couldn&#8217;t effectively use them together; once you applied a known<br \/>\ncategory to all syndicated posts from a particular feed, it meant that<br \/>\nthey&#8217;d have at least one familiar category (the category or categories<br \/>\nyou were applying), and that would get all posts past the filter no<br \/>\nmatter what categories they were originally from.<\/p>\n<p>Well, no longer. You can still apply categories to all syndicated posts<br \/>\n(using either Syndication &#8211;&gt; Options, or the feed-level settings under<br \/>\nLinks &#8211;&gt; Syndicated). But these categories are not applied to the post<br \/>\nuntil <em>after<\/em> it has already passed by the &#8220;familiar categories&#8221; filter.<br \/>\nSo now, if you want, you can do category filtering and <em>then<\/em> apply as<br \/>\nmany categories as you please to all and only posts that pass the filter.<\/p>\n<\/li>\n<li>\n<p>BUG FIX: Other minor typos and HTML gaffes were fixed along the way.<\/p>\n<\/li>\n<li>\n<p>PERFORMANCE: get_feed_meta() no longer hits the database for information<br \/>\non every call; it now caches link data in memory, so FeedWordPress only<br \/>\ngoes to the database once for each syndicated link. This may<br \/>\nsubstantially improve performance if your database server resources<br \/>\nare tight and your templates make a lot of use of custom settings from<br \/>\nget_feed_meta().<\/p>\n<\/li>\n<li>\n<p>API CHANGE: Link ID numbers, rather than RSS URIs, are now used to<br \/>\nidentify the feed from which a post is syndicated when you use template<br \/>\nfunctions such as get_feed_meta(). The practical upshot of this is you<br \/>\ncan switch feeds, or change the feed address for a particular syndicated<br \/>\nsite, without breaking your templates for all the posts that were<br \/>\nsyndicated from the earlier URI.<\/p>\n<\/li>\n<li>\n<p>API CHANGE: if you have plugins or templates that make use of the<br \/>\nget_feed_meta() function or the $fwp_feedmeta global, note that the<br \/>\ndata formerly located under the <code>uri<\/code> and <code>name<\/code> fields is now located<br \/>\nunder the <code>link\/uri<\/code> field and the <code>link\/name<\/code> field, respectively. Note<br \/>\nalso that you can access the link ID number for any given feed under the<br \/>\nglobal $fwp_feedmeta[&#8216;link\/id&#8217;] (in plugins) or<br \/>\nget_feed_meta(&#8216;link\/id&#8217;) (in a template in post contexts).<\/p>\n<\/li>\n<li>\n<p>FEATURE: the settings for individual feeds can now be edited using a<br \/>\n    humane interface (where formerly you had to tweak key-value pairs in the<br \/>\nLink Notes section). To edit settings for a feed, pick the feed that you<br \/>\nwant under Links &#8211;&gt; Syndicated and click the Edit link.<\/p>\n<\/li>\n<li>\n<p>FEATURE: The &#8220;Unsubscribe&#8221; button (formerly &#8220;Delete&#8221;) in Links &#8211;&gt;<br \/>\nSyndicated now offers three options for unsubscribing from a feed: (1)<br \/>\nturning off the subscription without deleting the feed data or affecting<br \/>\nposts that were syndicated from the feed (this works by setting the Link<br \/>\nfor the feed as &#8220;invisible&#8221;); (2) deleting the feed data and all of the<br \/>\nposts that were syndicated from the feed; or (3) deleting the feed data<br \/>\nand <em>keeping<\/em> the posts that were syndicated from the feed<br \/>\nsetting the Link to &#8220;Invisible&#8221; (meaning that it will not be displayed<br \/>\nin lists of the site links on the front page, and it won&#8217;t be checked<br \/>\nfor updates; (2) deleting the Link and all of the posts that were<br \/>\nsyndicated from its feed; or (3) deleting the feed data but keeping the<br \/>\nposts that were syndicated (which will henceforward be treated as if<br \/>\nthey were local rather than syndicated posts). (Note that (1) is usually<br \/>\nthe best option for aggregator sites, unless you want to clean up the<br \/>\nresults of an error or a test.)<\/p>\n<\/li>\n<li>\n<p>FEATURE \/ BUG FIX: If you have been receiving mysterious &#8220;I don&#8217;t<br \/>\nsyndicate&#8230;&#8221;, or &#8220;(local) HTTP status code was not 200&#8221;, or &#8220;(local)<br \/>\ntransport error &#8211; could not open socket&#8221;, or &#8220;parse error &#8211; not well<br \/>\nformed&#8221; errors, then this update may solve your problems, and if it does<br \/>\n<em>not<\/em> solve them, it will at least make the reasons for the problems<br \/>\neasier to understand. That&#8217;s because I&#8217;ve overhauled the way that<br \/>\nFeedWordPress goes about updating feeds.<\/p>\n<p>If you use the command-line PHP scripting method to run scheduled<br \/>\nupdates, then not much should change for you, except for fewer<br \/>\nmysterious errors. If you have done updates by sending periodic HTTP<br \/>\nrequests to <a href=\"http:\/\/your-blog.com\/path\/wp-content\/update-feeds.php\" rel=\"nofollow ugc\">http:\/\/your-blog.com\/path\/wp-content\/update-feeds.php<\/a>,<br \/>\nthen the details have changed somewhat; mostly in such a way as to make<br \/>\nthings easier on you. See the README file or online documentation on<br \/>\nStaying Current for the details.<\/p>\n<\/li>\n<li>\n<p>FEATURE: FeedWordPress now features a more sophisticated system for<br \/>\ntimed updates. Instead of polling <em>every<\/em> subscribed feed for updates<br \/>\n<em>each<\/em> time <code>update-feeds.php<\/code> is run, FeedWordPress now keeps track of<br \/>\nthe last time it polled each feed, and only polls them again after a<br \/>\ncertain period of time has passed. The amount of time is normally set<br \/>\nrandomly for each feed, in a period between 30 minutes and 2 hours (so<br \/>\nas to stagger updates over time rather than polling all of the feeds at once. However, the length of time between updates can also be set<br \/>\ndirectly by the feed, which brings us to &#8230;<\/p>\n<\/li>\n<li>\n<p>FEATURE: FeedWordPress now respects the settings in the <code>ttl<\/code> and<br \/>\nSyndication Module RSS elements. Feeds with these elements set will not<br \/>\nbe polled any more frequently than they indicate with these feeds unless<br \/>\nthe user manually forces FeedWordPress to poll the feed (see Links &#8211;&gt;<br \/>\nSyndicated &#8211;&gt; Edit settings).<\/p>\n<\/li>\n<\/ul>\n<h4>0.96<\/h4>\n<ul>\n<li>\n<p>FEATURE: support has been added for enclosures in RSS 2.0 and Atom<br \/>\n0.6+ newsfeeds. WordPress already supports adding enclosures to an<br \/>\nitem; FeedWordPress merely gets the information on the enclosure<br \/>\nfrom the feed it is syndicating and plugs that information directly<br \/>\ninto the WordPress database so that (among other things) that post<br \/>\nwill have its enclosure listed in your blog&#8217;s RSS 2 newsfeed.<\/p>\n<p>Note that enclosure support requires using the optional MagpieRSS<br \/>\nupgrade (i.e., replacing your <code>wp-includes\/rss-functions.php<\/code> with<br \/>\n    OPTIONAL\/wp-includes\/rss-functions.php from the FWP archive)<\/p>\n<\/li>\n<li>\n<p>FEATURE: for completeness&#8217;s sake, there is now a feed setting,<br \/>\n    hardcode url, that allows you to set the URI for the front page<br \/>\nof a contributor&#8217;s website manually (that is, prevent it from being<br \/>\nautomatically updated from the feed channel link on each update). To<br \/>\nset the URI manually, put a line like this in the Link Notes section<br \/>\nof a feed:<\/p>\n<pre><code>hardcode url: yes\n<\/code><\/pre>\n<p>You can also instruct FeedWordPress to use hardcoded URIs by default<br \/>\non all feeds using Options &#8211;&gt; Syndication<\/p>\n<\/li>\n<li>\n<p>FEATURE: by default, when FeedWordPress finds new syndicated posts,<br \/>\nit (1) publishes them immediately, (2) turns comments off, and (3)<br \/>\nturns trackback \/ pingback pings off. You can now alter all three<br \/>\ndefault behaviors (e.g., to allow pings on syndicated posts, or to<br \/>\nsend newly-syndicated posts to the draft pile for moderation) using<br \/>\nOptions &#8211;&gt; Syndication<\/p>\n<\/li>\n<\/ul>\n<h4>From 0.91 to 0.95<\/h4>\n<ul>\n<li>\n<p>BUG FIX: Fixed an obscure bug in the handling of categories: categories with trailing whitespace could cause categories with duplicate names to be created. This no longer happens. While I was at it I tightened up the operation of FeedWordPress::lookup_categories() a bit in general.<\/p>\n<\/li>\n<li>\n<p>FEATURE DEPRECATED: the feed setting <code>hardcode categories<\/code> is now deprecated in favor of <code>unknown categories<\/code> (see below), which allows you to strip off any syndication categories not already in your database using <code>unknown categories: default<\/code> or <code>unknown categories: filter<\/code>. If you have <code>hardcode categories: yes<\/code> set on a feed, this will be treated as <code>unknown categories: default<\/code> (i.e., no new categories will be added, but if a post doesn&#8217;t match any of the categories it will be added in the default category&#8211;usually &#8220;Uncategorized&#8221; or &#8220;General&#8221;).<\/p>\n<\/li>\n<li>\n<p>FEATURE: You can now set global defaults as to whether or not FeedWordPress will update the Link Name and Link Description settings for feeds automatically from the feed title and feed tagline. (By default, it does, as it has in past versions.) Whether this behavior is turned on or off, you can still override the default behavior using feed settings of <code>hardcode name: yes<\/code>, <code>hardcode name: no<\/code>, <code>hardcode description: yes<\/code>, or <code>hardcode description: no<\/code>.<\/p>\n<\/li>\n<li>\n<p>FEATURE: Users can now provide one or several &#8220;aliases&#8221; for an author, just as they can for a category. For example, to make FeedWordPress treat posts by &#8220;Joseph Cardinal Ratzinger&#8221; and &#8220;Pope Benedict XVI&#8221; as by the same author, edit the user profile for Pope Benedict XVI and add a line like this to the &#8220;User profile&#8221; field:<\/p>\n<pre><code>a.k.a.: Joseph Cardinal Ratzinger\n<\/code><\/pre>\n<p>You can add several aliases, each on a line by itself. You can also add any other text you like to the Profile without interfering with the aliases.<\/p>\n<\/li>\n<li>\n<p>FEATURE: Users can now choose how to handle syndicated posts that are in unfamiliar categories or by unfamiliar authors (i.e., categories or authors whose names are not yet in the WordPress database). By default, FeedWordPress will (as before) create a new category (or new author) and use it for the current post and any future posts. This behavior can be changed, either for all feeds or for one or another particular feed.<\/p>\n<p>There are now three different options for an unfamiliar author: (1) FeedWordPress can create a new author account and attribute the syndicated post to the new account; (2) FeedWordPress can attribute the post to an author if the author&#8217;s name is familiar, and to a    default author (currently, this means the Site Administrator account) if it is not; (3) FeedWordPress can drop posts by unfamiliar authors and syndicate only posts by authors who are already in the database.<\/p>\n<p>There are, similarly, two different options for an unfamiliar category: (1) FeedWordPress can create new categories and place the syndicated post in them; (2) FeedWordPress can drop the unfamiliar categories and place syndicated posts only in categories that it is already familiar with. In addition, FeedWordPress 0.95 lets you choose whether posts that are in <em>no<\/em> familiar categories should be syndicated (and placed in the default category for the blog) or simply dropped.<\/p>\n<p>You can set the default behavior for both authors and categories using the settings in Options &#8211;&gt; Syndication. You can also set different behavior for specific feeds by adding the <code>unfamiliar author<\/code> and \/ or <code>unfamiliar categories<\/code> settings to the Link Notes section of a feed:<\/p>\n<pre><code>unfamiliar author: (create|default|filter)\nunfamiliar categories: (create|default|filter)\n<\/code><\/pre>\n<p>A setting of <code>unfamiliar author: create<\/code> will make FeedWordPress create new authors to match unfamiliar author names <em>for this feed alone<\/em>. A setting of <code>unfamiliar author: default<\/code> will make it assign posts from unfamiliar authors to the default user account. A setting of <code>unfamiliar author: filter<\/code> will cause all posts (from this feed alone) to be dropped unless they are by an author already listed in the database. Similiarly, <code>unfamiliar categories: create<\/code> will make FeedWordPress create new categories to match unfamiliar category names <em>for this feed alone<\/em>; <code>unfamiliar categories:    default<\/code> will cause it to drop any unfamiliar category names; and <code>unfamiliar categories: filter<\/code> will cause it to <em>both<\/em> drop any unfamiliar category names <em>and<\/em> to only syndicate posts that are placed in one or more familiar categories.<\/p>\n<p>These two new features allow users to do some coarse-grained filtering without having to write a PHP filter. Specifically, they offer an easy way for you to filter feeds by category or by author. Suppose, for example, that you only wanted to syndicate posts that your contributors place in the &#8220;Llamas&#8221; category. You could do so by setting up your installation of WordPress so that the only category in the database is &#8220;Llamas,&#8221; and then use Options &#8211;&gt; Syndication to set &#8220;Unfamiliar categories&#8221; to &#8220;don&#8217;t create new categories and don&#8217;t syndicate posts unless they match at least one familiar category&#8221;. Now, when you update, only posts in the &#8220;Llamas&#8221; category will be syndicated by FeedWordPress.<\/p>\n<p>Similarly, if you wanted to filter one particular feed so that only posts by (for example) the author &#8220;Earl J. Llama&#8221; were syndicated to your site, you could do so by creating a user account for Earl J. Llama, then adding the following line to the settings for the feed in Link Notes:<\/p>\n<pre><code>unfamiliar author: filter\n<\/code><\/pre>\n<p>This will cause any posts from this feed that are not authored by Earl J. Llama to be discarded, and only the posts by Earl J. Llama will be syndicated. (If the setting is used on one specific feed, it will not affect how posts from other feeds are syndicated.)<\/p>\n<\/li>\n<\/ul>\n","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">A Powerful Workhorse<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/cogdog\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/876d6751f72fd4787ae953bb097af902?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/876d6751f72fd4787ae953bb097af902?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/cogdog\/\" class=\"reviewer-name\">cogdog<\/a> on <span class=\"review-date\">December 12, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This is way overdue, but since 2011 I have used FeedWordPress on numerous education sites where students participate in their own blog space and the course site aggregates collectively their works, tags and categories provide powerful means to organize. One of the longest running ones has aggregated over 90,000 posts.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">A ton of flexible features and the developer has always been (and still does) respond quickly to issues. I've not done much lately, but looking at it in 2023 for a project. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">RSS is the secret sauce of the web.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Excellent and dependable.<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/hearvox\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/a99bea0b2a100fb81dcd89fdd4ae1311?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/a99bea0b2a100fb81dcd89fdd4ae1311?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/hearvox\/\" class=\"reviewer-name\">Barrett Golding <small>(hearvox)<\/small><\/a> on <span class=\"review-date\">February 20, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Have used FeedWP for multiple projects over the decades, for monitoring news on specific topics. Works flawlessly, and offers many valuable options. A well-designed workhorse.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">be aware<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"1 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"1\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/allfabeta\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/c77aa775051e02b1ac272578569c5754?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/c77aa775051e02b1ac272578569c5754?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/allfabeta\/\" class=\"reviewer-name\">Allfabeta<\/a> on <span class=\"review-date\">July 15, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">1. when you would add any site to subscribe for posts, this stupid plug-in would create new Categories against posts'tags from the feed site.(according to its default settings)\n\n2. Posts in your feed would be shown without photos - just a plain text... in 21th century.You should ask yourself before plug-in activation - do you really need a text without photos?\n\n3. Plug-in would copy text by text articles\/posts without bringing canonical urls, so it would hurt SEO for both sites. Do you really need that?\n\n4. After you would disable subscription for donor's site with removing all posts and data from your local site - new added categories would remain on your local site and you would need delete them manually. Do you really need that mess? \n<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Simple Install and Works Great<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/geniodiabolico\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/db742bfbbb2a40519c0bc35ad4c685c9?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/db742bfbbb2a40519c0bc35ad4c685c9?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/geniodiabolico\/\" class=\"reviewer-name\">GenioDiabolico<\/a> on <span class=\"review-date\">July 8, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I struggled with multiple RSS aggregation plugins, all of which were paid subscription plugins. I had already paid for one and after hours, I could not make it import enclosures to PowerPress. FeedWordpress took about 5 minutes to set up and worked perfectly. It also had the feature to all for reimportation of items which the paid plugin lacked. This free plugin is in every way better than the commercial alternatives.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Better than the big one<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/oligneisti\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/aa9d52d7d4effcb1e6185882d34ab388?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/aa9d52d7d4effcb1e6185882d34ab388?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/oligneisti\/\" class=\"reviewer-name\">oligneisti<\/a> on <span class=\"review-date\">April 22, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I had been using the more popular plugin for a while and never really liked it. Then I found this one and it is so much more better for my needs. Thanks!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Awesome plug-in<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pentontech\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7f5bcbae03fcb063e689a8e51f11774c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7f5bcbae03fcb063e689a8e51f11774c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pentontech\/\" class=\"reviewer-name\">pentontech<\/a> on <span class=\"review-date\">February 8, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This plug-in is the best, highly recommended. Just one thing, pictures from RSS feeds are not showing up in blog, any ideas, or updates? <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Fantastic and pluggable<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/gringom\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/479b2f53cd27b12e6c6cddd03acde237?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/479b2f53cd27b12e6c6cddd03acde237?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/gringom\/\" class=\"reviewer-name\">gringom<\/a> on <span class=\"review-date\">January 4, 2019<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">The dev has done a fantastic job.\nWorks great, very customizable (so the access isn't blocked by hosts). Runs like a charm.\nI have even developed a way to allow to get historical feed content, using it. Only works with WordPress and Blogger feeds though. But was all I needed.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Excellent! Be careful on shared hosting, though..<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/q292u\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/cf8ad5480680a01c53beb16f4619c270?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/cf8ad5480680a01c53beb16f4619c270?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/q292u\/\" class=\"reviewer-name\">q292u<\/a> on <span class=\"review-date\">February 9, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I've been using FWP for years. I used to have several sites that relied on it for aggregating ebay stuff. However, on shared hosting, and with MANY syndicated sources, my sites often got banned for hogging the server.\nThe \"problem\" is that FWP is so excellent at what it does, I got carried away with the number of sources. \nI've been using a different aggregator for a while, but it doesn't have the flexibility of FWP: setting Category, Tags and custom fields per feed is awesome.  \nHence, I've come back to using FWP, but not using the scheduling features, and taking it easy on the number of sources.  \nIf you are NOT on a shared server, just ignore my comments and \"fill yer boots\". <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Can&#039;t install plugin with wpackagist...<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/powrslave\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d1f42ca88417d532a1b8563fbed61885?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d1f42ca88417d532a1b8563fbed61885?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/powrslave\/\" class=\"reviewer-name\">PowrSlave<\/a> on <span class=\"review-date\">December 22, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">When I try to install via composer from the wpackagist repository, it seems that it can't find any version. I've tried specifying the latest version, 2016\/1213, as well as not specifying any version at all. I've also tried installing via the ~ version option. \n\nError output is as follows: \n\n<pre><code>Problem 1\n    - The requested package wpackagist-plugin\/feedwordpress ~2016.1213 exists as wpackagist-plugin\/feedwordpress[2016.1213, 2016.1211, 2016.0420, 2015.0514, 2015.0426, 2014.0805, 2013.0504, 2013.0503, 2012.1218, 2012.1212, 2011.1019, 2011.1018, 2011.0721, 2011.0706, 2011.0602, 2011.0531, 2011.0512, 2011.0211.2, 2011.0211, 2010.0905, 2010.0903, 2010.0623, 2010.0602, 2010.0531, 2010.0528, 2010.0127, 2009.1112, 2009.1111, 2009.0707, 2009.0618, 2009.0613, 2009.0612, 2008.1214, 2008.1105, 2008.1101, 2008.1030, 0.993, 0.992, 0.991, 0.981, 0.99, 0.98, 0.97, 0.96, 0.95, 0.91, 0.9, 0.8, dev-trunk] but these are rejected by your constraint.<\/code><\/pre>\n\n\nWhen I run: \n\n<code>composer require &quot;wpackagist-plugin\/feedwordpress&quot;: &quot;2016.0420&quot;<\/code>\n\nI receive this: \n\n` [InvalidArgumentException]\n  Could not find package 2016.0420 at any version for your minimum-stability (stable). Check the\n   package spelling or your minimum-stability'\n\nAny ideas? I haven't had this happen with any other packages.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Made my work easy<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/langhof\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/1bb887b1cae5bc100460e7c535e45e83?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/1bb887b1cae5bc100460e7c535e45e83?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/langhof\/\" class=\"reviewer-name\">langhof<\/a> on <span class=\"review-date\">December 12, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">cause it do my work automatically ;-)<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0222.zip","screenshots":[],"tags":{"aggregation":"aggregation","atom":"Atom","feed":"feed","rss":"rss","syndication":"syndication"},"versions":{"0.8":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.8.zip","0.9":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.9.zip","0.91":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.91.zip","0.95":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.95.zip","0.96":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.96.zip","0.97":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.97.zip","0.98":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.98.zip","0.981":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.981.zip","0.99":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.99.zip","0.991":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.991.zip","0.992":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.992.zip","0.993":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.0.993.zip","2008.1030":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2008.1030.zip","2008.1101":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2008.1101.zip","2008.1105":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2008.1105.zip","2008.1214":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2008.1214.zip","2009.0612":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.0612.zip","2009.0613":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.0613.zip","2009.0618":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.0618.zip","2009.0707":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.0707.zip","2009.1111":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.1111.zip","2009.1112":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2009.1112.zip","2010.0127":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0127.zip","2010.0528":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0528.zip","2010.0531":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0531.zip","2010.0602":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0602.zip","2010.0623":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0623.zip","2010.0903":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0903.zip","2010.0905":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2010.0905.zip","2011.0211":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0211.zip","2011.0211.2":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0211.2.zip","2011.0512":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0512.zip","2011.0531":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0531.zip","2011.0602":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0602.zip","2011.0706":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0706.zip","2011.0721":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.0721.zip","2011.1018":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.1018.zip","2011.1019":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2011.1019.zip","2012.1212":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2012.1212.zip","2012.1218":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2012.1218.zip","2013.0503":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2013.0503.zip","2013.0504":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2013.0504.zip","2014.0805":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2014.0805.zip","2015.0426":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2015.0426.zip","2015.0514":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2015.0514.zip","2016.0420":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2016.0420.zip","2016.1211":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2016.1211.zip","2016.1213":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2016.1213.zip","2017.0913":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2017.0913.zip","2017.1004":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2017.1004.zip","2017.1020":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2017.1020.zip","2020.0118":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2020.0118.zip","2020.0818":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2020.0818.zip","2021.0713":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2021.0713.zip","2022.0123":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0123.zip","2022.0203":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0203.zip","2022.0204":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0204.zip","2022.0208":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0208.zip","2022.0222":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.2022.0222.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/feedwordpress.zip"},"donate_link":"http:\/\/feedwordpress.radgeek.com\/donate\/","banners":{"low":"https:\/\/ps.w.org\/feedwordpress\/assets\/banner-772x250.jpg?rev=1413333","high":false}}