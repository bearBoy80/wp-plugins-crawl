{"name":"WP-DB-Table-Editor","slug":"wp-db-table-editor","version":"1.8.4","author":"<a href=\"http:\/\/www.acceleration.net\">Russ Tyndall @ Acceleration.net<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/bobbysmith007\/","contributors":{"bobbysmith007":{"profile":"https:\/\/profiles.wordpress.org\/bobbysmith007\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/07cd356ef777ddda174435ca031b7971?s=96&d=monsterid&r=g","display_name":"bobbysmith007"}},"requires":"3.0.0","tested":"5.3.16","requires_php":false,"requires_plugins":[],"rating":86,"ratings":{"5":15,"4":0,"3":0,"2":0,"1":3},"num_ratings":18,"support_threads":1,"support_threads_resolved":1,"active_installs":1000,"last_updated":"2020-03-11 9:24pm GMT","added":"2014-03-26","homepage":"http:\/\/github.com\/AcceleratioNet\/wp-db-table-editor","sections":{"description":"<p>This is a WordPress plugin that allows direct excel-like editing of<br \/>\ntables in your WordPress database.  It&#8217;s goals are to provide useful,<br \/>\nsimple, flexible database table admin screens.<\/p>\n<p>It supports:<\/p>\n<ul>\n<li>one table per admin screen, as many admin screens as desired\n<ul>\n<li>These are organized under a new &#8220;DB Table Editor&#8221; menu item<\/li>\n<\/ul>\n<\/li>\n<li>excel spreadsheet like interface using SlickGrid<\/li>\n<li>Filter and Sort results<\/li>\n<li>Add, Edit &amp; Delete records<\/li>\n<li>Custom buttons extensibility<\/li>\n<li>Custom permissions per interface for viewing and editing<br \/>\n(defaults to: edit_others_posts)<\/p>\n<ul>\n<li>editing defaults to the same permission as viewing if not specified<\/li>\n<\/ul>\n<\/li>\n<li>CSV exports of filtered grid<\/li>\n<li>Custom primary key names (but must be a single value \/ column)<\/li>\n<\/ul>\n<h3>Adding an Interface on the fly<\/h3>\n<p>If we go to look up a database table editor and we dont find it, but<br \/>\nthere is a function named dbte_create_$tbl that matches, we will call<br \/>\nthat function expecting it to return a dbte instance. This is useful<br \/>\nin situations where we may not have the data for a table editor in all<br \/>\ncircumstances (EG: not every page has a member id, so only do it on<br \/>\nthat particular page).<\/p>\n<h3>Adding an Interface from a plugin<\/h3>\n<p>If you need to add an interface from a plugin, you should use the<br \/>\n    admin_menu action with a lower than default priority.<\/p>\n<p>eg: <code>add_action( 'admin_menu', 'my_load_tables', -10 );<\/code><\/p>\n<p>Inside of the <code>my_load_tables<\/code> function you would include all the<br \/>\ncalls to add_db_table_editor<\/p>\n<h3>Custom Buttons<\/h3>\n<p>Buttons can be created by pushing functions into<br \/>\n    DBTableEditor.extraButtons.  Each of these is a slick grid<br \/>\nrowButtonFormatter and should return a string of html.<\/p>\n<p>eg:<br \/>\n   out += fn(row, cell, value, columnDef, dataContext);<\/p>\n<p>The button column width can be set by setting:<br \/>\nDBTableEditor.buttonColumnWidth before the ready function is called<\/p>\n<h4>Hooks \/ Actions<\/h4>\n<ul>\n<li>\n<p><code>db-table-editor_enqueue_scripts<\/code> is an action that will be called<br \/>\nafter enqueueing all plugin scripts and before enqueueing <code>jsFile<\/code><br \/>\n(if it exists)<\/p>\n<p><code>function dbTableEditorScripts(){<br \/>\nwp_register_script('employee-table-extensions-js',<br \/>\nget_stylesheet_directory_uri().'\/employee-table.js',<br \/>\narray('db-table-editor-js'));<br \/>\n}<br \/>\nadd_action('db-table-editor_enqueue_scripts', 'dbTableEditorScripts');<\/code><\/p>\n<\/li>\n<\/ul>\n<h3>dbte_row_deleted, dbte_row_updated, dbte_row_inserted<\/h3>\n<p>Called after a row is deleted, updated, or inserted passes<\/p>\n<pre><code>`\n<\/code><\/pre>\n<p>add_action(&#8216;dbte_row_deleted&#8217;, &#8216;my_dbte_row_deleted&#8217;, 10, 2);<\/p>\n<p>function my_dbte_row_deleted($currentTable, $idRemoved){<br \/>\n  \/\/ do things<br \/>\n}<\/p>\n<p>add_action(&#8216;dbte_row_updated&#8217;, &#8216;my_dbte_row_upserted&#8217;, 10, 4);<br \/>\nadd_action(&#8216;dbte_row_inserted&#8217;, &#8216;my_dbte_row_upserted&#8217;, 10, 4);<\/p>\n<p>function my_dbte_row_upserted($currentTable, $values, $columns, $indexedModified){<br \/>\n  \/\/ do things<br \/>\n}<\/p>\n<pre><code>`\n<\/code><\/pre>\n<h4>Shortcodes<\/h4>\n<p>You can use a shortcode to include a dbte interface on a wordpress<br \/>\npage.  Please use with care.<\/p>\n<p>[dbte id=table-editor-id] &#8211; (id defaults to table)<\/p>\n<h3>Caveats<\/h3>\n<ul>\n<li>Dont put an editable table editor on your public facing screens using the shortcode!<\/li>\n<\/ul>\n<h3>Troubleshooting<\/h3>\n<p>Feel free to ask support questions \/ open trouble tickets<\/p>\n<ul>\n<li>https:\/\/wordpress.org\/support\/plugin\/wp-db-table-editor<\/li>\n<li>https:\/\/github.com\/AccelerationNet\/wp-db-table-editor\/issues<\/li>\n<\/ul>\n<h3>Advanced Examples<\/h3>\n<h3>Custom Javascript and Buttons on the table editor<\/h3>\n<p>See: examples\/custom-buttons-and-js.php<br \/>\n     examples\/custom-buttons.js<\/p>\n<p>Shows how to add custom javascript to a report page and adds a custom<br \/>\nload button on the grid<\/p>\n<h3>CF7 DB Submit Plugin integration<\/h3>\n<p>See: examples\/cf7dbsubmit_integration.php<\/p>\n<p>This is not a fully runnable example, but should give good examples of<\/p>\n<ul>\n<li>working cf7dbsubmit plugin<\/li>\n<li>Custom save delete hooks<\/li>\n<li>custom complex sql building with this plugin<\/li>\n<li>sending notifications on edit of specific fields<\/li>\n<\/ul>\n<p>cf7dbsubmit stores its data in a &#8220;hashtable&#8221; format of:<\/p>\n<p>form, submit_time, field_name, field_value<\/p>\n<p>but we want to present this in a more excel fasion of each field being<br \/>\na column of our spreadsheet and each row being a different submission<\/p>\n<h3>Contributers and Thanks<\/h3>\n<ul>\n<li>bobbysmith007 \/ Acceleration.net &#8211; Primary developer of plugin<\/li>\n<li>nikomuse &#8211; i18n support<\/li>\n<\/ul>\n","installation":"<p>This is installed the same way all wordpress plugins:<\/p>\n<ul>\n<li>\n<p>Drop the unzipped plugin directory into your wordpress install at<br \/>\n   wp-content\/plugins\/wp-db-table-editor<\/p>\n<\/li>\n<li>\n<p>Activate the plugin via the WordPress Admin &gt; &#8220;Plugins&#8221; menu<\/p>\n<\/li>\n<\/ul>\n<h4>Adding an interface<\/h4>\n<p>DB-Table Editor Interfaces are added by calling the<br \/>\nadd_db_table_editor function in your theme&#8217;s <code>functions.php<\/code> file.<br \/>\nThis supports <code>wp_parse_args<\/code> style arguments.<\/p>\n<ul>\n<li><code>title<\/code>: what shows up in the H1 on the screen and in menues\n<ul>\n<li>ex: <code>title=&gt;\"My Product Reports Page\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>table<\/code>: the table we wish to display \/ edit\n<ul>\n<li>ex: <code>table=&gt;\"wp_my_custom_table\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>id<\/code>: the admin interface id (defaults to table)\n<ul>\n<li>ex: <code>id=&gt;\"custom_table_interface_1\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>id_column<\/code>: the column in each row that names the id for the row\n<ul>\n<li>ex: <code>id_column=&gt;\"id\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>dataFn<\/code>: a function that returns the data to be displayed \/<br \/>\nedited, defaults to <code>select * from {table}<\/code>. This should return ARRAY_N<br \/>\nthrough wpdb-&gt;get_results. Alternatively it may return a DBTE_DataTable.<br \/>\n   dataFn is called with the arguemnts array to add_db_table_editor;<\/p>\n<ul>\n<li>ex: <code>dataFn=&gt;\"myCustomInterfaceFunction\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>jsFile<\/code>: the name of a registered script that will be enqueued for<br \/>\nthis interface<\/p>\n<ul>\n<li>ex: <code>jsFile=&gt;\"my-custom-interface-js\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>cap<\/code>: the capability a user needs to view\/edit this interface,<br \/>\ndefaults to edit_others_posts<\/p>\n<ul>\n<li>ex: <code>cap=&gt;\"edit_others_posts\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>editcap<\/code>: the capability required to edit the grid, if not set<br \/>\nall viewers are assumed to be editors<\/p>\n<ul>\n<li>ex: <code>editcap=&gt;\"edit_others_posts\"<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>noedit<\/code>: turns off the editing abilities (same as editcap=nosuchcapability)\n<ul>\n<li>ex: <code>noedit=&gt;true<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>columnFilters<\/code>: Default column filters, this is an array of column-&gt;val<br \/>\nto be applied as default column fitlers when the page is loaded<\/p>\n<ul>\n<li>ex: <code>columnFilters=&gt;Array(\"Year\"=&gt;\"2017\")<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>columnNameMap<\/code>: A map of actual column names to displayed label\n<ul>\n<li>Ex: <code>columnNameMap=&gt;Array('column_name'=&gt;'Column Alias')<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>noedit_columns<\/code>, <code>hide_columns<\/code>: You may wish to hide some columns<br \/>\nor prevent edit.  You may do so by setting these fields to the name<br \/>\nof columns you wish hidden or uneditable (eg: the id)<\/p>\n<ul>\n<li>Ex:<code>noedit_columns=&gt;\"data,id\"<\/code> or <code>noedit_columns=&gt;Array('data', 'id')<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>save_cb<\/code>, <code>delete_cb<\/code>: function names to be called with an array of data:<br \/>\nthe dbte, update array, column array and modified indexes array<br \/>\n   call_user_func($cur-&gt;save_cb,Array(&#8216;table&#8217;=&gt;$cur, &#8216;update&#8217;=&gt;$up,<br \/>\n                     &#8216;columns&#8217;=&gt;$cols, &#8216;indexes&#8217;=&gt;$idxs, &#8216;id&#8217;=&gt;$id));<br \/>\n   call_user_func($cur-&gt;delete_cb,$cur,$id);<br \/>\nIf your call back inserts data it should fill in $data[&#8216;id&#8217;] and accept data<br \/>\nby reference<\/li>\n<li><code>auto_date<\/code>: should columns that appear to be datetimes, be treated as such<br \/>\nThis is based on the columns data type<\/p>\n<ul>\n<li>Sort of buggy but allows some different date formats than iso8601<\/li>\n<li>Ex:<code>auto_date=&gt;true<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>autoHeight<\/code>: passes the autoHeight option to slickgrid (makes<br \/>\nthere not be a vertical scrollbar on the grid and instead in the<br \/>\nwindow)<\/p>\n<ul>\n<li>Ex:<code>auto_height=&gt;true<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>async_data<\/code>: request data asyncronously instead of inlining<br \/>\nit. Makes slow queries &#8220;seem&#8221; faster.<\/p>\n<ul>\n<li>Ex:<code>async_data=&gt;true<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>default_values<\/code>: an a_array of default values that new rows should have\n<ul>\n<li>Ex:<code>default_values=&gt;Array(\"name\"=&gt;\"First M Last\")<\/code><\/li>\n<\/ul>\n<\/li>\n<li><code>export_id_field<\/code>: the field to use when limiting the export results\n<ul>\n<li>some sql needs a specific field &#8211; defaults to <code>table<\/code>.<code>id_col<\/code><\/li>\n<li>Ex:<code>\"export_id_field\"=&gt;\"mytbl.fooid\"<\/code><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>Example:<\/p>\n<pre><code>`\n<\/code><\/pre>\n<p>if(function_exists(&#8216;add_db_table_editor&#8217;)){<br \/>\n  add_db_table_editor(&#8216;title=Employees&amp;table=employees&#8217;);<\/p>\n<p>add_db_table_editor(array(<br \/>\n    &#8216;title&#8217;=&gt;&#8217;Event Registrations&#8217;,<br \/>\n    &#8216;table&#8217;=&gt;&#8217;event_registrations&#8217;,<br \/>\n    &#8216;sql&#8217;=&gt;&#8217;SELECT * FROM event_registrations ORDER BY date_entered DESC&#8217;<br \/>\n  ));<\/p>\n<p>}<br \/>\n    `<\/p>\n<h4>Reasons and Expectations<\/h4>\n<p>Previously my company had been using DB-toolkit to provide minimal<br \/>\ndatabase interfaces for custom tables through the WordPress admin.<br \/>\nWhile the configuration was cumbersome for what we were doing, it did<br \/>\nwork and was easier than writing anything.  However, when DB-Toolkit<br \/>\nstopped being maintained and I couldn&#8217;t find a simple, but suitable<br \/>\nreplacement, I decided to tackle my goals more head on<\/p>\n<p>Use of this plugin requires a basic knowledge of PHP, and SQL.  It was<br \/>\nwritten by a programmer to help accomplish his work and does not<br \/>\ncurrently provide admin configuration screens (instead simple function<br \/>\ncalls in your theme&#8217;s functions file are used to configure the<br \/>\nscreens).  This was preferable to me, because my configuration is<br \/>\nsafely in source control (a problem I had when DB-toolkit would<br \/>\nupgrade and lose all configuration).<\/p>\n","faq":"<ul>\n<li>I dont see any interface \/ nothing changed?\n<ul>\n<li>Did you complete the installation process, including appropriate<br \/>\nadd_db_table_editor calls?<\/li>\n<li>My delete button is missing \/ I Can&#8217;t Edit<\/li>\n<li>You either dont have <code>editcap<\/code> or <code>id_column<\/code> is misconfigured<\/li>\n<li>https:\/\/github.com\/AccelerationNet\/wp-db-table-editor\/issues\/5<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n","changelog":"<p>For detailed information, please view:<\/p>\n<p>https:\/\/github.com\/AccelerationNet\/wp-db-table-editor\/commits<\/p>\n<p>Version: 1.6.0 &#8211; 2017-02-23<br \/>\n    * New (customized) version of SlickGrid (branched from 6pac@github)<br \/>\n      * allow access to the default filter and the filtered items<br \/>\n    * Handle exports by sending a list of ids to export rather than<br \/>\n      trying to recreate the full filter set serverside. Allows rather<br \/>\n      arbitrary JS filtering functions without having to get nitty gritty<br \/>\n      on the server<\/p>\n<p>Version: 1.5.6 &#8211; 2017-02-22<br \/>\n    * allow easy button column width configuration<\/p>\n<p>Version: 1.5.5 &#8211; 2016-12-16<br \/>\n    * fix deprecated constructor<\/p>\n<p>Version: 1.5.4 &#8211; 2016-12-06<br \/>\n    * trim noedit_columns!<\/p>\n<p>Version: 1.5.3 &#8211; 2016-03-14<br \/>\n    * Better numeric sorting<\/p>\n<p>Version: 1.5.2 &#8211; 2015-11-28<br \/>\n    * fixed confused ajax-vs-async nomenclature<\/p>\n<p>Version: 1.5.1 &#8211; 2015-09-21<br \/>\n    * Fixed bug with new rows without default values<\/p>\n<p>Version: 1.5 &#8211; 2015-09-15<br \/>\n    * replace update &amp; insert call backs and actions with dbte_save<br \/>\n      that passes an argument array instead of list of arguments.<br \/>\n      should hopefully make upgrading easier (updated example).<br \/>\n      This also allows the callback to set the &#8220;id&#8221; of the argument<br \/>\n      array (should be passed by ref) in case of insert.<br \/>\n    * async_data: option makes the grid pull data using ajax instead of<br \/>\n      inlining it.  This might make the page appear more responsive if<br \/>\n      the query takes forever. You are probably better off improving<br \/>\n      your query.<br \/>\n    * when calling save ajax, pass all query arguments for the current<br \/>\n      page.  Also set default values along the way<\/p>\n<p>Version: 1.4.2 &#8211; 2015-08-17<br \/>\n    * bug fixes: new rows were not updating their id<br \/>\n    * saving now submits the currently active cell if there is one<\/p>\n<p>Version: 1.4.1 &#8211; 2015-06-19<br \/>\n    * added some missing files for translation<\/p>\n<p>Version: 1.4 &#8211; 2015-06-18<br \/>\n    * nikomuse provided i18n support<\/p>\n<p>Version: 1.3.2 &#8211; 2015-03-30<br \/>\n    * introduce action <code>db_table_editor_init<\/code>, for other plugins<br \/>\n      to use<\/p>\n<p>Version: 1.3.1 &#8211; 2015-03-30<br \/>\n    * Introduce PhpSqlParser and use it instead of my<br \/>\n      half-implemented index scanning, for inserting the where clause<\/p>\n<p>Version: 1.3 &#8211; 2015-02-18 10:30<br \/>\n    * !! API CHANGE <code>update_cb<\/code>, <code>delete_cb<\/code>, and <code>dbte_row_updated<\/code><br \/>\n      all accept ID arguments &#8212; TODO: perhaps these should accept<br \/>\n      keyword arg arrays, to make it handle upgrades more gracefully?<\/p>\n<p>Version: 1.2.8 &#8211; 2015-02-04 10:30<br \/>\n    * better docs<br \/>\n    * better examples<br \/>\n    * dbte_row_inserted, dbte_row_updated, dbte_row_deleted actions<\/p>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/wp-db-table-editor\/trunk\/screenshot-1.png?rev=2259397\"><img src=\"https:\/\/ps.w.org\/wp-db-table-editor\/trunk\/screenshot-1.png?rev=2259397\" alt=\"Here&#039;s a screenshot of it in action\"><\/a><p>Here's a screenshot of it in action<\/p><\/li><\/ol>","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Good plug-in, poor Documentation; Joins and grouped EAV-Tables not editable?<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/philippezumofen\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/37823fa48642c7a6abe028326e1f6ece?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/37823fa48642c7a6abe028326e1f6ece?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/philippezumofen\/\" class=\"reviewer-name\">phil <small>(philippezumofen)<\/small><\/a> on <span class=\"review-date\">April 19, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Plug in is pretty good, but Documentation is poor. But once I gathered all the necessary informations from the ratings and Support Topics to get this plugin to work and understand the limitations of it, it works fine.\n\nOne thing i'm still not sure about: Is it somehow possible to edit EAV based tables that have been grouped by a value? If yes, how? Or is another approach necessary or is it impossible?\n\nAnd if using joins it seems only possible to edit the 'basic table', or am I missing something? Would be nice if joined views would be fully editable, but of course I don't understand the compelexity of the implementation of these functionalities.\n\nClear statements about these things in the documentation would be helpful, also the example given could use more parameters, so every functionality (edit values, export, etc.) is possible.\n\nI just insert a working example here, maybe it helps someone in the future:\n\nif(function_exists('add_db_table_editor')){\nadd_db_table_editor(array(\n'id'=&gt;\"custom_table_interface_1\",\n'title'=&gt;'Mitglieder: Bezahlstatus, Handynummer und Telefonnummer \u00e4ndern',\n'table'=&gt;'wp_users_zusaetze',\n'cap' =&gt; 'edit_pages',\n'edit_cap' =&gt; 'edit_pages',\n'id_column'=&gt; \"ID\",\n\"export_id_field\"=&gt;\"z.ID\",\n'noedit_columns' =&gt; 'user_email, display_name',\n'sql'=&gt;\"SELECT z.ID, u.user_email, u.display_name, z.user_bezahlstatus, z.Handynummer, z.Telefonnummer\n\t\tFROM wp_users_zusaetze z\n\t\tINNER JOIN wp_usermeta m ON m.user_id = z.user_id\n\t\tINNER JOIN wp_users u ON u.ID  = m.user_id\n\t\tWHERE m.meta_key = 'wp_capabilities'\n\t\tAND m.meta_value LIKE '%mitglied%'\"\n));\n}\n\nlike I said, only the values of the table 'wp_users_zusaetze' are editable, joined tables can't be edited, but maybe I am doing something wrong.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Willing to manage the github wiki<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/heyscotg\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/1a2a02831dc80c7f2a792c112bf28a9e?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/1a2a02831dc80c7f2a792c112bf28a9e?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/heyscotg\/\" class=\"reviewer-name\">heyscotg<\/a> on <span class=\"review-date\">October 24, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Russ, I sent you an email: 007.\nFor help actually. If you can assist, I will assume the task of creating and maintaining the wp-db-table-editor wiki, which I noticed is patiently awaiting a good document manager such as myself. ;-)\n\nThanks either way.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Nice: Working excellent, MUST read the docs first!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/dingdang\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/a7eaba872edde5a40d0aeeea4126f84c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/a7eaba872edde5a40d0aeeea4126f84c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/dingdang\/\" class=\"reviewer-name\">dingdang<\/a> on <span class=\"review-date\">July 26, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">That's an interesting plugin and it definitely deserves either 5 stars (if you are a programmer with high IQ) or 1 star (if you are not). LOL\nThe author made a nice tool but it's a nice only if you know what to do and have time to look trough his code if needed.\n\n<del datetime=\"2018-07-25T20:56:16+00:00\">One question - is there any way to add pagination, let say if I have a table with 20K records to prevent it loading as a whole in the admin panel? If not is there an easy way to accomplish this (being able to perform a search on the whole table if needed), thanks.<\/del>\n\n<strong>EDIT (for those that don't like to read docs):<\/strong>\n- to enable the plugin capabilities (to appear in the Admin menu) you must have the table defined already in the database and in functions.php (or elsewhere) to add at least a single line of code (example at the end);\n- to be able to add new lines, there should be a column \"ID\" or if it is different, to use the specific config rule;\n- the pagination is not needed at all - it's super fast with large tables (&gt;20K lines).\n\nExample code to enable the plugin in theme's functions.php:\n\n<pre><code>if(function_exists(&#039;add_db_table_editor&#039;)){\n  add_db_table_editor(&#039;title=THE_TITLE_FOR_ADMIN_AREA&amp;table=the_table_name&#039;);\n}<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works great<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/ovann86\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/38ec35299d9df24f732637db9c93a062?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/38ec35299d9df24f732637db9c93a062?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/ovann86\/\" class=\"reviewer-name\">ovann86<\/a> on <span class=\"review-date\">April 25, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Quick easy access to custom database tables from the wp-admin. <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">No interface and poor instructions (no FAQ)<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"1 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"1\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/chasingpavements\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/90a3e0af7c458756d731a87632f02cac?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/90a3e0af7c458756d731a87632f02cac?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/chasingpavements\/\" class=\"reviewer-name\">chasingpavements<\/a> on <span class=\"review-date\">March 23, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Lost like 5-10 minutes to even search for the interface or where to find a menu item for this plugin. When heading to the description site, again nothing described where menu item should be found etc. Not thought through\/documented well.\n<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Resize width\/height Table defined in functions.php and its cells on admin panel<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/wpleao\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7e9ad247bb98bc1d8ad907a5c418b7da?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7e9ad247bb98bc1d8ad907a5c418b7da?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/wpleao\/\" class=\"reviewer-name\">wpleao<\/a> on <span class=\"review-date\">March 7, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Hello! Fine?\n\nI want resize the table that we define in functions.php and its cells ( width and height) by default, not manually. Like change the css plugin. It is possible? Because my table have long texts. I know is possible resize manually, i want the table and its cells (columns and rows) more bigger, enlarge the width and height for all cells of the table.\nBest Regards<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works pretty well<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/jameslewood\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/068fd58b6c135bbffb160cf0ca08d4b8?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/068fd58b6c135bbffb160cf0ca08d4b8?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/jameslewood\/\" class=\"reviewer-name\">jameslewood<\/a> on <span class=\"review-date\">November 3, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Initially I couldn't get it to work. But found the instructions on the page. Needs a bit of a polish in there to get it working. It would also benefit to have instructions on allowing the creation of new tables eg. via plugin activation.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Good work<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/papacoderrs\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/63a4877425818b2b35912239e48ca7cf?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/63a4877425818b2b35912239e48ca7cf?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/papacoderrs\/\" class=\"reviewer-name\">papacoderrs<\/a> on <span class=\"review-date\">September 3, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><p>Thank you!\n<\/p>\n<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Thank you very much<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/funfrog\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/9f064703e00a2bcf1430c4a56d48c6aa?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/9f064703e00a2bcf1430c4a56d48c6aa?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/funfrog\/\" class=\"reviewer-name\">FunFrog<\/a> on <span class=\"review-date\">September 3, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><p>Very useful plugin, but it extremely lacks of examples. For those who wondering how to use, fo example, jsFile, here is my functions.php:<br \/>\n<pre><code>&lt;?php\n if(function_exists(&#039;add_db_table_editor&#039;)){\n\tadd_db_table_editor(array(&#039; id&#039;=&gt;&#039;db1&#039;,  &#039;title&#039;=&gt;&#039;\u0424\u0438\u043b\u044c\u0442\u0440 \u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0439&#039;, &#039;table&#039;=&gt;&#039;onix_catfilter&#039;, &#039;sql&#039;=&gt;&#039;SELECT * FROM onix_catfilter&#039;,&#039;cap&#039;=&gt;&quot;edit_others_posts&quot;, &#039;editcap&#039;=&gt;&#039;edit_others_posts&#039;, &#039;id_column&#039;=&gt;&#039;Count&#039;, &#039;autoHeight&#039;=&gt;&#039;true&#039;));\n\tadd_db_table_editor(array( &#039;id&#039;=&gt;&#039;db2&#039;,  &#039;title&#039;=&gt;&#039;\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043d\u0430\u0446\u0435\u043d\u043e\u043a&#039;, &#039;table&#039;=&gt;&#039;onix_categories&#039;, &#039;sql&#039;=&gt;&#039;SELECT id,name,margin FROM onix_categories&#039;,&#039;cap&#039;=&gt;&quot;edit_others_posts&quot;, &#039;editcap&#039;=&gt;&#039;edit_others_posts&#039;, &#039;id_column&#039;=&gt;&#039;id&#039;, &#039;autoHeight&#039;=&gt;&#039;true&#039;, &#039;noedit_columns&#039;=&gt;&#039;id,name&#039;));\n\tadd_db_table_editor(array( &#039;id&#039;=&gt;&#039;db3&#039;, &#039;jsFile&#039;=&gt;&#039;dbScript&#039;,  &#039;title&#039;=&gt;&#039;Meta - 1&#039;, &#039;table&#039;=&gt;&#039;onix_categories&#039;, &#039;sql&#039;=&gt;&#039;SELECT id,name,title,description,keywords FROM onix_categories where length(id)=2&#039;,&#039;cap&#039;=&gt;&quot;edit_others_posts&quot;, &#039;editcap&#039;=&gt;&#039;edit_others_posts&#039;, &#039;id_column&#039;=&gt;&#039;id&#039;, &#039;autoHeight&#039;=&gt;&#039;true&#039;, &#039;noedit_columns&#039;=&gt;&#039;id,name&#039;));\n\tadd_db_table_editor(array( &#039;id&#039;=&gt;&#039;db4&#039;, &#039;jsFile&#039;=&gt;&#039;dbScript&#039;,   &#039;title&#039;=&gt;&#039;Meta - 1,2&#039;, &#039;table&#039;=&gt;&#039;onix_categories&#039;, &#039;sql&#039;=&gt;&#039;SELECT id,name,title,description,keywords FROM onix_categories where length(id)=2 OR length(id)=4&#039;,&#039;cap&#039;=&gt;&quot;edit_others_posts&quot;, &#039;editcap&#039;=&gt;&#039;edit_others_posts&#039;, &#039;id_column&#039;=&gt;&#039;id&#039;, &#039;autoHeight&#039;=&gt;&#039;true&#039;, &#039;noedit_columns&#039;=&gt;&#039;id,name&#039;));\n\tadd_db_table_editor(array( &#039;id&#039;=&gt;&#039;db5&#039;, &#039;jsFile&#039;=&gt;&#039;dbScript&#039;,  &#039;title&#039;=&gt;&#039;Meta - 1,2,3&#039;, &#039;table&#039;=&gt;&#039;onix_categories&#039;, &#039;sql&#039;=&gt;&#039;SELECT id,name,title,description,keywords FROM onix_categories&#039;,&#039;cap&#039;=&gt;&quot;edit_others_posts&quot;, &#039;editcap&#039;=&gt;&#039;edit_others_posts&#039;, &#039;id_column&#039;=&gt;&#039;id&#039;, &#039;autoHeight&#039;=&gt;&#039;true&#039;, &#039;noedit_columns&#039;=&gt;&#039;id,name&#039;));\n}\nwp_register_script( &#039;dbScript&#039;, plugins_url( &#039;\/dbScript.js&#039;) );\n?&gt;<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">No screenshots, no possibilty to see in advance what you get.<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"1 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"1\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/soul33\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/3671afc7ab0257dd43d14e0dcbc1a692?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/3671afc7ab0257dd43d14e0dcbc1a692?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/soul33\/\" class=\"reviewer-name\">soul33<\/a> on <span class=\"review-date\">February 8, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><p>Where are the SCREENSHOTS ??<br \/>\nWaste of time.\n<\/p>\n<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/wp-db-table-editor.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/wp-db-table-editor\/trunk\/screenshot-1.png?rev=2259397","caption":"Here's a screenshot of it in action"}},"tags":{"admin-screens":"admin screens","database":"database","editor":"editor"},"versions":[],"donate_link":"https:\/\/www.acceleration.net\/programming\/donate-to-acceleration-net\/","banners":[]}