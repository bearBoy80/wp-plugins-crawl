{"name":"Meta Field Block","slug":"display-a-meta-field-as-block","version":"1.2.0","author":"<a href=\"https:\/\/boldblocks.net\">Phi Phan<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/mr2p\/","contributors":{"mr2p":{"profile":"https:\/\/profiles.wordpress.org\/mr2p\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/6e786df8f87d8c089b1f8d6730e90fd4?s=96&d=monsterid&r=g","display_name":"Phi Phan"}},"requires":"5.8","tested":"6.4.2","requires_php":"7.4","requires_plugins":[],"rating":100,"ratings":{"5":36,"4":0,"3":0,"2":0,"1":0},"num_ratings":36,"support_threads":1,"support_threads_resolved":1,"active_installs":2000,"last_updated":"2023-12-11 12:54am GMT","added":"2022-02-22","homepage":"","sections":{"description":"<p>The plugin allows developers\/users to display a meta field as a block on the front end, supporting ACF fields. It can be nested inside a parent block that has <code>postId<\/code> and <code>postType<\/code> context, such as <code>Query Block<\/code>, or used as a stand-alone block.<br \/>\nYou can also display term meta fields on a taxonomy, category, or tag template, and user meta fields on an author template.<\/p>\n<h4>What is the HTML output of ACF fields?<\/h4>\n<ol>\n<li>\n<p>All basic field types that return strings or can cast to strings are supported &#8211; The HTML output is from the <code>get_field<\/code> function.<\/p>\n<\/li>\n<li>\n<p>Link type &#8211; The HTML output is:<\/p>\n<pre><code>&lt;a href={url} target={target} rel=\"noreferrer noopener\"&gt;{title}&lt;\/a&gt;\n<\/code><\/pre>\n<p>There is no <code>rel<\/code> attribute if the <code>target<\/code> is not <code>_blank<\/code><\/p>\n<\/li>\n<li>\n<p>Image type &#8211; The HTML output is from the <a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/wp_get_attachment_image\/\" rel=\"nofollow ugc\">wp_get_attachment_image<\/a> function. The image size is from the Preview Size setting.<\/p>\n<\/li>\n<li>\n<p>True \/ False type &#8211; The HML output is <code>Yes<\/code> if the value is <code>true<\/code>, and <code>No<\/code> if the value is <code>false<\/code>. Below is the code snippet to change these text values:<\/p>\n<pre><code>add_filter( 'meta_field_block_acf_field_true_false_on_text', function ( $on_text, $field, $post_id, $value ) {\n  return 'Yep';\n}, 10, 4 );\n\nadd_filter( 'meta_field_block_acf_field_true_false_off_text', function ( $off_text, $field, $post_id, $value ) {\n  return 'Noop';\n}, 10, 4 );\n<\/code><\/pre>\n<\/li>\n<li>\n<p>Checkbox \/ Select type &#8211; The HTML output is:<\/p>\n<pre><code>&lt;span class=\"value-item\"&gt;{item_value}&lt;\/span&gt;, &lt;span class=\"value-item\"&gt;{item_value}&lt;\/span&gt;\n<\/code><\/pre>\n<p>The <code>item_value<\/code> can be either <code>value<\/code> or <code>label<\/code>, depending on the return format of the field. Multiple selected values are separated by <code>,<\/code>. Below is the code snippet to change the separator:<\/p>\n<pre><code>add_filter( 'meta_field_block_acf_field_choice_item_separator', function ( $separator, $value, $field, $post_id ) {\n  return ' | ';\n}, 10, 4 );\n<\/code><\/pre>\n<\/li>\n<li>\n<p>Radio button \/ Button group type &#8211; The HTML output can be either <code>value<\/code> or <code>label<\/code>, depending on the return format of the field.<\/p>\n<\/li>\n<li>\n<p>Page link type, Post object type &#8211; The HTML output for a single-value field is:<\/p>\n<pre><code>&lt;a class=\"post-link\" href={url} rel=\"bookmark\"&gt;{title}&lt;\/a&gt;\n<\/code><\/pre>\n<p>For a multiple-value field is:<\/p>\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;&lt;a class=\"post-link\" href={url} rel=\"bookmark\"&gt;{title}&lt;\/a&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;a class=\"post-link\" href={url} rel=\"bookmark\"&gt;{title}&lt;\/a&gt;&lt;\/li&gt;\n&lt;\/ul&gt;\n<\/code><\/pre>\n<\/li>\n<li>\n<p>Relationship type &#8211; The HTML output is:<\/p>\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;&lt;a class=\"post-link\" href={url} rel=\"bookmark\"&gt;{title}&lt;\/a&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;a class=\"post-link\" href={url} rel=\"bookmark\"&gt;{title}&lt;\/a&gt;&lt;\/li&gt;\n&lt;\/ul&gt;\n<\/code><\/pre>\n<\/li>\n<li>\n<p>Taxonomy type &#8211; The HTML output is:<\/p>\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;&lt;a class=\"term-link\" href={term_url}&gt;{term_name}&lt;\/a&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;a class=\"term-link\" href={term_url}&gt;{term_name}&lt;\/a&gt;&lt;\/li&gt;\n&lt;\/ul&gt;\n<\/code><\/pre>\n<\/li>\n<li>\n<p>User type &#8211; The HTML output for a single-value field is:<\/p>\n<pre><code>&lt;a class=\"user-link\" href={author_url}&gt;{display_name}&lt;\/a&gt;\n<\/code><\/pre>\n<p>For a multiple-value field is:<\/p>\n<pre><code>&lt;ul&gt;\n  &lt;li&gt;&lt;a class=\"user-link\" href={author_url}&gt;{display_name}&lt;\/a&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;a class=\"user-link\" href={author_url}&gt;{display_name}&lt;\/a&gt;&lt;\/li&gt;\n&lt;\/ul&gt;\n<\/code><\/pre>\n<\/li>\n<li>\n<p>For other complex field types, you can generate a custom HTML output by using the hook:<\/p>\n<pre><code>apply_filters( 'meta_field_block_get_acf_field', $field_value, $post_id, $field, $raw_value )\n<\/code><\/pre>\n<p>Or by using the general hook:<\/p>\n<pre><code>apply_filters( 'meta_field_block_get_block_content', $content, $attributes, $block, $post_id )\n<\/code><\/pre>\n<p>The benefit of the hook <code>meta_field_block_get_acf_field<\/code> is you can see the changes for both the front end and in the editor.<\/p>\n<p>Learn more about these hooks in the below Copy &amp; paste section.<br \/>\nStarting from version 1.2, a new parameter <code>$object_type<\/code> has been added to those hooks. It can have a value of <code>post<\/code>, <code>term<\/code>, or <code>user<\/code>. The default value is <code>post<\/code>.<\/p>\n<pre><code>apply_filters( 'meta_field_block_get_acf_field', $field_value, $post_id, $field, $raw_value, $object_type )\napply_filters( 'meta_field_block_get_block_content', $content, $attributes, $block, $post_id, $object_type )\n<\/code><\/pre>\n<\/li>\n<\/ol>\n<h4>Copy &amp; paste snippets<\/h4>\n<p>Most of the snippets using the hook <code>meta_field_block_get_block_content<\/code> only affect the value on the front end, not in the editor.<br \/>\nIf your fields are ACF Fields, we recommend using the hook <code>meta_field_block_get_acf_field<\/code> to change the field content, because with that hook you can change the block content for both the front end and the editor. However, some snippets may not work on the editor because we cannot get the context in the REST API request.<\/p>\n<ol>\n<li>\n<p>How to change the HTML output of the block?<br \/>\nUsing the <code>meta_field_block_get_block_content<\/code> hook:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `your_field_name` with your unique name.\n  if ( 'your_field_name' === $field_name ) {\n    $block_content = 'new content';\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Using the <code>meta_field_block_get_acf_field<\/code> hook for ACF Fields only:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_acf_field', function ( $block_content, $post_id, $field, $raw_value ) {\n  $field_name = $field['name'] ?? '';\n\n  \/\/ Replace `your_field_name` with your unique name.\n  if ( 'your_field_name' === $field_name ) {\n    $block_content = 'new content';\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>This basic snippet is very powerful. You can use it to display any fields from any posts, terms, users or setting fields. Please see the details in the below use cases.<\/p>\n<\/li>\n<li>\n<p>How to wrap the block with a link to the post within the Query Loop?<br \/>\nUsing the <code>meta_field_block_get_block_content<\/code> hook:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `your_field_name` with your unique name.\n  if ( 'your_field_name' === $field_name &amp;&amp; $block_content !== '' ) {\n    $block_content = sprintf('&lt;a href=\"%1$s\"&gt;%2$s&lt;\/a&gt;', get_permalink($post_id), $block_content);\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Using the <code>meta_field_block_get_acf_field<\/code> hook for ACF Fields only:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_acf_field', function ( $block_content, $post_id, $field, $raw_value ) {\n  $field_name = $field['name'] ?? '';\n\n  \/\/ Replace `your_field_name` with your unique name.\n  if ( 'your_field_name' === $field_name &amp;&amp; $block_content !== '' ) {\n    $block_content = sprintf('&lt;a href=\"%1$s\"&gt;%2$s&lt;\/a&gt;', get_permalink($post_id), $block_content);\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>This snippet only works with the block that has only HTML inline tags or an image.<\/p>\n<\/li>\n<li>\n<p>How to display an image URL field as an image tag?<br \/>\nUsing the <code>meta_field_block_get_block_content<\/code> hook:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `your_image_url_field_name` with your unique name.\n  if ( 'your_image_url_field_name' === $field_name &amp;&amp; wp_http_validate_url($block_content) ) {\n    $block_content = sprintf('&lt;img src=\"%1$s\" alt=\"your_image_url_field_name\" \/&gt;', esc_attr($block_content));\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Using the <code>meta_field_block_get_acf_field<\/code> hook for ACF Fields only:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_acf_field', function ( $block_content, $post_id, $field, $raw_value ) {\n  $field_name = $field['name'] ?? '';\n\n  \/\/ Replace `your_image_url_field_name` with your unique name.\n  if ( 'your_image_url_field_name' === $field_name &amp;&amp; wp_http_validate_url($block_content) ) {\n    $block_content = sprintf('&lt;img src=\"%1$s\" alt=\"your_image_url_field_name\" \/&gt;', esc_attr($block_content));\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<\/li>\n<li>\n<p>How to display an embedded URL (YouTube &#8230;) field as an embedded iframe?<br \/>\nUsing the <code>meta_field_block_get_block_content<\/code> hook:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `your_embedded_url_field_name` with your unique name.\n  if ( 'your_embedded_url_field_name' === $field_name &amp;&amp; wp_http_validate_url($block_content) ) {\n    $block_content = wp_oembed_get( $block_content, array( 'width' =&gt; 1024 ) );\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Using the <code>meta_field_block_get_acf_field<\/code> hook for ACF Fields only:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_acf_field', function ( $block_content, $post_id, $field, $raw_value ) {\n  $field_name = $field['name'] ?? '';\n\n  \/\/ Replace `your_embedded_url_field_name` with your unique name.\n  if ( 'your_embedded_url_field_name' === $field_name &amp;&amp; wp_http_validate_url($block_content) ) {\n    $block_content = wp_oembed_get( $block_content, array( 'width' =&gt; 1024 ) );\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<\/li>\n<li>\n<p>How to display multiple meta fields in a block?<br \/>\nFor example, we need to display the full name of a user from two meta fields <code>first_name<\/code> and <code>last_name<\/code>.<\/p>\n<pre><code>\/\/ Create a function to build the full name from two meta fields.\nfunction yourprefix_get_full_name( $post_id ) {\n  $first_name = get_post_meta( $post_id, 'first_name', true );\n  $last_name  = get_post_meta( $post_id, 'last_name', true );\n\n  \/\/ If the meta fields are ACF Fields. The code will be:\n  \/\/ $first_name = get_field( 'first_name', $post_id );\n  \/\/ $last_name  = get_field( 'last_name', $post_id );\n\n  return trim(\"$first_name $last_name\");\n}\n\n\/\/ Register a custom rest field for the full name.\nadd_action(\n  'rest_api_init',\n  function () {\n      register_rest_field(\n        'post', \/\/ Can be an array of post types or a singular value like 'post', 'page', 'product' etc.\n        'full_name',\n        array(\n          'get_callback' =&gt; function ( $post_array ) {\n            return yourprefix_get_full_name( $post_array['id'] );\n          },\n          'schema'       =&gt; array(\n            'type' =&gt; 'string',\n          ),\n        )\n      );\n  }\n);\n\n\/\/ Render the block on the front end.\nadd_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  if ( 'full_name' === $field_name ) {\n    $block_content = yourprefix_get_full_name( $post_id );\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Put the above snippet in your theme or plugin, then choose the field type as <code>custom rest field<\/code> and input the field name as <code>full_name<\/code>. Please make sure the rest field name is unique.<\/p>\n<\/li>\n<li>\n<p>How to display a term meta field?<br \/>\nSince version 1.2, the plugin supports displaying term meta fields on a taxonomy, category, or tag template. The following custom code is still helpful to display complex fields.<br \/>\nFor example, we need to display the value of a custom field named <code>cat_attr<\/code> for the product_cat taxonomy.<\/p>\n<pre><code>\/\/ Create a function to build the value for the field.\nfunction yourprefix_get_attr_value( $term_id ) {\n  $cat_attr_value = get_term_meta( $term_id, 'cat_attr', true );\n\n  \/\/ If the meta field is an ACF Field. The code will be:\n  \/\/ $cat_attr_value = get_field( 'cat_attr', 'term_' . $term_id );\n\n  return $cat_attr_value;\n}\n\n\/\/ Render the block on the front end.\nadd_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `unique_name_for_cat_attr` with your unique name.\n  if ( 'unique_name_for_cat_attr' === $field_name &amp;&amp; is_tax( 'product_cat' ) ) {\n    $term_id = get_queried_object_id();\n    $block_content = yourprefix_get_attr_value( $term_id );\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Put the above snippet in your theme or plugin, drag the block into the <code>product_cat<\/code> taxonomy template, then choose the field type as <code>custom rest field<\/code> or <code>meta<\/code> and input the field name as <code>unique_name_for_cat_attr<\/code>. You can customize this snippet to display custom fields for a specific term on any page, or template.<\/p>\n<\/li>\n<li>\n<p>How to display a setting field?<br \/>\nFor example, we need to display a setting field named <code>footer_credit<\/code> on the footer template part of the site.<\/p>\n<pre><code>\/\/ Create a function to build the value for the field.\nfunction yourprefix_get_footer_credit_text() {\n  $footer_credit_text = get_option( 'footer_credit', '' );\n\n  \/\/ If the field is an ACF Field. The code will be:\n  \/\/ $footer_credit_text = get_field( 'footer_credit', 'option' );\n\n  return $footer_credit_text;\n}\n\n\/\/ Render the block on the front end.\nadd_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace `unique_name_for_footer_credit` with your unique name.\n  if ( 'unique_name_for_footer_credit' === $field_name ) {\n    $block_content = yourprefix_get_footer_credit_text();\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Using the <code>meta_field_block_get_acf_field<\/code> hook for ACF Fields only:<\/p>\n<pre><code>add_filter( 'meta_field_block_get_acf_field', function ( $block_content, $post_id, $field, $raw_value ) {\n  $field_name = $field['name'] ?? '';\n\n  \/\/ Replace `unique_name_for_footer_credit` with your unique name.\n  if ( 'unique_name_for_footer_credit' === $field_name ) {\n    $block_content = yourprefix_get_footer_credit_text();\n  }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Put the above snippet in your theme or plugin, drag the block into the template, then choose the field type as <code>custom rest field<\/code> or <code>meta<\/code> and input the field name as <code>unique_name_for_footer_credit<\/code>.<\/p>\n<\/li>\n<li>\n<p>How to display custom fields for users on the author template or display custom fields for the logged-in user or any users?<br \/>\nSince version 1.2, the plugin supports displaying user meta fields on an author template. The following custom code is still helpfull to display complex fields.<\/p>\n<pre><code>\/\/ Create a function to build the value for the field.\nfunction yourprefix_get_user_field( $user_id ) {\n  $user_field_value = get_user_meta( $user_id, 'your_field_name', true );\n\n  \/\/ If the meta field is an ACF Field. The code will be:\n  \/\/ $user_field_value = get_field( 'your_field_name', 'user_' . $user_id );\n\n  return $user_field_value;\n}\n\n\/\/ Render the block on the front end.\nadd_filter( 'meta_field_block_get_block_content', function ( $block_content, $attributes, $block, $post_id ) {\n  $field_name = $attributes['fieldName'] ?? '';\n\n  \/\/ Replace your_field_name with your unique name.\n  if ( 'your_field_name' === $field_name &amp;&amp; is_author() ) {\n    $user_id = get_queried_object_id();\n    $block_content = yourprefix_get_user_field( $user_id );\n  }\n\n  \/\/ If you want to display meta fields for logged-in users, then the code would be:\n  \/\/ if ( 'your_field_name' === $field_name &amp;&amp; is_user_logged_in() ) {\n  \/\/   $user_id = get_current_user_id();\n  \/\/   $block_content = yourprefix_get_user_field( $user_id );\n  \/\/ }\n\n  return $block_content;\n}, 10, 4);\n<\/code><\/pre>\n<p>Put the above snippet in your theme or plugin, drag the block into the template, then choose the field type as <code>custom rest field<\/code> or <code>meta<\/code> and input the field name as <code>your_field_name<\/code>.<\/p>\n<\/li>\n<li>\n<p><a href=\"https:\/\/wordpress.org\/support\/topic\/how-to-use-mfb-to-display-dynamic-fields\/\" rel=\"ugc\">How to use MFB as a placeholder to display any kind of content?<\/a><\/p>\n<\/li>\n<\/ol>\n<p>If this plugin is useful for you, please do a quick review and <a href=\"https:\/\/wordpress.org\/support\/plugin\/display-a-meta-field-as-block\/reviews\/#new-post\" rel=\"ugc\">rate it<\/a> on WordPress.org to help us spread the word. I would very much appreciate it.<\/p>\n<p>Please check out my other plugins if you&#8217;re interested:<\/p>\n<ul>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/content-blocks-builder\" rel=\"ugc\">Content Blocks Builder<\/a> &#8211; A tool to create blocks, patterns or variations easily for your site directly on the Block Editor.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/block-enhancements\" rel=\"ugc\">Block Enhancements<\/a> &#8211; A plugin to add more useful features to blocks likes: icons, box-shadow, transform&#8230;<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/icon-separator\" rel=\"ugc\">Icon separator<\/a> &#8211; A tiny block just like the core\/separator block but with the ability to add an icon to it.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/svg-block\" rel=\"ugc\">SVG Block<\/a> &#8211; A block to insert inline SVG images easily and safely. It also bundles with more than 3000 icons and some common non-rectangular dividers.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/counting-number-block\" rel=\"ugc\">Counting Number Block<\/a> &#8211; A block to display a number that has the number-counting effect.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/breadcrumb-block\" rel=\"ugc\">Breadcrumb Block<\/a> &#8211; A simple breadcrumb trail block that supports JSON-LD structured data.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/better-youtube-embed-block\" rel=\"ugc\">Better Youtube Embed Block<\/a> &#8211; Embed Youtube videos without slowing down your site.<\/li>\n<\/ul>\n<p>The plugin is developed using @wordpress\/create-block.<\/p>\n","installation":"<ol>\n<li>Upload the plugin files to the <code>\/wp-content\/plugins\/meta-field-block<\/code> directory, or install the plugin through the WordPress plugins screen directly.<\/li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress<\/li>\n<\/ol>\n","faq":"\n<dt id='who%20needs%20this%20plugin%3F'>\nWho needs this plugin?\n<\/h4>\n<p>\n<p>This plugin is created for developers, but end users can also use it.<\/p>\n<\/p>\n<dt id='does%20it%20support%20inputting%20and%20saving%20meta%20value%3F'>\nDoes it support inputting and saving meta value?\n<\/h4>\n<p>\n<p>No, It does not. It only displays meta fields as blocks.<\/p>\n<\/p>\n<dt id='does%20it%20support%20all%20types%20of%20meta%20fields%3F'>\nDoes it support all types of meta fields?\n<\/h4>\n<p>\n<p>Only simple types such as string, integer, or number can be used directly. Other complex types such as object, array need to be converted to HTML markup strings.<\/p>\n<\/p>\n<dt id='does%20it%20support%20all%20types%20of%20acf%20fields%3F'>\nDoes it support all types of ACF fields?\n<\/h4>\n<p>\n<p>It supports all basic field types that return strings or cast to strings. Some complex field types like image, link, page_link, post_object, relationship, taxonomy, and user are also supported in a basic format.<\/p>\n<\/p>\n<dt id='what%20are%20the%20prefix%20and%20suffix%20for%3F'>\nWhat are the prefix and suffix for?\n<\/h4>\n<p>\n<p>The value for those settings should be plain text or some allowed HTML elements. Their values will be formatted with <code>wp_kses( $prefix, wp_kses_allowed_html( \"post\" ) )<\/code>. They&#8217;re helpful for some use cases like displaying the name of the meta field or a value with a prefix or suffix, e.g. $100, 100px, etc.<\/p>\n<\/p>\n<dt id='does%20it%20include%20some%20style%20for%20the%20meta%20field%3F'>\nDoes it include some style for the meta field?\n<\/h4>\n<p>\n<p>The block does not provide any CSS style for the meta field value. But it does provide a basic display inline style from the settings.<\/p>\n<\/p>\n<dt id='does%20it%20support%20other%20meta-field%20frameworks%3F'>\nDoes it support other meta-field frameworks?\n<\/h4>\n<p>\n<p>Yes, it does, as long as those meta fields can be accessed via the <code>get_post_meta<\/code> function and the return value is a string or can be cast to a string. To display the value in the block editor, the meta field has to be accessed via the REST API.<\/p>\n<\/p>\n<dt id='what%20if%20the%20displayed%20markup%20is%20blank%20or%20is%20different%20from%20the%20meta%20value%3F'>\nWhat if the displayed markup is blank or is different from the meta value?\n<\/h4>\n<p>\n<p>There is a chance that your meta value contains some HTML tags or HTML attributes that are not allowed to display. To fix this, you should use the hook <code>apply_filters( 'meta_field_block_kses_allowed_html', $allowed_html_tags )<\/code> to add your tags and attributes to the array of allowed tags. By default, the block allows all tags from the <code>$allowedposttags<\/code> value and basic attributes for <code>iframe<\/code> and <code>SVG<\/code> elements.<\/p>\n<\/p>\n\n","changelog":"<h4>1.2<\/h4>\n<p><em>Release Date &#8211; 11 December 2023<\/em><\/p>\n<ul>\n<li>Added   &#8211; Allow getting meta fields from terms and users<\/li>\n<li>Updated &#8211; Add new <code>$object_type<\/code> parameter to two main hooks <code>meta_field_block_get_acf_field<\/code> and <code>meta_field_block_get_block_content<\/code><\/li>\n<li>Added   &#8211; Add variations for some common ACF field types<\/li>\n<li>Updated &#8211; Increase the required version of PHP to 7.4<\/li>\n<li>Updated &#8211; Refactor code for upcoming releases<\/li>\n<li>Updated &#8211; Move the prefix and suffix to a separate panel<\/li>\n<\/ul>\n<h4>1.1.7<\/h4>\n<p><em>Release Date &#8211; 09 September 2023<\/em><\/p>\n<ul>\n<li>FIX &#8211; The block does not show the number 0 if using it as the empty message<\/li>\n<\/ul>\n<h4>1.1.6<\/h4>\n<p><em>Release Date &#8211; 13 August 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Refactor block.json, update to block API version 3 for better WP 6.3 compatibility<\/li>\n<li>FIX &#8211; Rename allowed HTML attributes for SVG<\/li>\n<\/ul>\n<h4>1.1.5<\/h4>\n<p><em>Release Date &#8211; 15 July 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Add a custom hook <code>apply_filters( 'meta_field_block_kses_allowed_html', $allowed_html_tags )<\/code> for filtering allowed HTML tags in the value.<\/li>\n<li>DEV &#8211; Allow displaying iframe, and SVG tag by default.<\/li>\n<li>DEV &#8211; Force displaying color (text, background, link) attributes for unsupported themes.<\/li>\n<li>DEV &#8211; Refactor code for React best practice.<\/li>\n<li>DOC &#8211; Update readme for the hook <code>meta_field_block_get_acf_field<\/code><\/li>\n<\/ul>\n<h4>1.1.4<\/h4>\n<p><em>Release Date &#8211; 20 May 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Change the placeholder text for the block in the site editor.<\/li>\n<li>DEV &#8211; Add a setting to use the ACF field label as the prefix<\/li>\n<\/ul>\n<h4>1.1.3<\/h4>\n<p><em>Release Date &#8211; 31 Mar 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Support choice fields: true\/false, select, checkbox, radio, button group<\/li>\n<li>DEV &#8211; Add raw value to the <code>meta_field_block_get_acf_field<\/code> hook<\/li>\n<\/ul>\n<h4>1.1.2<\/h4>\n<p><em>Release Date &#8211; 28 Mar 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Refactor both JS and PHP code<\/li>\n<li>DEV &#8211; Load ACF field value even if we could not load the field object<\/li>\n<li>DEV &#8211; Separate settings group for WP 6.2<\/li>\n<\/ul>\n<h4>1.1.1<\/h4>\n<p><em>Release Date &#8211; 14 Mar 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Add a hideEmpty setting to hide the whole block if the value is empty<\/li>\n<li>DEV &#8211; Add an emptyMessage setting to show a custom text in case the value is empty<\/li>\n<li>FIX &#8211; The meta field did not show on the archive template<\/li>\n<\/ul>\n<h4>1.1.0<\/h4>\n<p><em>Release Date &#8211; 06 Mar 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Refactor all the source code for more upcoming features<\/li>\n<li>DEV &#8211; Make sure the block works with all return formats for the image field, link field<\/li>\n<li>DEV &#8211; Get all custom rest fields to show on the suggested help<\/li>\n<li>DEV &#8211; Allow changing the tagName from the block toolbar<\/li>\n<li>DEV &#8211; Improve performance<\/li>\n<li>DEV &#8211; Add more core support features<\/li>\n<li>DEV &#8211; Add more meaningful messages for some use cases<\/li>\n<li>FIX &#8211; Allow displaying links without text<\/li>\n<\/ul>\n<h4>1.0.10<\/h4>\n<p><em>Release Date &#8211; 02 Feb 2023<\/em><\/p>\n<ul>\n<li>DEV &#8211; Support multiple values for ACF User type<\/li>\n<\/ul>\n<h4>1.0.9<\/h4>\n<p><em>Release Date &#8211; 15 Sep 2022<\/em><\/p>\n<ul>\n<li>FIX &#8211; Change the textdomain to the plugin slug<\/li>\n<\/ul>\n<h4>1.0.8<\/h4>\n<p><em>Release Date &#8211; 10 Sep 2022<\/em><\/p>\n<ul>\n<li>FIX &#8211; Wrong handle for wp_set_script_translations. Thanks to Lo\u00efc Antignac (@webaxones)<\/li>\n<\/ul>\n<h4>1.0.7<\/h4>\n<p><em>Release Date &#8211; 07 Sep 2022<\/em><\/p>\n<ul>\n<li>FIX &#8211; Add a null check for meta fields value before accessing it&#8217;s property<\/li>\n<\/ul>\n<h4>1.0.6<\/h4>\n<p><em>Release Date &#8211; 25 Jun 2022<\/em><\/p>\n<ul>\n<li>DEV &#8211; Add an option to show the block&#8217;s outline on the Editor<\/li>\n<\/ul>\n<h4>1.0.5<\/h4>\n<p><em>Release Date &#8211; 21 Jun 2022<\/em><\/p>\n<ul>\n<li>DEV &#8211; Display the placeholder text on the template context<\/li>\n<\/ul>\n<h4>1.0.4<\/h4>\n<p><em>Release Date &#8211; 02 May 2022<\/em><\/p>\n<ul>\n<li>DEV &#8211; Support displaying some field types for ACF such as image, link, page_link, post_object, relationship, taxonomy<\/li>\n<\/ul>\n<h4>1.0.3<\/h4>\n<p><em>Release Date &#8211; 30 April 2022<\/em><\/p>\n<ul>\n<li>DEV &#8211; Add supports for borders, and full typography options<\/li>\n<\/ul>\n<h4>1.0.2<\/h4>\n<p><em>Release Date &#8211; 28 April 2022<\/em><\/p>\n<ul>\n<li>DEV &#8211; Add the title to block registration in JS<\/li>\n<li>REFACTOR source code<\/li>\n<\/ul>\n<h4>1.0.1<\/h4>\n<p><em>Release Date &#8211; 23 March 2022<\/em><\/p>\n<ul>\n<li>FIX &#8211; The block does not work in the site editor.<\/li>\n<\/ul>\n<h4>1.0.0<\/h4>\n<p><em>Release Date &#8211; 22 February 2022<\/em><\/p>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/display-a-meta-field-as-block\/assets\/screenshot-1.png?rev=2707676\"><img src=\"https:\/\/ps.w.org\/display-a-meta-field-as-block\/assets\/screenshot-1.png?rev=2707676\" alt=\"Block&#039;s settings\"><\/a><p>Block's settings<\/p><\/li><\/ol>","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">The repeater does not understand, writes Array<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pathetic\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/8db24924df193a4d6bea07b39d930a18?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/8db24924df193a4d6bea07b39d930a18?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pathetic\/\" class=\"reviewer-name\">pathetic<\/a> on <span class=\"review-date\">November 13, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">The repeater does not understand, writes Array<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great Plugin. Super easy to work with!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/johhom\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/a847570474ad3c6ec09609ba73927615?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/a847570474ad3c6ec09609ba73927615?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/johhom\/\" class=\"reviewer-name\">johhom<\/a> on <span class=\"review-date\">November 5, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Thanks Phi!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great plugin !<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/marieservais\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7abfdc3434a1102bc03f096054e188a9?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7abfdc3434a1102bc03f096054e188a9?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/marieservais\/\" class=\"reviewer-name\">marieservais<\/a> on <span class=\"review-date\">October 12, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Wow, this is a great plugin ! Simple and efficient. It solved seamlessly, in an instant, the problem I had been working around for days without muchsuccess. So thank you !<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Superb plugin!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/chyvak1831\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/9fb191af02f5d6af780015208c84f1c9?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/9fb191af02f5d6af780015208c84f1c9?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/chyvak1831\/\" class=\"reviewer-name\">chyvak1831<\/a> on <span class=\"review-date\">October 12, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Most wanted plugin for block themes!<br \/>Allow you easy and fast output mete fields and ACF.<br \/>php filters allow you modify output, which make possible do very complex things!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Must have when using meta fields in Block Themes<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/tibor\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7f05664c9b930bc61237d73a99e7799d?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7f05664c9b930bc61237d73a99e7799d?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/tibor\/\" class=\"reviewer-name\">Tibor Paulsch <small>(Tibor)<\/small><\/a> on <span class=\"review-date\">September 6, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This makes live so much easier! Even more since we can use it in block templates too. <\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Very powerful<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/x1-bot\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/b44d62c1a2119673d20433e8444e45fd?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/b44d62c1a2119673d20433e8444e45fd?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/x1-bot\/\" class=\"reviewer-name\">Squidy McSquid <small>(X1-Bot)<\/small><\/a> on <span class=\"review-date\">August 22, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This plugin has helped me so much. Wordpress blocks don't seem to support getting the POST ID inside of a query block. This plugin solves that for me and allows me to use php to modify the output to my liking.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">I waited so long for this plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/arnkoe\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/784f0f06fe66fa5751fe6cd1994f769f?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/784f0f06fe66fa5751fe6cd1994f769f?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/arnkoe\/\" class=\"reviewer-name\">arnkoe<\/a> on <span class=\"review-date\">August 10, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Thank you so much!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">very helpful<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/alexeyvertinsky\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/dc9c3b4a94e5dc9ab54a6b51bbbac22c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/dc9c3b4a94e5dc9ab54a6b51bbbac22c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/alexeyvertinsky\/\" class=\"reviewer-name\">Alexey Vertinsky <small>(AlexeyVertinsky)<\/small><\/a> on <span class=\"review-date\">July 25, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Great job thanks! <br \/>Its good to have metafields on product block!<br \/>Now i need print attributes from product but dont know how.<br \/>If you can explain will be great, also you can supply source code of block and then i can modify by myself.<br \/>Thanks in advance!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">must have plugin to display custom field values<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/gbyat\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/2fb81082e9169a5f7d09aacab851c0d9?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/2fb81082e9169a5f7d09aacab851c0d9?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/gbyat\/\" class=\"reviewer-name\">webentwicklerin <small>(gbyat)<\/small><\/a> on <span class=\"review-date\">June 29, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>much better than creating shortcodes and filter them to get correct post-IDs inside query blocks - thank you for this great plugin <\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Very useful<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/newshopdev\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/c62de755ec655d2be929edf93c3310a6?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/c62de755ec655d2be929edf93c3310a6?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/newshopdev\/\" class=\"reviewer-name\">newshopdev<\/a> on <span class=\"review-date\">June 14, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>Perfect with gutenberg query loop block<br \/>Thanks<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.2.0.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/display-a-meta-field-as-block\/assets\/screenshot-1.png?rev=2707676","caption":"Block's settings"}},"tags":{"acf":"acf","blocks":"blocks","custom-field":"custom field","gutenberg":"gutenberg","meta-field":"meta field"},"versions":{"1.0.1":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.1.zip","1.0.10":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.10.zip","1.0.2":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.2.zip","1.0.3":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.3.zip","1.0.4":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.4.zip","1.0.5":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.5.zip","1.0.6":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.6.zip","1.0.7":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.7.zip","1.0.8":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.8.zip","1.0.9":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.0.9.zip","1.1.0":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.0.zip","1.1.1":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.1.zip","1.1.2":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.2.zip","1.1.3":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.3.zip","1.1.4":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.4.zip","1.1.5":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.5.zip","1.1.6":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.6.zip","1.1.7":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.1.7.zip","1.2.0":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.1.2.0.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/display-a-meta-field-as-block.zip"},"donate_link":"","banners":{"low":"https:\/\/ps.w.org\/display-a-meta-field-as-block\/assets\/banner-772x250.jpg?rev=3012261","high":"https:\/\/ps.w.org\/display-a-meta-field-as-block\/assets\/banner-1544x500.jpg?rev=3012262"}}