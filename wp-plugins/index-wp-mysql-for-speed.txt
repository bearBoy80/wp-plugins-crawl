{"name":"Index WP MySQL For Speed","slug":"index-wp-mysql-for-speed","version":"1.4.14","author":"<a href=\"https:\/\/github.com\/OllieJones\">Oliver Jones, Rick James<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/olliejones\/","contributors":{"olliejones":{"profile":"https:\/\/profiles.wordpress.org\/olliejones\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/1bf48ab39f56debcc0a700130e4a6c00?s=96&d=monsterid&r=g","display_name":"OllieJones"},"rjasdfiii":{"profile":"https:\/\/profiles.wordpress.org\/rjasdfiii\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/1ee974306d2def46eb69534fbcf95cc5?s=96&d=monsterid&r=g","display_name":"rjasdfiii"}},"requires":"5.2","tested":"6.4.2","requires_php":"5.6","requires_plugins":[],"rating":96,"ratings":{"5":60,"4":0,"3":0,"2":1,"1":2},"num_ratings":63,"support_threads":13,"support_threads_resolved":12,"active_installs":20000,"last_updated":"2023-10-25 1:08pm GMT","added":"2021-06-13","homepage":"https:\/\/plumislandmedia.org\/index-wp-mysql-for-speed\/","sections":{"description":"<h4>How do I use this plugin?<\/h4>\n<p>After you install and activate this plugin, visit the Index MySQL Tool under the Tools menu. From there you can press the <em>Add Keys Now<\/em> button. If you have large tables, use it with <a href=\"https:\/\/wp-cli.org\/\" rel=\"nofollow ugc\">WP-CLI<\/a> instead to avoid timeouts. See the WP-CLI section to learn more.<\/p>\n<h4>What does it do for my site?<\/h4>\n<p>This plugin works to make your MySQL database work more efficiently by adding high-performance keys to the tables you choose. On request it monitors your site&#8217;s use of your MySQL database to detect which database operations are slowest. It is most useful for large sites: sites with many users, posts, pages, and \/ or products.<\/p>\n<p>You can use it to restore WordPress&#8217;s default keys if need be.<\/p>\n<h4>What is this all about?<\/h4>\n<p>Where does WordPress store all that stuff that makes your site great? Where are your pages, posts, products, media, users, custom fields, metadata, and all your valuable content? All that data is in the <a href=\"https:\/\/www.mysql.com\/\" rel=\"nofollow ugc\">MySQL<\/a> relational database management system. (Many hosting providers and servers use the <a href=\"https:\/\/mariadb.org\/\" rel=\"nofollow ugc\">MariaDB<\/a> fork of the MySQL software; it works exactly the same way as MySQL itself.)<\/p>\n<p>As your site grows, your MySQL tables grow. Giant tables can make your page loads slow down, frustrate your users, and even hurt your search-engine rankings. And, bulk imports can take absurd amounts of time. What can you do about this?<\/p>\n<p>You can install and use a database cleaner plugin to get rid of old unwanted data and reorganize your tables. That makes them smaller, and therefore faster. That is a good and necessary task. That is not the task of this plugin. You can, if your hosting provider supports it, install and use a <a href=\"https:\/\/developer.wordpress.org\/reference\/classes\/wp_object_cache\/#persistent-cache-plugins\" rel=\"nofollow ugc\">Persistent Object Cache plugin<\/a> to reduce traffic to your database. That is not the task of this plugin either.<\/p>\n<p>This plugin adds database <a href=\"https:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/mysql-indexes.html\" rel=\"nofollow ugc\">keys<\/a> (also called indexes) to your MySQL tables to make it easier for WordPress to find the information it needs. All relational database management systems store your information in long-lived <em>tables<\/em>. For example, WordPress stores your posts and other content in a table called <em>wp_posts<\/em>, and custom post fields in another table called <em>wp_postmeta<\/em>.  A successful site can have thousands of posts and hundreds of thousands of custom post fields. MySQL has two jobs:<\/p>\n<ol>\n<li>Keep all that data organized.<\/li>\n<li>Find the data it needs quickly.<\/li>\n<\/ol>\n<p>To do its second job, MySQL uses database keys. Each table has one or more keys. For example, <code>wp_posts<\/code> has a key to let it quickly find posts when you know the author. Without its <em>post_author<\/em> key MySQL would have to scan every one of your posts looking for matches to the author you want. Our users know what that looks like: slow. With the key, MySQL can jump right to the matching posts.<\/p>\n<p>In a new WordPress site with a couple of users and a dozen posts, the keys don&#8217;t matter very much. As the site grows the keys start to matter, a lot. Database management systems are designed to have their keys updated, adjusted, and tweaked as their tables grow. They&#8217;re designed to allow the keys to evolve without changing the content of the underlying tables. In organizations with large databases adding, dropping, or altering keys doesn&#8217;t change the underlying data. It is a routine maintenance task in many data centers. If changing keys caused databases to lose data, the MySQL and MariaDB developers would hear howling not just from you and me, but from many heavyweight users. (You should still back up your WordPress instance of course.)<\/p>\n<p>Better keys allow WordPress&#8217;s code to run faster <em>without any code changes<\/em>.  Experience with large sites shows that many MySQL slowdowns can be improved by better keys. Code is poetry, data is treasure, and database keys are grease that makes code and data work together smoothly.<\/p>\n<h4>Which tables does the plugin add keys to?<\/h4>\n<p>This plugin adds and updates keys in these WordPress tables.<\/p>\n<ul>\n<li>wp_comments<\/li>\n<li>wp_commentmeta<\/li>\n<li>wp_posts<\/li>\n<li>wp_postmeta<\/li>\n<li>wp_termmeta<\/li>\n<li>wp_users<\/li>\n<li>wp_usermeta<\/li>\n<li>wp_options<\/li>\n<\/ul>\n<p>You only need run this plugin once to get its benefits.<\/p>\n<h4>How can I monitor my database&#8217;s operation?<\/h4>\n<p>On the Index MySQL page (from your Tools menu on your dashboard), you will find the &#8220;Monitor Database Operations&#8221; tab. Use it to request monitoring for a number of minutes you choose.<\/p>\n<p>You can monitor<\/p>\n<ul>\n<li>either the site (your user-visible pages) or the dashboard, or both.<\/li>\n<li>all pageviews, or a random sample. (Random samples are useful on very busy sites to reduce monitoring overhead.)<\/li>\n<\/ul>\n<p>Once you have gathered monitoring information, you can view the captured queries, and sort them by how long they take. Or you can save the monitor information to a file and show it to somebody who knows about database operations. Or you can upload the monitor to the plugin&#8217;s servers so the authors can look at it.<\/p>\n<p>It&#8217;s a good idea to monitor for a five-minute interval at a time of day when your site is busy. Once you&#8217;ve completed a monitor, you can examine it to determine which database operations are slowing you down the most.<\/p>\n<p>Please consider uploading your saved monitors to the plugin&#8217;s servers. It&#8217;s how we learn from your experience to keep improving. Push the Upload button on the monitor&#8217;s tab.<\/p>\n<h4>WP-CLI command line operation<\/h4>\n<p>This plugin supports <a href=\"https:\/\/wp-cli.org\/\" rel=\"nofollow ugc\">WP-CLI<\/a>.  When your tables are large this is the best way to add the high-performance keys: it doesn&#8217;t time out.<\/p>\n<p>Give the command <code>wp help index-mysql<\/code> for details. A few examples:<\/p>\n<ul>\n<li><code>wp index-mysql status<\/code> shows the current status of high-performance keys.<\/li>\n<li><code>wp index-mysql enable --all<\/code> adds the high-performance keys to all tables that don&#8217;t have them.<\/li>\n<li><code>wp index-mysql enable wp_postmeta<\/code> adds the high-performance keys to the postmeta table.<\/li>\n<li><code>wp index-mysql disable --all<\/code> removes the high-performance keys from all tables that have them, restore WordPress&#8217;s default keys.<\/li>\n<li><code>wp index-mysql enable --all --dryrun<\/code> writes out the SQL statements necessary to add the high-performance keys to all tables, but does not run them.<\/li>\n<li><code>wp index-mysql enable --all --dryrun | wp db query<\/code> writes out the SQL statements and pipes them to wp db to run them.<\/li>\n<\/ul>\n<p>Note: avoid saving the &#8211;dryrun output statements to run later. The plugin generates them to match the current state of your tables.<\/p>\n<h4>What&#8217;s new in the latest version?<\/h4>\n<p>Since the first release, our users have told us about several more opportunities to speed up their WooCommerce and core WordPress operations. We&#8217;ve added keys to the <code>meta<\/code> tables to help with searching for content, and to the <code>users<\/code> table to look people up by their display names. And, you can now upload saved Monitors so we can see your slowest queries. We&#8217;ll use that information to improve future versions. Thanks, dear users!<\/p>\n<p>The plugin now handles WordPress version updates correctly: they don&#8217;t change your high-performance keys.<\/p>\n<p>We have added the &#8211;dryrun switch to the WP-CLI interface for those who want to see the SQL statements we use.<\/p>\n<h4>Why use this plugin?<\/h4>\n<p>Three reasons (maybe four):<\/p>\n<ol>\n<li>to save carbon footprint.<\/li>\n<li>to save carbon footprint.<\/li>\n<li>to save carbon footprint.<\/li>\n<li>to save people time.<\/li>\n<\/ol>\n<p>Seriously, the microwatt hours of electricity saved by faster web site technologies add up fast, especially at WordPress&#8217;s global scale.<\/p>\n<h4>Credits<\/h4>\n<ul>\n<li>Michael Uno for Admin Page Framework.<\/li>\n<li>Marco Cesarato for LiteSQLParser.<\/li>\n<li>Allan Jardine for Datatables.net.<\/li>\n<li>Japreet Sethi for advice, and for testing on his large installation.<\/li>\n<li>Rick James for everything.<\/li>\n<li>Jetbrains for their IDE tools, especially PhpStorm. It&#8217;s hard to imagine trying to navigate an epic code base without their tools.<\/li>\n<\/ul>\n","installation":"<p>You may install this plugin by visiting Plugins &gt; Add New on your site&#8217;s Dashboard, then searching for <em>Index WP MySQL For Speed<\/em> and following the usual installation workflow.<\/p>\n<p>When you activate it, it will copy <a href=\"https:\/\/www.plumislandmedia.net\/reference\/filtering-database-changes-during-wordpress-updates\/\" rel=\"nofollow ugc\">a php source file<\/a> into the <a href=\"https:\/\/wordpress.org\/support\/article\/must-use-plugins\/\" rel=\"ugc\">must-use plugins directory<\/a>, <code>wp-content\/mu-plugins<\/code>. Some sites&#8217; configurations prevent the web server from writing files into that directory. In that case the plugin will still work correctly. But, after WordPress core version upgrades you may have to revisit the Tools &gt; Index MySQL page and correct the keying on some tables. Why? The mu-plugin prevents core version updates from trying to change keys.<\/p>\n<h4>Composer<\/h4>\n<p>If you configure your WordPress installation using composer, you may install this plugin into your WordPress top level configuration with the command<\/p>\n<pre><code>composer require \"wpackagist-plugin\/index-wp-mysql-for-speed\":\"^1.4\"\n<\/code><\/pre>\n<p>During composer installation the plugin can automatically copy the necessary source file (see the previous section) into the must-use plugins directory. If you want that to happen, you should include these scripts in your top-level <code>composer.json<\/code> file.<\/p>\n<pre><code> \"scripts\": {\n         \"install-wp-mysql-mu-module\": [\n                 \"@composer --working-dir=wordpress\/wp-content\/plugins\/index-wp-mysql-for-speed install-mu-module\"\n         ],\n         \"post-install-cmd\": [\n                 \"@install-wp-mysql-mu-module\"\n         ],\n         \"post-update-cmd\": [\n                 \"@install-wp-mysql-mu-module\"\n         ]\n     },\n<\/code><\/pre>\n","faq":"\n<dt id='should%20i%20back%20up%20my%20site%20before%20using%20this%3F'>\nShould I back up my site before using this?\n<\/h4>\n<p>\n<p><strong>Yes.<\/strong> You already knew that.<\/p>\n<\/p>\n<dt id='i%20don%27t%20see%20any%20changes%20to%20my%20database%20speed.%20why%20not%3F'>\nI don&#8217;t see any changes to my database speed. Why not?\n<\/h4>\n<p>\n<ul>\n<li>Just installing and activating the plugin is <strong>not enough to make it work<\/strong>. Don&#8217;t forget to visit the Index MySQL Tool under the Tools menu. From there you can press the <strong>Add Keys Now<\/strong> button.<\/li>\n<li>On a modestly sized site (with a few users and a few hundred posts) your database may be fast enough without these keys. The speed improvements are most noticeable on larger sites with many posts and products.<\/li>\n<\/ul>\n<\/p>\n<dt id='i%20use%20a%20nonstandard%20database%20table%20prefix.%20will%20this%20work%20%3F'>\nI use a nonstandard database table prefix. Will this work ?\n<\/h4>\n<p>\n<p><strong>Yes.<\/strong> Some WordPress databases have <a href=\"https:\/\/codex.wordpress.org\/Creating_Tables_with_Plugins#Database_Table_Prefix\" rel=\"nofollow ugc\">nonstandard prefixes<\/a>. That is, their tables are named <em>something_posts<\/em>, <em>something_postmeta<\/em>, and so forth instead of <em>wp_posts<\/em> and <em>wp_postmeta<\/em>. This works with those databases.<\/p>\n<\/p>\n<dt id='my%20wordpress%20host%20offers%20mariadb%2C%20not%20mysql.%20can%20i%20use%20this%20plugin%3F'>\nMy WordPress host offers MariaDB, not MySQL. Can I use this plugin?\n<\/h4>\n<p>\n<p><strong>Yes.<\/strong><\/p>\n<\/p>\n<dt id='which%20versions%20of%20mysql%20and%20mariadb%20does%20this%20support%3F'>\nWhich versions of MySQL and MariaDB does this support?\n<\/h4>\n<p>\n<p>MySQL versions 5.5.62 and above, 5.6.4 and above, 8 and above. MariaDB versions 5.5 and above.<\/p>\n<\/p>\n<dt id='what%20database%20storage%20engine%20does%20this%20support%3F'>\nWhat database Storage Engine does this support?\n<\/h4>\n<p>\n<p><strong>InnoDB only.<\/strong> If your tables use MyISAM (the older storage engine) or the older COMPACT row format, this plugin offers to upgrade them for you.<\/p>\n<\/p>\n<dt id='what%20tables%20and%20keys%20does%20the%20plugin%20change%3F'>\nWhat tables and keys does the plugin change?\n<\/h4>\n<p>\n<p><a href=\"https:\/\/www.plumislandmedia.net\/index-wp-mysql-for-speed\/tables_and_keys\/\" rel=\"nofollow ugc\">Please read this<\/a>.<\/p>\n<\/p>\n<dt id='is%20this%20safe%3F%20can%20i%20add%20high-performance%20keys%20and%20revert%20back%20to%20wordpress%20standard%20keys%20safely%3F'>\nIs this safe? Can I add high-performance keys and revert back to WordPress standard keys safely?\n<\/h4>\n<p>\n<p>Yes. it is safe to add keys and revert them. Changing keys is a routine database-maintenance operation.<\/p>\n<p>As you know you should still keep backups of your site: other things can cause data loss.<\/p>\n<\/p>\n<dt id='i%20got%20a%20fatal%20error%20trying%20to%20add%20keys.%20how%20can%20i%20fix%20that%3F'>\nI got a fatal error trying to add keys. How can I fix that?\n<\/h4>\n<p>\n<p>Sometimes the Index WP MySQL For Speed plugin for WordPress generates errors when you use it to add keys. These can look like this or similar:<\/p>\n<pre><code>Fatal error: Uncaught ImfsException: [0]: Index for table 'wp_postmeta' is corrupt; try to repair it\n<\/code><\/pre>\n<p>First, don&#8217;t panic. This (usually) does not mean your site has been corrupted. It simply means your MariaDB or MySQL server was not able to add the keys to that particular table. Your site will still function, but you won\u2019t get the benefit of high-performance keys on the particular table. Very large tables are usually the ones causing this kind of error. Very likely you ran out of temporary disk space on your MariaDB or MySQL database server machine. The database server makes a temporary copy of a table when you add keys to it; that allows it to add the keys without blocking your users.<\/p>\n<p>It\u2019s possible to correct this problem by changing your MariaDB or MySQL configuration. <a href=\"https:\/\/wordpress.org\/support\/topic\/fatal-error-uncaught-exception-29\/\" rel=\"ugc\">Instructions are here<\/a>.<\/p>\n<\/p>\n<dt id='what%20happens%20to%20my%20tables%20and%20keys%20during%20a%20wordpress%20version%20update%3F'>\nWhat happens to my tables and keys during a WordPress version update?\n<\/h4>\n<p>\n<p>If the plugin is activated during a WordPress version update, it prevents the update workflow from removing your high-performance keys (Version 1.4.7).<\/p>\n<\/p>\n<dt id='my%20site%20has%20thousands%20of%20registered%20users.%20my%20users%2C%20posts%2C%20and%20pages%20panels%20in%20my%20dashboard%20are%20still%20load%20slowly%20even%20with%20this%20plugin.'>\nMy site has thousands of registered users. My Users, Posts, and Pages panels in my dashboard are still load slowly even with this plugin.\n<\/h4>\n<p>\n<p>We have another plugin to handle lots of users, <a href=\"https:\/\/wordpress.org\/plugins\/index-wp-users-for-speed\/\" rel=\"ugc\">Index WP Users For Speed<\/a>. Due to the way WordPress handles users, just changing database keys is not enough to solve those performance problems.<\/p>\n<\/p>\n<dt id='how%20can%20i%20enable%20persistent%20object%20caching%20on%20my%20site%3F'>\nHow can I enable persistent object caching on my site?\n<\/h4>\n<p>\n<p>Persistent object caching can help your site&#8217;s database performance by reducing its workload. You can read about it <a href=\"https:\/\/developer.wordpress.org\/reference\/classes\/wp_object_cache\/#persistent-cache-plugins\" rel=\"nofollow ugc\">here<\/a>. If your hosting provider doesn&#8217;t offer redis or memcached cache-server technology you can try using our <a href=\"https:\/\/wordpress.org\/plugins\/sqlite-object-cache\/\" rel=\"ugc\">SQLite Object Cache<\/a> plugin for the purpose.<\/p>\n<\/p>\n<dt id='why%20did%20the%20size%20of%20my%20tables%20grow%20when%20i%20added%20high-performance%20keys%3F'>\nWhy did the size of my tables grow when I added high-performance keys?\n<\/h4>\n<p>\n<p>Database keying works by making copies of your table\u2019s data organized in ways that are easy to randomly access. Your MariaDB or MySQL server automatically maintains the copies of your data as you insert or update rows to each table.  And, the keying task adjusts the amount of free space in each block of your table\u2019s data in preparation for the insertion of new rows. When free space is available, inserting new rows doesn\u2019t require relatively slow block splits. Tables that have been in use for a long time often need new free space in many blocks. When adding keys, it is normal for table sizes to increase. It\u2019s the oldest tradeoff in computer science: time vs. space.<\/p>\n<\/p>\n<dt id='will%20the%20new%20keys%20be%20valid%20for%20new%20data%20in%20the%20tables%3F'>\nWill the new keys be valid for new data in the tables?\n<\/h4>\n<p>\n<p><strong>Yes<\/strong>. Once the high-performance keys are in place MariaDB and MySQL automatically maintain them as you update,  delete, or insert rows of data to your tables. There is no need to do anything to apply the keys to new data: the DBMS software does that for you.<\/p>\n<\/p>\n<dt id='how%20do%20i%20get%20an%20answer%20to%20another%20question%3F'>\nHow do I get an answer to another question?\n<\/h4>\n<p>\n<p>Please see more questions and answers <a href=\"https:\/\/plumislandmedia.net\/index-wp-mysql-for-speed\/faq\/\" rel=\"nofollow ugc\">here<\/a>.<\/p>\n<\/p>\n\n","changelog":"<h4>1.4.12<\/h4>\n<p>(no changes to keys)<br \/>\nChange max_statement_time session variable if necessary to avoid &#8220;Query execution was interrupted&#8221; errors.<br \/>\nDo ANALYZE TABLE after each rekeying operation.<\/p>\n<h4>1.4.13<\/h4>\n<p>(no changes to keys)<br \/>\nSupport MariaDB 11.x in version-detection code.<\/p>\n<h4>1.4.14<\/h4>\n<p>(no changes to keys)<br \/>\nHandle database version 55853 (no schema changes).<br \/>\nDeal with php 8.2 deprecations.<\/p>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-1.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-1.png?rev=2660091\" alt=\"Use Tools &gt; Index MySQL to view the Dashboard panel.\"><\/a><p>Use Tools &gt; Index MySQL to view the Dashboard panel.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-2.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-2.png?rev=2660091\" alt=\"Choose tables and add High-Performance Keys.\"><\/a><p>Choose tables and add High-Performance Keys.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-3.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-3.png?rev=2660091\" alt=\"Start Monitoring Database Operations, and see saved monitors.\"><\/a><p>Start Monitoring Database Operations, and see saved monitors.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-4.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-4.png?rev=2660091\" alt=\"View a saved monitor to see slow database queries.\"><\/a><p>View a saved monitor to see slow database queries.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-5.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-5.png?rev=2660091\" alt=\"About the plugin.\"><\/a><p>About the plugin.<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-6.png?rev=2660091\"><img src=\"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-6.png?rev=2660091\" alt=\"Use WP CLI to run the plugin&#039;s operations.\"><\/a><p>Use WP CLI to run the plugin's operations.<\/p><\/li><\/ol>","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Queries at least 5 times faster, maybe 10!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/ekmantime\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/ff5185406b973b21b74ec5e59a30da02?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/ff5185406b973b21b74ec5e59a30da02?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/ekmantime\/\" class=\"reviewer-name\">ekmantime<\/a> on <span class=\"review-date\">December 4, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Thank you!<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">Meta queries on a site with over 200,000 posts are now very fast.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">I used WP-CLI and ran:<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>wp index-mysql enable --all<\/code><\/pre>\n<!-- \/wp:code -->\n\n<!-- wp:paragraph -->\n<p class=\"\">Database size increased from 1.5 GB to almost 7 GB, but I don't think that matters in my case.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">Very cool plugin!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">A must for performance optimizations<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/strarsis\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/9baf1b2dbd542b604cf246bcc05bb7cf?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/9baf1b2dbd542b604cf246bcc05bb7cf?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/strarsis\/\" class=\"reviewer-name\">strarsis<\/a> on <span class=\"review-date\">December 2, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">Database indices can make huge differences in performance.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">This plugin is really well made, with preset indices and a query monitor.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">A MUST HAVE FOR WORDPRESS SPEED<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/senator94\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/2cf6d65a965cf562f53824f968e48043?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/2cf6d65a965cf562f53824f968e48043?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/senator94\/\" class=\"reviewer-name\">senator94<\/a> on <span class=\"review-date\">November 28, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">I have been using WordPress since 2004 and have always struggled with optimizing sites for maximum speed. Currently, I run a dedicated AMD EPYC server with 128 GB RAM on LiteSpeed Enterprise with CyberPanel web manager. All my sites have Redis object cache enabled. I was able to bring down my server load and speed up my biggest WordPress sites with over 10,000 pages, and 2 million page views a month with the \"Index WP MySQL For Speed\" plugin. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">WordPress performance team should concentrate on actual database optimizations instead SQLite(not many people use this in the real world). <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">I highy recommend this plugin for big sites, WooCommerce and sites with many users. <\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">Great job!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Impressive<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/wilcosky\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/beed1eabed695f77cae4431a5a6f349b?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/beed1eabed695f77cae4431a5a6f349b?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/wilcosky\/\" class=\"reviewer-name\">wilcosky<\/a> on <span class=\"review-date\">November 24, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">My WordPress-powered sites aren't popular and don't have a lot of posts yet. Still, I noticed a difference in speed immediately.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Install for Awesome Performance<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/treestrees\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/6cf1ca596ae1c48cef3d76c22e8bce15?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/6cf1ca596ae1c48cef3d76c22e8bce15?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/treestrees\/\" class=\"reviewer-name\">treestrees<\/a> on <span class=\"review-date\">November 13, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">TLDR; Massively increases site speed in terms of database queries. Install it, you won't regret it!<br \/><br \/>Long review (because authors deserve it): My use case is a a high post site (400k posts targeting a few million by next year). 300k monthly uniques, increasing 10% monthly. I use the WP REST api to post articles and was frequently getting 50x errors when uploading images\/posts. This plugin saved me! <br \/><br \/><strong>To give you an idea of performance gain:<br \/>Virtual Server:<\/strong> Quad core, 8gb RAM<br \/><strong>Before this plugin: <\/strong>upload 2x posts simultaneously and server would give 50x errors. All 4 CPU cores were maxed out and server had stopped responding!<br \/><br \/><strong>With plugin and table indexing activated:<\/strong> I can now upload 5x 2,000 word posts, with images, <strong><em>simultaneously<\/em><\/strong> and CPU usage doesn't even max out one core!<br \/><br \/>Plugin has saved me spending 100+ on dedicated hardware, which would have cost thousands annually. Authors should really think about adding a premium version with even more performance gain ;)<br \/><br \/>I would pay in a heartbeat!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Top class<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pipdig\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/8c0c729678fe15744826008627a75cb3?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/8c0c729678fe15744826008627a75cb3?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pipdig\/\" class=\"reviewer-name\">pipdig<\/a> on <span class=\"review-date\">September 6, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">It's great to see a plugin like this created and maintained to such a high standard. Thank you Ollie<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">amazing plugin<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/dilinger\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/fe957e280a40fdf79ea254c8da6c033c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/fe957e280a40fdf79ea254c8da6c033c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/dilinger\/\" class=\"reviewer-name\">dilinger<\/a> on <span class=\"review-date\">August 25, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">We had caching through nginx handling most pages, but for logged in users or GET queries pages took 10-15s to load even with no load on the machine. I tried messing with thread pools, memcached\/redis, and various other things before installing Query Monitor and seeing that a single query to the postmeta table (which only had 260k entries!) would take 2-3 seconds by itself. After installing this plugin and creating a key for that single table, our pages now load in half a second. Thanks so much!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">AMAZING<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/p4r0dy\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/39c1f7d6ff394ef4e6986072ca815dac?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/39c1f7d6ff394ef4e6986072ca815dac?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/p4r0dy\/\" class=\"reviewer-name\">Eduard Armstrong <small>(p4r0dy)<\/small><\/a> on <span class=\"review-date\">August 20, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This plugin its <strong>simply amazing<\/strong> i cant thank you guys enough. I have a server with 12 Intel Processor Cores. 32 GB of RAM and like 150 sites over it.  It optimized my server from like 400% use of CPU by MariaDB service to max 30%. It should be included with wordpress core<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Incredible speed improvement!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/krstarica\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/e8101225fd3f60abffdf7163e23c38a7?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/e8101225fd3f60abffdf7163e23c38a7?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/krstarica\/\" class=\"reviewer-name\">net <small>(Krstarica)<\/small><\/a> on <span class=\"review-date\">August 3, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">This must be integrated into the WordPress Core.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Very usefull for innodb and wp<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/webdeweb\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/03d3d0d52b41a4100e1ed74aabf3da3b?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/03d3d0d52b41a4100e1ed74aabf3da3b?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/webdeweb\/\" class=\"reviewer-name\">webdeweb<\/a> on <span class=\"review-date\">July 14, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>Very usefull plugin for mysql myisam to innodb convertion. And wordpress line a jet now. Thanks a lot.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.14.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-1.png?rev=2660091","caption":"Use Tools &gt; Index MySQL to view the Dashboard panel."},"2":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-2.png?rev=2660091","caption":"Choose tables and add High-Performance Keys."},"3":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-3.png?rev=2660091","caption":"Start Monitoring Database Operations, and see saved monitors."},"4":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-4.png?rev=2660091","caption":"View a saved monitor to see slow database queries."},"5":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-5.png?rev=2660091","caption":"About the plugin."},"6":{"src":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/screenshot-6.png?rev=2660091","caption":"Use WP CLI to run the plugin's operations."}},"tags":{"database":"database","index":"index","key":"key","mysql":"mysql","performance":"performance"},"versions":{"0.1.2":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.0.1.2.zip","0.1.3":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.0.1.3.zip","0.9.1":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.0.9.1.zip","1.0.1":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.0.1.zip","1.0.2":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.0.2.zip","1.2.0":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.2.0.zip","1.2.1":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.2.1.zip","1.2.2":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.2.2.zip","1.2.3":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.2.3.zip","1.3.0":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.3.0.zip","1.3.2":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.3.2.zip","1.3.3":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.3.3.zip","1.4.1":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.1.zip","1.4.10":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.10.zip","1.4.11":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.11.zip","1.4.12":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.12.zip","1.4.13":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.13.zip","1.4.14":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.14.zip","1.4.2":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.2.zip","1.4.3":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.3.zip","1.4.4":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.4.zip","1.4.5":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.5.zip","1.4.6":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.6.zip","1.4.7":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.7.zip","1.4.8":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.8.zip","1.4.9":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.1.4.9.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/index-wp-mysql-for-speed.zip"},"donate_link":"","banners":{"low":"https:\/\/ps.w.org\/index-wp-mysql-for-speed\/assets\/banner-772x250.png?rev=2652667","high":false}}