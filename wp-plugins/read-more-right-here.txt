{"name":"Read More Right Here","slug":"read-more-right-here","version":"2.0.0","author":"<a href=\"http:\/\/www.wooliet.com\">William King<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/wooliet\/","contributors":{"wooliet":{"profile":"https:\/\/profiles.wordpress.org\/wooliet\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/29925d6349381443447f1093d58a885e?s=96&d=monsterid&r=g","display_name":""}},"requires":"3.0","tested":"3.3.2","requires_php":false,"requires_plugins":[],"rating":100,"ratings":{"5":3,"4":0,"3":0,"2":0,"1":0},"num_ratings":3,"support_threads":0,"support_threads_resolved":0,"active_installs":500,"last_updated":"2012-01-13 10:15am GMT","added":"2008-09-26","homepage":"http:\/\/www.wooliet.com\/wp-plugins\/","sections":{"description":"<p>&#8220;Read More Right Here&#8221; uses the jQuery framework already included with WordPress installations. RMRH hooks into the WordPress creation of the<br \/>\n&#8220;more&#8221; link and adds a custom class.  When your blog is loaded, all links of this custom class are modified to no longer send the user to that post&#8217;s<br \/>\nsingle page display when clicked. Instead, the WordPress database is queried for that specific post, and all content after the <!--more--> tag (i.e. only what you need) is returned.<br \/>\nThe new content is then immediately displayed to the user, inline with the opening content.<\/p>\n<p>For more information, please visit the <a href=\"http:\/\/www.wooliet.com\/wp-plugins\/\" rel=\"nofollow ugc\">Woolie T. WP plugins page<\/a>.<\/p>\n","installation":"<ol>\n<li>Upload the <code>read-more-right-here<\/code> directory (&#8220;unzipped&#8221;) to the <code>\/wp-content\/plugins\/<\/code> directory<\/li>\n<li>Find &#8220;Read More Right Here&#8221; in the &#8216;Plugins&#8217; menu in WordPress and click &#8220;Activate&#8221;<\/li>\n<li>Visit &#8220;Settings &gt; Read More Right Here&#8221; to customize<\/li>\n<\/ol>\n","faq":"\n<h4>After the post content is pulled, how can I change the &#8216;red more&#8217; text to something more accurate, like &#8216;read less?<\/h4>\n<p>\n<p>The &#8220;Link Text On Expanded Content&#8221; option is avaiable on the plugin&#8217;s Settings page.<\/p>\n<\/p>\n<h4>I am using a lightbox plugin, and none of the &#8216;more&#8217; content that is pulled down gets lightbox-ized.<\/h4>\n<p>\n<p>Some plugins, like this one, depend on javascript to implement much of its functionality. The javascript code that searches your page looking<br \/>\nfor images to lightbox or &#8216;more links&#8217; to modify, is triggered <em>once<\/em>, when the page has completely loaded.  New content dynamically added to the<br \/>\npage later will not receive this special treatment.<\/p>\n<p>Starting with WordPress 3.0, jQuery 1.4.2 is included. Plugin authors who make use of its <a href=\"http:\/\/api.jquery.com\/live\/\" rel=\"nofollow ugc\">live<\/a> or <a href=\"http:\/\/api.jquery.com\/delegate\/\" rel=\"nofollow ugc\">delegate<\/a><br \/>\nfunctions will most likely be able to avoid this issue.<\/p>\n<\/p>\n<h4>Is there anyway to determine when new content has been displayed for a post?<\/h4>\n<p>\n<p>The &#8216;Read More Right Here&#8217; plugin client-side code triggers custom &#8220;events&#8221; using jQuery&#8217;s <a href=\"http:\/\/api.jquery.com\/trigger\/\" rel=\"nofollow ugc\">trigger<\/a> method. Other scripts loaded to the page can hook into these events to offer additional functionality.<\/p>\n<ul>\n<li>&#8216;RMRHContentExpanded&#8217; is triggered when the new content is displayed<\/li>\n<li>&#8216;RMRHContentCollapsed&#8217; is triggered when the new content is hidden<\/li>\n<\/ul>\n<p>The events are triggered by the &#8216;more-link&#8217; anchor element. Any element futher up the DOM can handle them.<br \/>\nExample code for handling these events:<\/p>\n<pre><code>\/\/ '.post' is the post containing element. \njQuery('.post').bind('RMRHContentExpanded RMRHContentCollapsed',function(e,data)\n{\n    console.log(e.type);\n    console.log(data.itemId);\n    console.log(data.moreContentEl);\n    console.log(data.linkEl);\n\n    \/\/ return false; \/\/ prevents event from bubbling up the DOM\n});\n<\/code><\/pre>\n<\/p>\n<h4>When the new content is loaded on the page, there are a bunch of weird looking characters in the text that shouldn&#8217;t be there. What do I do?<\/h4>\n<p>\n<p>One option is to visit the plugin&#8217;s Settings page and select the &#8220;Use UTF-8 Decode&#8221; option, which runs the returned content through PHP&#8217;s <a href=\"http:\/\/php.net\/manual\/en\/function.utf8-decode.php\" rel=\"nofollow ugc\">utf8_decode<\/a> function.<\/p>\n<p><a href=\"https:\/\/wordpress.org\/support\/topic\/plugin-read-more-right-here-god-but-international-character-display-bug#post-1476984\" rel=\"ugc\">This thread<\/a> suggests modifying the .htaccess file of the site to include &#8220;AddDefaultCharset UTF-8&#8221;.<\/p>\n<p>Another solution is to change the string encoding at the database level, though that is beyond the scope of this FAQ (because I don&#8217;t know how).<\/p>\n<\/p>\n<h4>I have adsense ads within the content of my post.  This plugin causes weird issues.<\/h4>\n<p>\n<p>There is a limit to the number of adsense ads you can have on a page. If your &#8216;front page&#8217; has ads, and the content pulled by this plugins also<br \/>\ncontains ads, then you might inadvertantly step over the limit once that new content is inserted into the page.<\/p>\n<\/p>\n<h4>Why does the &#8216;read more&#8217; click sometimes take me directly to the single post view of the post, instead of expanding dynamically with the new content (like it should)?<\/h4>\n<p>\n<p>Unfortunately, with IE 7 and 8, embedded flash content cannot be dynamically inserted inline with the rest of the post content.  If that is the browser in use, and if an &#8216;object&#8217; element is found in the new content, the user is immediately sent to the single post view.  Sorry.  For more history on the matter see <a href=\"http:\/\/www.wooliet.com\/2009\/07\/22\/swfobject-ie-and-dynamic-content-a-problem\/\" rel=\"nofollow ugc\">here<\/a>.<\/p>\n<\/p>\n<h4>How do I change the &#8220;loading&#8221; image?<\/h4>\n<p>\n<p>The &#8220;loading&#8221; image used to visually inform the user that the new content is arriving was created using the excellent <a href=\"http:\/\/www.ajaxload.info\/\" rel=\"nofollow ugc\">Ajax Load<\/a> website. To use a different image you<br \/>\ncan create a new one and drop it into this plugin&#8217;s root directory (<em>plugins\/read-more-right-here\/loader<\/em>).  Then visit the plugin&#8217;s Settings page and select that image using the &#8216;Loader Image&#8217; option.<\/p>\n<\/p>\n<h4>What is the &#8220;wt_rmrh-debug.js&#8221; file?<\/h4>\n<p>\n<p>The javascript used for this plugin is found in &#8220;<em>read-more-right-here\/js\/wt_rmrh.js<\/em>&#8220;. It has been compressed using Google&#8217;s <a href=\"http:\/\/code.google.com\/closure\/compiler\/\" rel=\"nofollow ugc\">Closure Compiler<\/a>. The original, uncompressed javascript is also included and is named &#8220;wt_rmrh-debug.js&#8221;. To use the uncompressed javascript file, visit the plugin&#8217;s Settings page and check the &#8216;Use Debug Script&#8217; option.<\/p>\n<\/p>\n\n","changelog":"<h4>2.0.0<\/h4>\n<p>Both client-side and server-side code underwent a major refactor.<\/p>\n<p>The following persistent options were added using the <a href=\"https:\/\/codex.wordpress.org\/Settings_API\" rel=\"nofollow ugc\">WordPress Settings API<\/a><\/p>\n<ul>\n<li>Loader Image: Images found in the &#8220;loader&#8221; directory can be selected as the displayed &#8220;ajax spinner&#8221; image. You can also choose to display nothing.<\/li>\n<li>Link Text On Expanded Content: The &#8216;more link&#8217; text displayed when new content is displayed (e.g. &#8216;read less&#8217;).<\/li>\n<li>New Content Expand Speed: The animation speed at which the new content expands.<\/li>\n<li>Duplicate More Link: If selected, a duplicate &#8216;more link&#8217; is appended to the bottom of new content when it is displayed.<\/li>\n<li>Use with WordPress Pages: If selected, the plugin will work on single pages containing a &#8216;more link&#8217;. See <a href=\"https:\/\/codex.wordpress.org\/Customizing_the_Read_More\" rel=\"nofollow ugc\">here<\/a> for more information.<\/li>\n<li>Use UTF-8 Decode: If selected, the &#8216;more&#8217; content retrived will be passed through PHP&#8217;s <a href=\"http:\/\/php.net\/manual\/en\/function.utf8-decode.php\" rel=\"nofollow ugc\">utf8_decode<\/a> function. It might help for situations such as <a href=\"https:\/\/wordpress.org\/support\/topic\/plugin-read-more-right-here-god-but-international-character-display-bug#post-1476984\" rel=\"ugc\">this<\/a><\/li>\n<li>Use Debug Script: If selected, the uncompressed javascript used by the plugin will be loaded to help with debugging any issues.<\/li>\n<\/ul>\n<p>Also added are client-side &#8220;events&#8221; using jQuery&#8217;s <a href=\"http:\/\/api.jquery.com\/trigger\/\" rel=\"nofollow ugc\">trigger<\/a> method. Other scripts loaded to the page can hook into these events to offer additional functionality.<\/p>\n<ul>\n<li>&#8216;RMRHContentExpanded&#8217; is triggered when the new content is displayed<\/li>\n<li>&#8216;RMRHContentCollapsed&#8217; is triggered when the new content is hidden<\/li>\n<\/ul>\n<p>Sample code for handling these events can be found in the FAQ section.<\/p>\n<h4>1.1.4<\/h4>\n<p>The follow two issues were addressed with this update.<\/p>\n<p><em><a href=\"http:\/\/www.wooliet.com\/2008\/09\/21\/announcing-the-read-more-right-here-wordpress-plugin\/comment-page-1\/#comment-5210\" rel=\"nofollow ugc\">how do you modify the font characteristics in ?read-more-right-here\/read-more-right-here.php? file for the ?read less? text?<\/a><\/em><\/p>\n<p>The &#8216;rmrh-show-more&#8217; class is now added to the &#8216;read more&#8217; anchor element. When click, and new post content is pulled, that class is replaced by &#8216;rmrh-show-less&#8217;. So with each click, the<br \/>\n&#8216;rmrh-show-more&#8217; and &#8216;rmrh-show-less&#8217; classes toggle. This means that a CSS selector like &#8216;a.rmrh-show-more&#8217; and &#8216;a.rmrh-show-less&#8217; can be used to style the links.<\/p>\n<p><em><a href=\"https:\/\/wordpress.org\/support\/topic\/408878\" rel=\"ugc\">What is the call function?<\/a><\/em><\/p>\n<p>The issue above relates to a situation in which new posts are added dyanmically to the page, and therefore the RMRM plugin is not executed against that new content. In this specific case, the<br \/>\nuser has the <a href=\"https:\/\/wordpress.org\/extend\/plugins\/infinite-scroll\/\" rel=\"ugc\">Infinite Scroll<\/a> plugin activated. This plugin allows you to specify a callback function to execute after new posts have been<br \/>\nadded to the page.<\/p>\n<p>RMRH was updated to expose the function &#8216;$.fn.ReadMoreRightHere&#8217;.  If called directly, RMRH will execute against the entire document (ignoring any &#8216;read more&#8217; links it&#8217;s already seen).<br \/>\nIf any argument is passed, it will be treated as the context in which RMRH will execute.  For the Infinite Scroll example, this will work:<\/p>\n<pre><code>    $.fn.ReadMoreRightHere();\n<\/code><\/pre>\n<p>So too will this:<\/p>\n<pre><code>    $.fn.ReadMoreRightHere(arguments[0]);\n<\/code><\/pre>\n<p>The second version will restrict the RMRH plugin to searching for &#8216;more links&#8217; to only the new posts added by Infinite Scroll.<\/p>\n<h4>1.1.3<\/h4>\n<p>Certain code paths called an as-of-yet undefined function. Function now defined earlier.  Thanks to <a href=\"http:\/\/bacsoftwareconsulting.com\/blog\/\" rel=\"nofollow ugc\">Boutros<\/a> for reporting the issue and helping to debug.<\/p>\n<h4>1.1.2<\/h4>\n<p>Previous version using jQuery function not yet available with latest WordPress release.<\/p>\n<h4>1.1.1<\/h4>\n<p>Previous version inadvertently left non-default values.<\/p>\n<h4>1.1.0<\/h4>\n<p>This update is to address the following two issues:<\/p>\n<p><em><a href=\"https:\/\/wordpress.org\/support\/topic\/377299\" rel=\"ugc\">RMRH will not work if the &#8216;more&#8217; link has been modified<\/a><\/em><\/p>\n<p>Previously, RMRH was determining the &#8216;more&#8217; links based on WordPress&#8217;s default class for those links. The post ID was determined using the anchor&#8217;s<br \/>\nnamed element (e.g. #more-388 where 388 is the post ID).  That information is now obtained using a custom class inserted into the link with the<br \/>\nWP &#8216;the_content_more_link&#8217; filter.  This means that other plugins, which modify the final &#8216;more&#8217; link format, will not interfere with this plugin.<\/p>\n<p><em>However<\/em>, a few of the plugins I found that allow you to modify the &#8216;more&#8217; links output do <strong>not<\/strong> use the WP &#8216;the_content_more_link&#8217; filter. They<br \/>\ninstead modify the entire contents of the post. The &#8216;the_content_more_link&#8217; filter runs while WP is formatting the content, and <em>then<\/em> that content<br \/>\nis passed through all registerd filters. The &#8216;more link&#8217; modifying plugins I have looked overwrite entire sections of the link (as opposed to<br \/>\ninserting new text when appropriate). So it is almost certainly likely that if you are using one of the &#8216;more link&#8217; modifying plugins, it will<br \/>\nnot be compatible with this one.<\/p>\n<p><em><a href=\"https:\/\/wordpress.org\/support\/topic\/355497\" rel=\"ugc\">&#8216;console&#8217; is undefined error<\/a><\/em><\/p>\n<p>I inadvertently left debug output in the javascript with my previous version.  <strong>SORRY<\/strong>.<\/p>\n<p>New Features:<\/p>\n<p>The current version of this plugin remains free from leaving any remains of itself behind if uninstalled. However it is likely that future version<br \/>\nwill being to include a proper options page in the admin section of WordPress.  This release is a step in that direction in that new features are<br \/>\navailable, but only by modifying variable values directly in the plugin.  <strong>Please Note<\/strong>: Any changes you make to the plugin directly will be<br \/>\noverwritten by an update to that plugin.<\/p>\n<p>Each of these options are available within the wt_rmrh_oninit function of the read-more-right-here.php file.<\/p>\n<ul>\n<li>\n<p>Change &#8216;more link&#8217; text when content displayed: You can enter new text that will be displayed as the &#8216;more link&#8217;<br \/>\nafter the user. The original text will be returned when the user clicks the link again (collapsing the content)<\/p>\n<\/li>\n<li>\n<p>Duplicate the &#8216;more link&#8217; to the end of the post when the post is expanded.  If the duplicate link is clicked, the<br \/>\nbrowser will first scroll to the position of the original link, and then collapse the content.<\/p>\n<\/li>\n<li>\n<p>Change the content expand\/collapse animation speed<\/p>\n<\/li>\n<\/ul>\n<h4>1.0.5<\/h4>\n<p>Internet Explorer 7 and up will not display the &#8216;object&#8217; element (e.g. embedded flash content) when its dynamically inserted. If that is the browser in use, and if an &#8216;object&#8217; element is found in the new content, the page will immediately redirect to the single post display (instead of expanding to show the new content).<\/p>\n<p>The expand\/collapse animation with &#8216;object&#8217; elements looked pretty bad.  Now, they are not shown until AFTER text has expanded. When collapsing, they are hidden BEFORE the text begins to move.<\/p>\n<p>Using the proper &#8216;is_admin&#8217; WP function to keep plugin out of the admin area.  This was previously done with a PHP 5 only string comparison function against the URL. If the server was still using PHP 4, this function would break things.<\/p>\n<h4>1.0.4<\/h4>\n<p>Method used to obtain plugin&#8217;s root directory no longer worked with 2.8.1 update. It has been changed to use the new:<\/p>\n<pre><code>    plugin_dir_url(__FILE__)\n<\/code><\/pre>\n<p>This change means that the minimum version of WP now required is 2.8.<\/p>\n<h4>1.0.3<\/h4>\n<p>WordPress 2.8 updated its included version of <a href=\"http:\/\/jquery.com\/\" rel=\"nofollow ugc\">jQuery<\/a> to 1.3.2. This required a very minor change to the plugin javascript code. The new jQuery version provides a much smoother animation of the content into and out of view.<\/p>\n<p>For those interested (and because I have no idea why this broke), the change in code was essentially creating the new content with this:<\/p>\n<pre><code>    $j(\"&lt;p&gt;\").html(newContent);\n<\/code><\/pre>\n<p>instead of this:<\/p>\n<pre><code>    $j(\"&lt;p&gt; + newContent + &lt;\/p&gt;\");\n<\/code><\/pre>\n<h4>1.0.2<\/h4>\n<p>Almost immediately after releasing 1.0.1, I became aware of the &#8216;wp_localize_script&#8217; function (see <a href=\"http:\/\/www.prelovac.com\/vladimir\/best-practice-for-adding-javascript-code-to-wordpress-plugin\" rel=\"nofollow ugc\">Best practice for adding JavaScript code to WordPress plugins<\/a>). It negates many of the javascript changes implemented in the previous release and offers a much better solution.<\/p>\n<h4>1.0.1<\/h4>\n<p>Plugin would not function correctly with installations in which WP is used as the root of the domain but the actual WP installed files are within a subdirectory of the root (see codex <a href=\"https:\/\/codex.wordpress.org\/Giving_WordPress_Its_Own_Directory\" rel=\"nofollow ugc\">Giving WordPress Its Own Directory<\/a>).  This has been fixed (thanks to <a href=\"http:\/\/thijsvissia.nl\" rel=\"nofollow ugc\">Thijs<\/a> for the heads-up and solution).<\/p>\n<p>Part of the fix means that the full plugin path used to get the animated &#8220;loading&#8221; image is retrieved as an AJAX call. If the user clicks a &#8220;read more&#8221; link before that call has completed, there will be no GIF associated with that link (but the content will still be pulled and expanded for the user).<\/p>\n<h4>1.0.0<\/h4>\n<p>Initial Release<\/p>\n","screenshots":"<ol><li><a href=\"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-1.jpg?rev=1559360\"><img src=\"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-1.jpg?rev=1559360\" alt=\"User clicked the &quot;Read More&quot; link and the content is loading\"><\/a><p>User clicked the \"Read More\" link and the content is loading<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-2.jpg?rev=1559360\"><img src=\"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-2.jpg?rev=1559360\" alt=\"Plugin Settings page\"><\/a><p>Plugin Settings page<\/p><\/li><\/ol>","reviews":""},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.2.0.0.zip","screenshots":{"1":{"src":"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-1.jpg?rev=1559360","caption":"User clicked the \"Read More\" link and the content is loading"},"2":{"src":"https:\/\/ps.w.org\/read-more-right-here\/trunk\/screenshot-2.jpg?rev=1559360","caption":"Plugin Settings page"}},"tags":{"ajax":"ajax","inline":"inline","more":"more","more-link":"more-link","post":"post"},"versions":{"1.0.0":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.0.zip","1.0.1":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.1.zip","1.0.2":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.2.zip","1.0.3":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.3.zip","1.0.4":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.4.zip","1.0.5":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.0.5.zip","1.1.0":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.1.0.zip","1.1.1":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.1.1.zip","1.1.2":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.1.2.zip","1.1.3":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.1.3.zip","1.1.4":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.1.1.4.zip","2.0.0":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.2.0.0.zip","trunk":"https:\/\/downloads.wordpress.org\/plugin\/read-more-right-here.zip"},"donate_link":"http:\/\/www.wooliet.com\/wp-plugins\/","banners":[]}