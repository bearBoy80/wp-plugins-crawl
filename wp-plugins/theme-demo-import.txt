{"name":"Theme Demo Import","slug":"theme-demo-import","version":"1.1.1","author":"<a href=\"https:\/\/www.themely.com\">Themely<\/a>","author_profile":"https:\/\/profiles.wordpress.org\/themely\/","contributors":{"themely":{"profile":"https:\/\/profiles.wordpress.org\/themely\/","avatar":"https:\/\/secure.gravatar.com\/avatar\/b5f65448f343496a1cdd03c5a2abbe4b?s=96&d=monsterid&r=g","display_name":"themely"}},"requires":"4.7","tested":"6.1.4","requires_php":"5.6","requires_plugins":[],"rating":74,"ratings":{"5":2,"4":0,"3":0,"2":0,"1":1},"num_ratings":3,"support_threads":1,"support_threads_resolved":0,"active_installs":10000,"last_updated":"2022-11-03 1:39pm GMT","added":"2016-10-28","homepage":"https:\/\/wordpress.org\/plugins\/theme-demo-import\/","sections":{"description":"<p>Quickly import demo content, widgets and settings for your new theme. This provides a basic layout to build your website and speed up the development process.<\/p>\n<p>This plugin will create a page in <strong>APPEARANCE &gt; Import Demo Content<\/strong>.<\/p>\n<p>If the theme you are using does not have any predefined import files, then you will be presented with three file upload inputs.<\/p>\n<p>First one is required and you will have to upload a demo content XML file, for the actual demo import.<\/p>\n<p>The second one is optional and will ask you for a WIE or JSON file for widgets import. You create that file using the <a href=\"https:\/\/wordpress.org\/plugins\/widget-importer-exporter\/\" rel=\"ugc\">Widget Importer &amp; Exporter<\/a> plugin.<\/p>\n<p>The third one is also optional and will import the customizer settings, select the DAT file which you can generate from <a href=\"https:\/\/wordpress.org\/plugins\/customizer-export-import\/\" rel=\"ugc\">Customizer Export\/Import<\/a> plugin (the customizer settings will be imported only if the export file was created from the same theme).<\/p>\n<p>This plugin is based off the &#8216;One Click Demo Import&#8217; plugin by @capuderg and @cyman, https:\/\/github.com\/proteusthemes\/one-click-demo-import.<\/p>\n<p>As well as the improved WP Import 2.0 plugin by @humanmade, https:\/\/github.com\/humanmade\/WordPress-Importer.<\/p>\n<h3>License<\/h3>\n<p>Theme Demo Import uses &#8216;One Click Demo Import&#8217; plugin script<br \/>\nhttps:\/\/github.com\/proteusthemes\/one-click-demo-import<br \/>\n(C) 2016 ProteusThemes.com<br \/>\nLicensed under the GNU General Public License v2.0,<br \/>\nhttp:\/\/www.gnu.org\/licenses\/gpl-2.0.html<\/p>\n<p>Theme Demo Import uses &#8216;WordPress Importer&#8217; plugin script<br \/>\nhttps:\/\/github.com\/humanmade\/WordPress-Importer<br \/>\n(C) 2016 @humanmade<br \/>\nLicensed under the GNU General Public License v2.0,<br \/>\nhttp:\/\/www.gnu.org\/licenses\/gpl-2.0.html<\/p>\n<h3>Copyright<\/h3>\n<p>Theme Demo Import, Copyright 2016 Ishmael &#8216;Hans&#8217; Desjarlais<\/p>\n<p>Theme Demo Import is distributed under the terms of the GNU GPL<\/p>\n<p>This program is free software; you can redistribute it and\/or modify<br \/>\nit under the terms of the GNU General Public License as published by<br \/>\nthe Free Software Foundation; either version 2 of the License, or<br \/>\n(at your option) any later version.<\/p>\n<p>This program is distributed in the hope that it will be useful,<br \/>\nbut WITHOUT ANY WARRANTY; without even the implied warranty of<br \/>\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the<br \/>\nGNU General Public License for more details.<\/p>\n<p>You should have received a copy of the GNU General Public License along<br \/>\nwith this program; if not, write to the Free Software Foundation, Inc.,<br \/>\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.<\/p>\n","installation":"<p><strong>From your WordPress dashboard<\/strong><\/p>\n<ol>\n<li>Visit &#8216;Plugins &gt; Add New&#8217;,<\/li>\n<li>Search for &#8216;Theme Demo Import&#8217; and install the plugin.<\/li>\n<li>Activate &#8216;Theme Demo Import&#8217; from your Plugins page.<\/li>\n<\/ol>\n<p>Once the plugin is activated you will find the actual import page in <strong>Appearance -&gt; Import Demo Content.<\/strong><\/p>\n","faq":"\n<dt id='i%20have%20activated%20the%20plugin.%20where%20is%20the%20%22import%20demo%20content%22%20page%3F'>\nI have activated the plugin. Where is the &#8220;Import Demo Content&#8221; page?\n<\/h4>\n<p>\n<p>You will find the import page in <em>wp-admin -&gt; Appearance -&gt; Import Demo Content<\/em>.<\/p>\n<\/p>\n<dt id='where%20are%20the%20demo%20import%20files%20and%20the%20log%20files%20saved%3F'>\nWhere are the demo import files and the log files saved?\n<\/h4>\n<p>\n<p>The files used in the demo import will be saved to the default WordPress uploads directory. An example of that directory would be: <code>..\/wp-content\/uploads\/2016\/03\/<\/code>.<\/p>\n<p>The log file will also be registered in the <em>wp-admin -&gt; Media<\/em> section, so you can access it easily.<\/p>\n<\/p>\n<dt id='how%20to%20predefine%20demo%20imports%3F'>\nHow to predefine demo imports?\n<\/h4>\n<p>\n<p>This question is for theme authors. To predefine demo imports, you just have to add the following code structure, with your own values to your theme (using the <code>theme-demo-import\/import_files<\/code> filter):<\/p>\n<pre><code>function TDI_import_files() {\n    return array(\n        array(\n            'import_file_name'           =&gt; 'Demo Import 1',\n            'import_file_url'            =&gt; 'http:\/\/www.your_domain.com\/tdi\/demo-content.xml',\n            'import_widget_file_url'     =&gt; 'http:\/\/www.your_domain.com\/tdi\/widgets.json',\n            'import_customizer_file_url' =&gt; 'http:\/\/www.your_domain.com\/tdi\/customizer.dat',\n            'import_preview_image_url'   =&gt; 'http:\/\/www.your_domain.com\/tdi\/preview_import_image1.jpg',\n            'import_notice'              =&gt; __( 'After you import this demo, you will have to setup the slider separately.', 'your-textdomain' ),\n        ),\n        array(\n            'import_file_name'           =&gt; 'Demo Import 2',\n            'import_file_url'            =&gt; 'http:\/\/www.your_domain.com\/tdi\/demo-content2.xml',\n            'import_widget_file_url'     =&gt; 'http:\/\/www.your_domain.com\/tdi\/widgets2.json',\n            'import_customizer_file_url' =&gt; 'http:\/\/www.your_domain.com\/tdi\/customizer2.dat',\n            'import_preview_image_url'   =&gt; 'http:\/\/www.your_domain.com\/tdi\/preview_import_image2.jpg',\n            'import_notice'              =&gt; __( 'A special note for this import.', 'your-textdomain' ),\n        ),\n    );\n}\nadd_filter( 'theme-demo-import\/import_files', 'TDI_import_files' );\n<\/code><\/pre>\n<p>You can set content import, widgets, and customizer import files. You can also define a preview image, which will be used only when multiple demo imports are defined, so that the user will see the difference between imports.<\/p>\n<\/p>\n<dt id='how%20to%20automatically%20assign%20%22front%20page%22%2C%20%22posts%20page%22%20and%20menu%20locations%20after%20the%20importer%20is%20done%3F'>\nHow to automatically assign &#8220;Front page&#8221;, &#8220;Posts page&#8221; and menu locations after the importer is done?\n<\/h4>\n<p>\n<p>You can do that, with the <code>theme-demo-import\/after_import<\/code> action hook. The code would look something like this:<\/p>\n<pre><code>function TDI_after_import_setup() {\n    \/\/ Assign menus to their locations.\n    $main_menu = get_term_by( 'name', 'Top Menu', 'nav_menu' );\n\n    set_theme_mod( 'nav_menu_locations', array(\n            'primary-menu' =&gt; $main_menu-&gt;term_id,\n        )\n    );\n\n    \/\/ Assign front page and posts page (blog page).\n    $front_page_id = get_page_by_title( 'Home' );\n    $blog_page_id  = get_page_by_title( 'Blog' );\n\n    update_option( 'show_on_front', 'page' );\n    update_option( 'page_on_front', $front_page_id-&gt;ID );\n    update_option( 'page_for_posts', $blog_page_id-&gt;ID );\n\n}\nadd_action( 'theme-demo-import\/after_import', 'TDI_after_import_setup' );\n<\/code><\/pre>\n<\/p>\n<dt id='what%20about%20using%20local%20import%20files%20%28from%20theme%20folder%29%3F'>\nWhat about using local import files (from theme folder)?\n<\/h4>\n<p>\n<p>You have to use the same filter as in above example, but with a slightly different array keys: <code>local_*<\/code>. The values have to be absolute paths (not URLs) to your import files. To use local import files, that reside in your theme folder, please use the below code. Note: make sure your import files are readable!<\/p>\n<pre><code>function TDI_import_files() {\n    return array(\n        array(\n            'import_file_name'             =&gt; 'Demo Import 1',\n            'local_import_file'            =&gt; trailingslashit( get_template_directory() ) . 'tdi\/demo-content.xml',\n            'local_import_widget_file'     =&gt; trailingslashit( get_template_directory() ) . 'tdi\/widgets.json',\n            'local_import_customizer_file' =&gt; trailingslashit( get_template_directory() ) . 'tdi\/customizer.dat',\n            'import_preview_image_url'     =&gt; 'http:\/\/www.your_domain.com\/tdi\/preview_import_image1.jpg',\n            'import_notice'                =&gt; __( 'After you import this demo, you will have to setup the slider separately.', 'your-textdomain' ),\n        ),\n        array(\n            'import_file_name'             =&gt; 'Demo Import 2',\n            'local_import_file'            =&gt; trailingslashit( get_template_directory() ) . 'tdi\/demo-content2.xml',\n            'local_import_widget_file'     =&gt; trailingslashit( get_template_directory() ) . 'tdi\/widgets2.json',\n            'local_import_customizer_file' =&gt; trailingslashit( get_template_directory() ) . 'tdi\/customizer2.dat',\n            'import_preview_image_url'     =&gt; 'http:\/\/www.your_domain.com\/tdi\/preview_import_image2.jpg',\n            'import_notice'                =&gt; __( 'A special note for this import.', 'your-textdomain' ),\n        ),\n    );\n}\nadd_filter( 'theme-demo-import\/import_files', 'TDI_import_files' );\n<\/code><\/pre>\n<\/p>\n<dt id='how%20to%20handle%20different%20%22after%20import%20setups%22%20depending%20on%20which%20predefined%20import%20was%20selected%3F'>\nHow to handle different &#8220;after import setups&#8221; depending on which predefined import was selected?\n<\/h4>\n<p>\n<p>This question might be asked by a theme author wanting to implement different after import setups for multiple predefined demo imports. Lets say we have predefined two demo imports with the following names: &#8216;Demo Import 1&#8217; and &#8216;Demo Import 2&#8217;, the code for after import setup would be (using the <code>theme-demo-import\/after_import<\/code> filter):<\/p>\n<pre><code>function TDI_after_import( $selected_import ) {\n    echo \"This will be displayed on all after imports!\";\n\n    if ( 'Demo Import 1' === $selected_import['import_file_name'] ) {\n        echo \"This will be displayed only on after import if user selects Demo Import 1\";\n\n        \/\/ Set logo in customizer\n        set_theme_mod( 'logo_img', get_template_directory_uri() . '\/assets\/images\/logo1.png' );\n    }\n    elseif ( 'Demo Import 2' === $selected_import['import_file_name'] ) {\n        echo \"This will be displayed only on after import if user selects Demo Import 2\";\n\n        \/\/ Set logo in customizer\n        set_theme_mod( 'logo_img', get_template_directory_uri() . '\/assets\/images\/logo2.png' );\n    }\n}\nadd_action( 'theme-demo-import\/after_import', 'TDI_after_import' );\n<\/code><\/pre>\n<\/p>\n<dt id='can%20i%20add%20some%20code%20before%20the%20widgets%20get%20imported%3F'>\nCan I add some code before the widgets get imported?\n<\/h4>\n<p>\n<p>Of course you can, use the <code>theme-demo-import\/before_widgets_import<\/code> action. You can also target different predefined demo imports like in the example above. Here is a simple example code of the <code>theme-demo-import\/before_widgets_import<\/code> action:<\/p>\n<pre><code>function TDI_before_widgets_import( $selected_import ) {\n    echo \"Add your code here that will be executed before the widgets get imported!\";\n}\nadd_action( 'theme-demo-import\/before_widgets_import', 'TDI_before_widgets_import' );\n<\/code><\/pre>\n<\/p>\n<dt id='i%27m%20a%20theme%20author%20and%20i%20want%20to%20change%20the%20plugin%20intro%20text%2C%20how%20can%20i%20do%20that%3F'>\nI&#8217;m a theme author and I want to change the plugin intro text, how can I do that?\n<\/h4>\n<p>\n<p>You can change the plugin intro text by using the <code>theme-demo-import\/plugin_intro_text<\/code> filter:<\/p>\n<pre><code>function TDI_plugin_intro_text( $default_text ) {\n    $default_text .= '&lt;div class=\"TDI__intro-text\"&gt;This is a custom text added to this plugin intro text.&lt;\/div&gt;';\n\n    return $default_text;\n}\nadd_filter( 'theme-demo-import\/plugin_intro_text', 'TDI_plugin_intro_text' );\n<\/code><\/pre>\n<p>To add some text in a separate &#8220;box&#8221;, you should wrap your text in a div with a class of &#8216;TDI__intro-text&#8217;, like in the code example above.<\/p>\n<\/p>\n<dt id='how%20to%20disable%20generation%20of%20smaller%20images%20%28thumbnails%29%20during%20the%20content%20import'>\nHow to disable generation of smaller images (thumbnails) during the content import\n<\/h4>\n<p>\n<p>This will greatly improve the time needed to import the content (images), but only the original sized images will be imported. You can disable it with a filter, so just add this code to your theme function.php file:<\/p>\n<pre><code>add_filter( 'theme-demo-import\/regenerate_thumbnails_in_content_import', '__return_false' );\n<\/code><\/pre>\n<\/p>\n<dt id='how%20to%20change%20the%20location%2C%20title%20and%20other%20parameters%20of%20the%20plugin%20page%3F'>\nHow to change the location, title and other parameters of the plugin page?\n<\/h4>\n<p>\n<p>As a theme author you do not like the location of the &#8220;Import Demo Content&#8221; plugin page in <em>Appearance -&gt; Import Demo Content<\/em>? You can change that with the filter below. Apart from the location, you can also change the title or the page\/menu and some other parameters as well.<\/p>\n<pre><code>function TDI_plugin_page_setup( $default_settings ) {\n    $default_settings['parent_slug'] = 'themes.php';\n    $default_settings['page_title']  = esc_html__( 'Theme Demo Import' , 'theme-demo-import' );\n    $default_settings['menu_title']  = esc_html__( 'Import Demo Content' , 'theme-demo-import' );\n    $default_settings['capability']  = 'import';\n    $default_settings['menu_slug']   = 'theme-demo-import';\n\n    return $default_settings;\n}\nadd_filter( 'theme-demo-import\/plugin_page_setup', 'TDI_plugin_page_setup' );\n<\/code><\/pre>\n<\/p>\n<dt id='i%20can%27t%20activate%20the%20plugin%2C%20because%20of%20a%20fatal%20error%2C%20what%20can%20i%20do%3F'>\nI can&#8217;t activate the plugin, because of a fatal error, what can I do?\n<\/h4>\n<p>\n<p><em>Update: There is now a admin error notice, stating that the minimal PHP version required for this plugin is 5.3.2.<\/em><\/p>\n<p>You want to activate the plugin, but this error shows up:<\/p>\n<p><em>Plugin could not be activated because it triggered a fatal error<\/em><\/p>\n<p>This happens, because your hosting server is using a very old version of PHP. This plugin requires PHP version of at least <strong>5.3.x<\/strong>, but we recommend version <em>5.6.x<\/em>. Please contact your hosting company and ask them to update the PHP version for your site.<\/p>\n<\/p>\n\n","changelog":"<p><strong>1.1.1 &#8211; November 2nd, 2022<\/strong><\/p>\n<ul>\n<li>SECURITY FIX: Prevent uploading PHP files<\/li>\n<\/ul>\n<p><strong>1.0.5 &#8211; March 29, 2019<\/strong><\/p>\n<ul>\n<li>Removed extra $ on line 72 of class-tdi-helpers.php which was triggering a PHP 7.0+ error<\/li>\n<\/ul>\n<p><strong>1.0.2 &#8211; 10\/25\/2016<\/strong><\/p>\n<ul>\n<li>Removed dependencies on 3rd party plugin<\/li>\n<li>Renamed classes for HM files<\/li>\n<li>Added license and copyright information to readme.txt file<\/li>\n<li>Updated the plugin description<\/li>\n<\/ul>\n<p><strong>1.0.1 &#8211; 10\/15\/2016<\/strong><\/p>\n<ul>\n<li>Updated text strings<\/li>\n<li>Updated styles (UI)<\/li>\n<li>Removed unnecessary code<\/li>\n<\/ul>\n<p><strong>1.0.0 &#8211; 10\/10\/2016<\/strong><\/p>\n<ul>\n<li>INITIAL RELEASE<\/li>\n<\/ul>\n","reviews":"<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Site crashed after install<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"1 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"1\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/josflachs\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/6dd849884faf622a70628c7e7cbacd49?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/6dd849884faf622a70628c7e7cbacd49?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/josflachs\/\" class=\"reviewer-name\">josflachs<\/a> on <span class=\"review-date\">August 20, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">I installed the plugin, the site crashed immediately. Error message:<br \/><br \/><strong>Warning<\/strong>: The magic method Theme_Demo_Import::__wakeup() must have public visibility in\u00a0<strong>\/yyy\/zzz\/Local Sites\/mega\/app\/public\/wp-content\/plugins\/theme-demo-import\/inc\/class-tdi-main.php<\/strong>\u00a0on line\u00a0<strong>74<\/strong><\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\"><strong>Fatal error<\/strong>: Cannot redeclare get_cli_args() (previously declared in \/home\/jos\/Local Sites\/mega\/app\/public\/wp-admin\/includes\/class-wp-importer.php:276) in\u00a0<strong>\/yyy\/zzz\/Local Sites\/mega\/app\/public\/wp-admin\/includes\/class-wp-importer.php<\/strong>\u00a0on line\u00a0<strong>326<\/strong><\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Perfect<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/wowthemesnet\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/e56154546cf4be74e393c62d1ae9f9d4?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/e56154546cf4be74e393c62d1ae9f9d4?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/wowthemesnet\/\" class=\"reviewer-name\">wowthemesnet<\/a> on <span class=\"review-date\">March 10, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>Simple and perfect. It does what it says drama free.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works great<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/themely\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/b5f65448f343496a1cdd03c5a2abbe4b?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/b5f65448f343496a1cdd03c5a2abbe4b?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/themely\/\" class=\"reviewer-name\">themely<\/a> on <span class=\"review-date\">November 2, 2016<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">We've tested this plugin extensively and packaged it with our themes, it works flawlessly.<\/div>\n<\/div>\n"},"download_link":"https:\/\/downloads.wordpress.org\/plugin\/theme-demo-import.zip","screenshots":[],"tags":{"content":"content","data":"data","demo":"demo","import":"import","widgets":"widgets"},"versions":[],"donate_link":"","banners":{"low":"https:\/\/ps.w.org\/theme-demo-import\/assets\/banner-772x250.png?rev=1523494","high":"https:\/\/ps.w.org\/theme-demo-import\/assets\/banner-1544x500.png?rev=1523494"}}